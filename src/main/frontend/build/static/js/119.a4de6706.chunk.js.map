{"version":3,"file":"static/js/119.a4de6706.chunk.js","mappings":"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","sources":["components/HomeUser.js","../node_modules/@mui/material/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/@mui/material/node_modules/react-is/index.js"],"sourcesContent":["\r\nimport React, { useEffect,useState} from 'react';\r\nimport axios from \"axios\";\r\nimport { Navigation , Autoplay }from 'swiper/modules';\r\nimport { Pagination as SwiperPagination } from 'swiper/modules';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\nimport './swiper.css';\r\nimport { useNavigate } from \"react-router-dom\"; // 페이지 이동을 위한 useNavigate 훅\r\nimport defaultImage from \"./sample/sample1.jpg\"; // 기본 이미지\r\n\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n\r\n\r\nimport {\r\n    Avatar,\r\n    BottomNavigationAction,\r\n    Box,\r\n    Breadcrumbs,\r\n    ButtonGroup,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Divider,\r\n    Drawer,\r\n    FormControl,\r\n    Grid,\r\n    Icon,\r\n    InputAdornment,\r\n    Link,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Pagination,\r\n    ToggleButton,\r\n    ToggleButtonGroup\r\n} from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function HomeUser() {\r\n    {/*메뉴 이벤트 관리*/}\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n    const [anchorElProduct, setAnchorElProduct] = useState(null);\r\n    const [anchorElOrdersheet, setAnchorElOrdersheet] = useState(null);\r\n    const [anchorElInventory, setAnchorElInventory] = useState(null);\r\n    const [anchorElSupplier, setAnchorElSupplier] = useState(null);\r\n\r\n    const handleUserClick = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleProductClick = (event) => {\r\n        setAnchorElProduct(event.currentTarget);\r\n    };\r\n\r\n    const handleOrdersheetClick = (event) => {\r\n        setAnchorElOrdersheet(event.currentTarget);\r\n    };\r\n\r\n    const handleInventoryClick = (event) => {\r\n        setAnchorElInventory(event.currentTarget);\r\n    };\r\n\r\n    const handleSupplierClick = (event) => {\r\n        setAnchorElSupplier(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const handleCloseProduct = () => {\r\n        setAnchorElProduct(null);\r\n    };\r\n\r\n    const handleCloseOrdersheet = () => {\r\n        setAnchorElOrdersheet(null);\r\n    };\r\n\r\n    const handleCloseInventory = () => {\r\n        setAnchorElInventory(null);\r\n    };\r\n\r\n    const handleCloseSupplier = () => {\r\n        setAnchorElSupplier(null);\r\n    };\r\n\r\n    const openUser = Boolean(anchorElUser);\r\n    const openProduct = Boolean(anchorElProduct);\r\n    const openOrdersheet = Boolean(anchorElOrdersheet);\r\n    const openInventory = Boolean(anchorElInventory);\r\n    const openSupplier = Boolean(anchorElSupplier);\r\n\r\n\r\n    /* 백엔드에서 가져올 상품정보 */\r\n    // 상품 데이터를 저장할 state\r\n    const [products, setProducts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 번호\r\n    const productsPerPage = 6; // 페이지당 상품 수\r\n    const navigate = useNavigate(); // 페이지 이동을 위한 useNavigate 선언\r\n\r\n    // 데이터베이스에서 상품 데이터를 가져오는 함수\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                // 백엔드에서 상품 데이터를 가져옴 (API 엔드포인트 수정 필요)\r\n                const response = await axios.get(\"http://localhost:8080/products/list\");\r\n                setProducts(response.data.products); // 응답에서 products 배열에 접근\r\n            } catch (error) {\r\n                console.error(\"Error fetching product data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchProducts(); // 컴포넌트가 마운트될 때 데이터 가져오기\r\n    }, []);\r\n\r\n    // 현재 페이지에 표시할 상품 계산\r\n    const indexOfLastProduct = currentPage * productsPerPage; // 현재 페이지의 마지막 상품 인덱스\r\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage; // 현재 페이지의 첫 번째 상품 인덱스\r\n    const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct); // 현재 페이지에서 보여줄 상품들\r\n\r\n    // 총 페이지 수 계산\r\n    const totalPages = Math.ceil(products.length / productsPerPage);\r\n\r\n    // 페이지 변경 함수\r\n    const handlePageChange = (event, value) => {\r\n        setCurrentPage(value); // 페이지 번호 업데이트\r\n    };\r\n\r\n    // 상품 클릭 시 상세 화면으로 이동\r\n    const handleCardClick = (productId) => {\r\n        navigate(`/itempurchase/${productId}`); // 상품 ID와 함께 구매 페이지로 이동\r\n    };\r\n\r\n\r\n    {/*상품 메뉴 옆 Drawer*/}\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggleDrawer = (newOpen) => () => {\r\n        setOpen(newOpen);\r\n    };\r\n    const DrawerList = (\r\n        <Box sx={{ width: 250 }} role=\"presentation\" onClick={toggleDrawer(false)}>\r\n            <List>\r\n                {['전체보기'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                <MenuIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['바지', '운동화', '트레이닝복', '티셔츠' , '점퍼'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <MenuIcon /> : <MenuIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    {/*상품 정렬 타입*/}\r\n    const [sortType, setSortType] = useState('popularity');\r\n\r\n    const handleSortTypeChange = (event, newSortType) => {\r\n        if (newSortType !== null) {\r\n            setSortType(newSortType);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/*최상단의 페이지 로고 및 프로필, 로그인 ,회원가입*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'white', color: 'black' }}>\r\n                {/*상단페이지*/}\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\r\n                        <Icon sx={{ mr: 1 }} />\r\n                    </IconButton>\r\n                    <Typography align=\"left\" variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                        메인페이지\r\n                    </Typography>\r\n                    <Avatar>Lee</Avatar>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                    <Button color=\"inherit\">Sign up</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Divider />\r\n            {/*상품 목록 메뉴*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'white', color: 'black'}}>\r\n                <Toolbar>\r\n                    <div>\r\n                        <Button sx={{ color: 'black' }} onClick={toggleDrawer(true)}>\r\n                            <MenuIcon/>\r\n                        </Button>\r\n                        <Drawer open={open} onClose={toggleDrawer(false)}>\r\n                            {DrawerList}\r\n                        </Drawer>\r\n                    </div>\r\n\r\n                    <Button sx={{ width : 90, color: 'black' }}>바지</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>운동화</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>트레이닝복</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>티셔츠</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>점퍼</Button>\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <FormControl sx={{ width: '25ch', bgcolor: 'white' }} size=\"small\">\r\n                            <OutlinedInput\r\n                                placeholder=\"검색어를 입력하세요\"\r\n                                sx={{\r\n                                    '& .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                    '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton edge=\"end\">\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/*임시 배너*/}\r\n            <Box sx={{ bgcolor: 'lightgray', p: 2 }}>\r\n                <Swiper autoplay={true} pagination={true} navigation={true} modules={[Navigation , SwiperPagination , Autoplay]} className=\"mySwiper\">\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                </Swiper>\r\n            </Box>\r\n            {/*상품 정렬 타입 선택*/}\r\n            <Box sx={{ display: 'flex', justifyContent: 'right', my: 2 }}>\r\n                <ToggleButtonGroup\r\n                    value={sortType}\r\n                    exclusive\r\n                    onChange={handleSortTypeChange}\r\n                    aria-label=\"sort type\"\r\n                >\r\n                    <ToggleButton value=\"popularity\" aria-label=\"popularity\">\r\n                        인기순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"recent\" aria-label=\"recent\">\r\n                        최근순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"lowPrice\" aria-label=\"low price\">\r\n                        가격이 낮은순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"highPrice\" aria-label=\"high price\">\r\n                        가격이 높은순\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Box>\r\n            {/*하단의 상품 정렬 페이지*/}\r\n            <Grid container spacing={2}>\r\n                {currentProducts.length === 0 ? (\r\n                    <Typography variant=\"h6\" color=\"text.secondary\">\r\n                        상품을 불러오는 중입니다...\r\n                    </Typography>\r\n                ) : (\r\n                    currentProducts.map((product) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                            <Card\r\n                                onClick={() => handleCardClick(product.id)} // 클릭 시 페이지 이동\r\n                                sx={{ cursor: 'pointer' }} // 커서를 포인터로 변경\r\n                            >\r\n                                <CardContent>\r\n                                    <CardMedia\r\n                                        sx={{ height: 400 }}\r\n                                        image={\r\n                                            product.itemImage\r\n                                                ? `data:image/jpeg;base64,${product.itemImage}`\r\n                                                : defaultImage // 기본 이미지 사용\r\n                                        }\r\n                                        title={product.name}\r\n                                    />\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                        {product.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        가격: {product.price}원\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n\r\n            {/*상품 이동 페이지네이션*/}\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                <Pagination\r\n                    count={totalPages} // 총 페이지 수\r\n                    page={currentPage} // 현재 페이지\r\n                    onChange={handlePageChange} // 페이지 변경 함수\r\n                    variant=\"outlined\" // 스타일 설정\r\n                    shape=\"rounded\" // 모양 설정\r\n                />\r\n            </Box>\r\n            {/*홈페이지의 최하단 네비게이션*/}\r\n            <BottomNavigationAction label=\"Recents\" icon={<MenuIcon />} />\r\n            <BottomNavigationAction label=\"Favorites\" icon={<MenuIcon />} />\r\n            <BottomNavigationAction label=\"Nearby\" icon={<MenuIcon />} />\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'gray', color: 'black' ,height: 50}}>\r\n                <Toolbar></Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\n","/**\r\n * @license React\r\n * react-is.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\r\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\r\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\r\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\r\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-is.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-is.development.js');\r\n}\r\n"],"names":["HomeUser","anchorElUser","setAnchorElUser","useState","anchorElProduct","setAnchorElProduct","anchorElOrdersheet","setAnchorElOrdersheet","anchorElInventory","setAnchorElInventory","anchorElSupplier","setAnchorElSupplier","products","setProducts","Boolean","currentPage","setCurrentPage","navigate","useNavigate","useEffect","async","response","axios","get","data","error","console","fetchProducts","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","length","open","setOpen","React","toggleDrawer","newOpen","DrawerList","_jsxs","Box","sx","width","role","onClick","children","_jsx","List","map","text","index","ListItem","disablePadding","ListItemButton","ListItemIcon","MenuIcon","ListItemText","primary","Divider","sortType","setSortType","className","AppBar","position","bgcolor","color","Toolbar","IconButton","edge","mr","Icon","Typography","align","variant","flexGrow","Avatar","Button","Drawer","onClose","orientation","flexItem","noValidate","autoComplete","FormControl","size","OutlinedInput","placeholder","borderColor","borderWidth","endAdornment","InputAdornment","SearchIcon","p","Swiper","autoplay","pagination","navigation","modules","Navigation","SwiperPagination","Autoplay","SwiperSlide","CardMedia","height","image","require","title","display","justifyContent","my","ToggleButtonGroup","value","exclusive","onChange","handleSortTypeChange","event","newSortType","ToggleButton","Grid","container","spacing","product","item","xs","sm","md","Card","handleCardClick","productId","id","concat","cursor","CardContent","itemImage","defaultImage","name","gutterBottom","component","price","mt","Pagination","count","page","handlePageChange","shape","BottomNavigationAction","label","icon","u","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","q","t","v","a","r","$$typeof","type","module"],"sourceRoot":""}