{"version":3,"file":"static/js/119.7108e8b5.chunk.js","mappings":";ygBAuDe,SAASA,IAEpB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,OAChDG,EAAoBC,IAAyBJ,EAAAA,EAAAA,UAAS,OACtDK,EAAmBC,IAAwBN,EAAAA,EAAAA,UAAS,OACpDO,EAAkBC,IAAuBR,EAAAA,EAAAA,UAAS,OAmDlDS,EAAUC,IATAC,QAAQb,GACLa,QAAQV,GACLU,QAAQR,GACTQ,QAAQN,GACTM,QAAQJ,IAKGP,EAAAA,EAAAA,UAAS,MAClCY,EAAaC,IAAkBb,EAAAA,EAAAA,UAAS,IACxCc,EAAWC,IAAgBf,EAAAA,EAAAA,UAAS,YACpCgB,EAAYC,IAAiBjB,EAAAA,EAAAA,UAAS,KACtCkB,GAAkBC,KAAuBnB,EAAAA,EAAAA,UAAS,IAEnDoB,IAAWC,EAAAA,EAAAA,OACVC,GAAMC,KAAWvB,EAAAA,EAAAA,UAAS,OAGjCwB,EAAAA,EAAAA,YAAU,KACgBC,WAClB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,uCACjClB,EAAYgB,EAASG,KAAKpB,UAC1BU,GAAoBO,EAASG,KAAKpB,SACtC,CAAE,MAAOqB,GACLC,QAAQD,MAAM,+BAAgCA,EAClD,GAGJE,EAAe,GAChB,KAGHR,EAAAA,EAAAA,YAAU,KACYC,WACd,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,8CAA+C,CAC5EK,iBAAiB,IAErBF,QAAQG,IAAIR,EAASG,MACrBN,GAAQG,EAASG,KACrB,CAAE,MAAOC,GACLC,QAAQD,MAAM,yEAAmBA,EACrC,GAGJK,EAAW,GACZ,IAGH,MAWMC,GAAcC,IAChB,IAAIC,EAEAA,EADU,QAAVD,EACiB,IAAInB,IAAkBqB,MAAK,CAACC,EAAGC,IAAMD,EAAEE,MAAQD,EAAEC,QACjD,SAAVL,EACU,IAAInB,IAAkBqB,MAAK,CAACC,EAAGC,IAAMA,EAAEC,MAAQF,EAAEE,QAEjDjC,EAErBU,GAAoBmB,GACpBvB,EAAasB,GACbxB,EAAe,EAAE,EAIf8B,GA/DkB,EA+DG/B,EACrBgC,GAAsBD,GAhEJ,EAiElBE,GAAkB3B,GAAiB4B,MAAMF,GAAqBD,IAG9DI,GAAaC,KAAKC,KAAK/B,GAAiBgC,OApEtB,IA6FjBC,GAAMC,IAAWC,EAAAA,UAAe,GACjCC,GAAgBC,GAAY,KAC9BH,GAAQG,EAAQ,EAEdC,IACFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,KAAOC,KAAK,eAAeC,QAASR,IAAa,GAAOS,SAAA,EACtEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,SACA,CAAC,4BAAQG,KAAI,CAACC,EAAMC,KACjBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAAYC,gBAAc,EAAAP,UAC/BN,EAAAA,EAAAA,MAACc,EAAAA,EAAc,CAAAR,SAAA,EACXC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAAAT,UACTC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,OAEbT,EAAAA,EAAAA,KAACU,EAAAA,EAAY,CAACC,QAASR,QALhBA,QAUvBH,EAAAA,EAAAA,KAACY,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,SACA,CAAC,eAAM,qBAAO,iCAAS,qBAAQ,gBAAMG,KAAI,CAACC,EAAMC,KAC7CJ,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAAYC,gBAAc,EAAAP,UAC/BN,EAAAA,EAAAA,MAACc,EAAAA,EAAc,CAAAR,SAAA,EACXC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAAAT,UACUC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,OAEhCT,EAAAA,EAAAA,KAACU,EAAAA,EAAY,CAACC,QAASR,QALhBA,WAcxBU,GAAUC,KAAe9E,EAAAA,EAAAA,UAAS,cAYzC,OACIyD,EAAAA,EAAAA,MAAA,OAAKsB,UAAU,MAAKhB,SAAA,EAEhBC,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACC,SAAS,SAAStB,GAAI,CAAEuB,QAAS,QAASC,MAAO,SAAUpB,UAE/DN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAO,CAAArB,SAAA,EACJC,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,KAAK,QAAQH,MAAM,UAAU,aAAW,OAAOxB,GAAI,CAAE4B,GAAI,GAAIxB,UACrEC,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAAC7B,GAAI,CAAE4B,GAAI,QAEpBvB,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,MAAM,OAAOC,QAAQ,KAAKhC,GAAI,CAAEiC,SAAU,GAAI7B,SAAC,oCAG3DC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACV,MAAM,UAAUxB,GAAI,CAAE4B,GAAI,GAAKzB,QAhB/BgC,KACpBC,OAAO5C,KAAK,qCAAsC,SAAU,sBAAsB,EAeNY,SAAC,0CAChEzC,IACG0C,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAAAjC,SAAEzC,GAAK2E,MAAMC,OAAO,MAE3BlC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,OAERC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACV,MAAM,UAASpB,SAAC,8BACxBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACV,MAAM,UAAUrB,QA1HnBrC,UACjB,UACUE,EAAAA,EAAMwE,KAAK,yCAEjB/E,GAAS,YACb,CAAE,MAAOU,GACLC,QAAQD,MAAM,yCAAYA,EAC9B,GAmH0DiC,SAAC,iBAGvDC,EAAAA,EAAAA,KAACY,EAAAA,EAAO,KAERZ,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACC,SAAS,SAAStB,GAAI,CAAEuB,QAAS,QAASC,MAAO,SAASpB,UAC9DN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAO,CAAArB,SAAA,EACJN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAClC,GAAI,CAAEwB,MAAO,SAAWrB,QAASR,IAAa,GAAMS,UACxDC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,OAEbT,EAAAA,EAAAA,KAACoC,EAAAA,GAAM,CAACjD,KAAMA,GAAMkD,QAAS/C,IAAa,GAAOS,SAC5CP,SAITQ,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAClC,GAAI,CAAEC,MAAQ,GAAIuB,MAAO,SAAUpB,SAAC,kBAC5CC,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CAAC0B,YAAY,WAAWX,QAAQ,SAASY,UAAQ,KACzDvC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAClC,GAAI,CAAEC,MAAQ,GAAIuB,MAAO,SAAUpB,SAAC,wBAC5CC,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CAAC0B,YAAY,WAAWX,QAAQ,SAASY,UAAQ,KACzDvC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAClC,GAAI,CAAEC,MAAQ,GAAIuB,MAAO,SAAUpB,SAAC,oCAC5CC,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CAAC0B,YAAY,WAAWX,QAAQ,SAASY,UAAQ,KACzDvC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAClC,GAAI,CAAEC,MAAQ,GAAIuB,MAAO,SAAUpB,SAAC,wBAC5CC,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CAAC0B,YAAY,WAAWX,QAAQ,SAASY,UAAQ,KACzDvC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAClC,GAAI,CAAEC,MAAQ,GAAIuB,MAAO,SAAUpB,SAAC,kBAC5CC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEiC,SAAU,MACrB5B,EAAAA,EAAAA,KAAA,QAAMwC,YAAU,EAACC,aAAa,MAAK1C,UAC/BC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAW,CAAC/C,GAAI,CAAEC,MAAO,OAAQsB,QAAS,SAAWyB,KAAK,QAAO5C,UAC9DC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAa,CACVC,YAAY,0DACZC,MAAO9F,EACP+F,SAAWC,GAAM/F,EAAc+F,EAAEC,OAAOH,OACxCnD,GAAI,CACA,qCAAsC,CAClCuD,YAAa,MACbC,YAAa,OAEjB,2CAA4C,CACxCD,YAAa,MACbC,YAAa,OAEjB,iDAAkD,CAC9CD,YAAa,MACbC,YAAa,QAGrBC,cACIpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAc,CAACpC,SAAS,MAAKlB,UAC1BN,EAAAA,EAAAA,MAAC4B,EAAAA,EAAU,CAACC,KAAK,MAAMxB,QA7HtCwD,KACjB,MAAMC,EAAU9G,EAAS+G,QAAOC,GAC5BA,EAAQC,KAAKC,cAAcC,SAAS5G,EAAW2G,iBAEnDxG,GAAoBoG,GACpB1G,EAAe,EAAE,EAwH4DkD,SAAA,CAAC,KAC1CC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAU,qBAU3C7D,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEuB,QAAS,YAAa4C,EAAG,GAAI/D,UACpCN,EAAAA,EAAAA,MAACsE,EAAAA,GAAM,CAACC,UAAU,EAAMC,YAAY,EAAMC,YAAY,EAAMC,QAAS,CAACC,EAAAA,GAAaC,EAAAA,GAAmBC,EAAAA,IAAWvD,UAAU,WAAUhB,SAAA,EACjIC,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MAAOC,EAAQ,MACfC,MAAM,eAGd5E,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MAAOC,EAAQ,MACfC,MAAM,eAGd5E,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MAAOC,EAAQ,MACfC,MAAM,eAGd5E,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MAAOC,EAAQ,MACfC,MAAM,eAGd5E,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MAAOC,EAAQ,MACfC,MAAM,eAGd5E,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MAAOC,EAAQ,MACfC,MAAM,oBAMtB5E,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEkF,QAAS,OAAQC,eAAgB,QAASC,GAAI,GAAIhF,UACzDN,EAAAA,EAAAA,MAACuF,EAAAA,EAAiB,CACdlC,MAAOjC,GACPoE,WAAS,EACTlC,SA3IamC,CAACC,EAAOC,KACb,OAAhBA,GACAtE,GAAYsE,EAChB,EAyIY,aAAW,YAAWrF,SAAA,EAEtBC,EAAAA,EAAAA,KAACqF,EAAAA,EAAY,CAACvC,MAAM,aAAa,aAAW,aAAY/C,SAAC,wBAGzDC,EAAAA,EAAAA,KAACqF,EAAAA,EAAY,CAACvC,MAAM,SAAS,aAAW,SAAShD,QAASA,IAAM1B,GAAW,MAAM2B,SAAC,wBAGlFC,EAAAA,EAAAA,KAACqF,EAAAA,EAAY,CAACvC,MAAM,WAAW,aAAW,YAAYhD,QAASA,IAAM1B,GAAW,OAAO2B,SAAC,2CAGxFC,EAAAA,EAAAA,KAACqF,EAAAA,EAAY,CAACvC,MAAM,YAAY,aAAW,aAAahD,QAASA,IAAM1B,GAAW,QAAQ2B,SAAC,gDAMnGC,EAAAA,EAAAA,KAACsF,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEzF,SACK,IAA3BlB,GAAgBK,QACbc,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACE,QAAQ,KAAKR,MAAM,iBAAiBxB,GAAI,CAAE8F,WAAY,GAAI1F,SAAC,0EAIvElB,GAAgBqB,KAAKuD,IACjBzD,EAAAA,EAAAA,KAACsF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE9F,UAC5BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAI,CACDhG,QAASA,KAAMiG,OA5NlBC,EA4NkCvC,EAAQwC,QA3N/D7I,GAAS,iBAAD8I,OAAkBF,IADLA,KA4N+C,EAC5CrG,GAAI,CAAEwG,OAAQ,WAAapG,UAE3BN,EAAAA,EAAAA,MAAC2G,EAAAA,EAAW,CAAArG,SAAA,EACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACN7E,GAAI,CAAE8E,OAAQ,KACdC,MACIjB,EAAQ4C,UAAS,0BAAAH,OACezC,EAAQ4C,WAClCC,EAEV1B,MAAOnB,EAAQC,QAEnB1D,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAC8E,cAAY,EAAC5E,QAAQ,KAAK6E,UAAU,MAAKzG,SAChD0D,EAAQC,QAEbjE,EAAAA,EAAAA,MAACgC,EAAAA,EAAU,CAACE,QAAQ,QAAQR,MAAM,iBAAgBpB,SAAA,CAAC,iBAC1C0D,EAAQ/E,MAAM,kBAnBG+E,EAAQwC,SA6B1DjG,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEkF,QAAS,OAAQC,eAAgB,SAAU2B,GAAI,GAAI1G,UAC1DC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CACPC,MAAO5H,GACP6H,KAAMhK,EACNmG,SAhQS8D,CAAC1B,EAAOrC,KAC7BjG,EAAeiG,EAAM,EAgQTnB,QAAQ,WACRmF,MAAM,eAId9G,EAAAA,EAAAA,KAAC+G,EAAAA,EAAsB,CAACC,MAAM,UAAUC,MAAMjH,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,OACvDT,EAAAA,EAAAA,KAAC+G,EAAAA,EAAsB,CAACC,MAAM,YAAYC,MAAMjH,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,OACzDT,EAAAA,EAAAA,KAAC+G,EAAAA,EAAsB,CAACC,MAAM,SAASC,MAAMjH,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,OACtDT,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACC,SAAS,SAAStB,GAAI,CAAEuB,QAAS,OAAQC,MAAO,QAASsD,OAAQ,IAAI1E,UACzEC,EAAAA,EAAAA,KAACoB,EAAAA,EAAO,QAIxB,oBCjcyc8F,EAAxbzI,EAAE0I,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,gBAAgBE,EAAEH,OAAOC,IAAI,kBAAkBpE,EAAEmE,OAAOC,IAAI,qBAAqBG,EAAEJ,OAAOC,IAAI,kBAAkBI,EAAEL,OAAOC,IAAI,kBAAkBK,EAAEN,OAAOC,IAAI,iBAAiBM,EAAEP,OAAOC,IAAI,wBAAwBO,EAAER,OAAOC,IAAI,qBAAqBQ,EAAET,OAAOC,IAAI,kBAAkBS,EAAEV,OAAOC,IAAI,uBAAuBtD,EAAEqD,OAAOC,IAAI,cAAcU,EAAEX,OAAOC,IAAI,cAAcW,EAAEZ,OAAOC,IAAI,mBACtb,SAASY,EAAExJ,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIyJ,EAAEzJ,EAAE0J,SAAS,OAAOD,GAAG,KAAKxJ,EAAE,OAAOD,EAAEA,EAAE2J,MAAQ,KAAKb,EAAE,KAAKC,EAAE,KAAKvE,EAAE,KAAK4E,EAAE,KAAKC,EAAE,OAAOrJ,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAE0J,UAAY,KAAKR,EAAE,KAAKD,EAAE,KAAKE,EAAE,KAAKG,EAAE,KAAKhE,EAAE,KAAK0D,EAAE,OAAOhJ,EAAE,QAAQ,OAAOyJ,GAAG,KAAKZ,EAAE,OAAOY,EAAE,CAAC,CADkMf,EAAEC,OAAOC,IAAI,yCCNtdgB,EAAAA","sources":["components/HomeUser.js","../node_modules/@mui/material/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/@mui/material/node_modules/react-is/index.js"],"sourcesContent":["\r\nimport React, { useEffect,useState} from 'react';\r\nimport axios from \"axios\";\r\nimport { Navigation , Autoplay }from 'swiper/modules';\r\nimport { Pagination as SwiperPagination } from 'swiper/modules';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\nimport './swiper.css';\r\nimport { useNavigate } from \"react-router-dom\"; // 페이지 이동을 위한 useNavigate 훅\r\nimport defaultImage from \"./sample/sample1.jpg\"; // 기본 이미지\r\n\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n\r\n\r\nimport {\r\n    Avatar,\r\n    BottomNavigationAction,\r\n    Box,\r\n    Breadcrumbs,\r\n    ButtonGroup,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Divider,\r\n    Drawer,\r\n    FormControl,\r\n    Grid,\r\n    Icon,\r\n    InputAdornment,\r\n    Link,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Pagination,\r\n    ToggleButton,\r\n    ToggleButtonGroup\r\n} from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function HomeUser() {\r\n    {/*메뉴 이벤트 관리*/}\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n    const [anchorElProduct, setAnchorElProduct] = useState(null);\r\n    const [anchorElOrdersheet, setAnchorElOrdersheet] = useState(null);\r\n    const [anchorElInventory, setAnchorElInventory] = useState(null);\r\n    const [anchorElSupplier, setAnchorElSupplier] = useState(null);\r\n\r\n    const handleUserClick = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleProductClick = (event) => {\r\n        setAnchorElProduct(event.currentTarget);\r\n    };\r\n\r\n    const handleOrdersheetClick = (event) => {\r\n        setAnchorElOrdersheet(event.currentTarget);\r\n    };\r\n\r\n    const handleInventoryClick = (event) => {\r\n        setAnchorElInventory(event.currentTarget);\r\n    };\r\n\r\n    const handleSupplierClick = (event) => {\r\n        setAnchorElSupplier(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const handleCloseProduct = () => {\r\n        setAnchorElProduct(null);\r\n    };\r\n\r\n    const handleCloseOrdersheet = () => {\r\n        setAnchorElOrdersheet(null);\r\n    };\r\n\r\n    const handleCloseInventory = () => {\r\n        setAnchorElInventory(null);\r\n    };\r\n\r\n    const handleCloseSupplier = () => {\r\n        setAnchorElSupplier(null);\r\n    };\r\n\r\n    const openUser = Boolean(anchorElUser);\r\n    const openProduct = Boolean(anchorElProduct);\r\n    const openOrdersheet = Boolean(anchorElOrdersheet);\r\n    const openInventory = Boolean(anchorElInventory);\r\n    const openSupplier = Boolean(anchorElSupplier);\r\n\r\n\r\n    /* 백엔드에서 가져올 상품정보 */\r\n    // 상품 데이터를 저장할 state\r\n    const [products, setProducts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 번호\r\n    const [sortOrder, setSortOrder] = useState('default'); // 기본 정렬 상태\r\n    const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 추가\r\n    const [filteredProducts, setFilteredProducts] = useState([]); // 필터링된 상품 상태\r\n    const productsPerPage = 6; // 페이지당 상품 수\r\n    const navigate = useNavigate(); // 페이지 이동을 위한 useNavigate 선언\r\n    const [user, setUser] = useState(null);\r\n\r\n    // 데이터베이스에서 상품 데이터를 가져오는 함수\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8080/products/list\");\r\n                setProducts(response.data.products);\r\n                setFilteredProducts(response.data.products); // 초기값으로 모든 상품 설정\r\n            } catch (error) {\r\n                console.error(\"Error fetching product data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    // Axios 요청에 withCredentials 옵션 추가\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/user/current-user', {\r\n                    withCredentials: true // 세션 쿠키 전달을 위한 설정\r\n                });\r\n                console.log(response.data); // 확인용 로그\r\n                setUser(response.data);\r\n            } catch (error) {\r\n                console.error(\"사용자 정보 가져오기 오류:\", error);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n    // 로그아웃 함수\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.post('http://localhost:8080/api/user/logout'); // 로그아웃 API 호출\r\n            // 로그아웃 후 home으로 이동\r\n            navigate('/homeuser'); // 로그아웃 후 로그인 페이지로 이동\r\n        } catch (error) {\r\n            console.error(\"로그아웃 실패:\", error);\r\n        }\r\n    };\r\n\r\n    // 가격 정렬 함수\r\n    const handleSort = (order) => {\r\n        let sortedProducts;\r\n        if (order === 'asc') {\r\n            sortedProducts = [...filteredProducts].sort((a, b) => a.price - b.price);\r\n        } else if (order === 'desc') {\r\n            sortedProducts = [...filteredProducts].sort((a, b) => b.price - a.price);\r\n        } else {\r\n            sortedProducts = products; // 초기 상태로 되돌리기\r\n        }\r\n        setFilteredProducts(sortedProducts);\r\n        setSortOrder(order);\r\n        setCurrentPage(1); // 정렬 후 페이지를 1로 초기화\r\n    };\r\n\r\n    // 현재 페이지에 표시할 상품 계산\r\n    const indexOfLastProduct = currentPage * productsPerPage; // 현재 페이지의 마지막 상품 인덱스\r\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage; // 현재 페이지의 첫 번째 상품 인덱스\r\n    const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct); // 필터링된 현재 페이지에서 보여줄 상품들\r\n\r\n    // 총 페이지 수 계산\r\n    const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n\r\n    // 페이지 변경 함수\r\n    const handlePageChange = (event, value) => {\r\n        setCurrentPage(value); // 페이지 번호 업데이트\r\n    };\r\n\r\n    // 상품 클릭 시 상세 화면으로 이동\r\n    const handleCardClick = (productId) => {\r\n        navigate(`/itempurchase/${productId}`); // 상품 ID와 함께 구매 페이지로 이동\r\n    };\r\n\r\n\r\n    // 검색 수행 함수\r\n    const handleSearch = () => {\r\n        const results = products.filter(product =>\r\n            product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setFilteredProducts(results);\r\n        setCurrentPage(1); // 검색 후 페이지를 1로 초기화\r\n    };\r\n\r\n\r\n\r\n    {/*상품 메뉴 옆 Drawer*/}\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggleDrawer = (newOpen) => () => {\r\n        setOpen(newOpen);\r\n    };\r\n    const DrawerList = (\r\n        <Box sx={{ width: 250 }} role=\"presentation\" onClick={toggleDrawer(false)}>\r\n            <List>\r\n                {['전체보기'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                <MenuIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['바지', '운동화', '트레이닝복', '티셔츠' , '점퍼'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <MenuIcon /> : <MenuIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    {/*상품 정렬 타입*/}\r\n    const [sortType, setSortType] = useState('popularity');\r\n\r\n    const handleSortTypeChange = (event, newSortType) => {\r\n        if (newSortType !== null) {\r\n            setSortType(newSortType);\r\n        }\r\n    };\r\n\r\n    const openManagerList = () => {\r\n        window.open('http://localhost:3000/manager/list', '_blank', 'noopener,noreferrer'); // 새로운 팝업 열기\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/*최상단의 페이지 로고 및 프로필, 로그인 ,회원가입*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'white', color: 'black' }}>\r\n                {/*상단페이지*/}\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\r\n                        <Icon sx={{ mr: 1 }} />\r\n                    </IconButton>\r\n                    <Typography align=\"left\" variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                        메인페이지\r\n                    </Typography>\r\n                    <Button color=\"inherit\" sx={{ mr: 2 }} onClick={openManagerList}>관리자 페이지</Button>\r\n                    {user ? (\r\n                        <Avatar>{user.cname.charAt(0)}</Avatar> // 사용자의 이름의 첫 글자를 Avatar에 표시\r\n                    ) : (\r\n                        <h1>?</h1>\r\n                    )}\r\n                    <Button color=\"inherit\">장바구니</Button>\r\n                    <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Divider />\r\n            {/*상품 목록 메뉴*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'white', color: 'black'}}>\r\n                <Toolbar>\r\n                    <div>\r\n                        <Button sx={{ color: 'black' }} onClick={toggleDrawer(true)}>\r\n                            <MenuIcon/>\r\n                        </Button>\r\n                        <Drawer open={open} onClose={toggleDrawer(false)}>\r\n                            {DrawerList}\r\n                        </Drawer>\r\n                    </div>\r\n\r\n                    <Button sx={{ width : 90, color: 'black' }}>바지</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>운동화</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>트레이닝복</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>티셔츠</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>점퍼</Button>\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <FormControl sx={{ width: '25ch', bgcolor: 'white' }} size=\"small\">\r\n                            <OutlinedInput\r\n                                placeholder=\"검색어를 입력하세요\"\r\n                                value={searchTerm} // 입력한 검색어 상태를 value로 설정\r\n                                onChange={(e) => setSearchTerm(e.target.value)} // 검색어 업데이트\r\n                                sx={{\r\n                                    '& .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                    '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton edge=\"end\" onClick={handleSearch}> {/* 클릭 시 handleSearch 호출 */}\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/*임시 배너*/}\r\n            <Box sx={{ bgcolor: 'lightgray', p: 2 }}>\r\n                <Swiper autoplay={true} pagination={true} navigation={true} modules={[Navigation , SwiperPagination , Autoplay]} className=\"mySwiper\">\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <CardMedia\r\n                            sx={{ height: 200 }}\r\n                            image={require(\"./sample/sample1.jpg\")}\r\n                            title=\"sample1\"\r\n                        />\r\n                    </SwiperSlide>\r\n                </Swiper>\r\n            </Box>\r\n            {/*상품 정렬 타입 선택*/}\r\n            <Box sx={{ display: 'flex', justifyContent: 'right', my: 2 }}>\r\n                <ToggleButtonGroup\r\n                    value={sortType}\r\n                    exclusive\r\n                    onChange={handleSortTypeChange}\r\n                    aria-label=\"sort type\"\r\n                >\r\n                    <ToggleButton value=\"popularity\" aria-label=\"popularity\">\r\n                        인기순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"recent\" aria-label=\"recent\" onClick={() => handleSort(null)}>\r\n                        최근순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"lowPrice\" aria-label=\"low price\" onClick={() => handleSort('asc')}>\r\n                        가격이 낮은순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"highPrice\" aria-label=\"high price\" onClick={() => handleSort('desc')}>\r\n                        가격이 높은순\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Box>\r\n            {/*하단의 상품 정렬 페이지*/}\r\n            <Grid container spacing={2}>\r\n                {currentProducts.length === 0 ? (\r\n                    <Typography variant=\"h6\" color=\"text.secondary\" sx={{ marginLeft: 4 }}>\r\n                        일치하는 상품이 없습니다.\r\n                    </Typography>\r\n                ) : (\r\n                    currentProducts.map((product) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                            <Card\r\n                                onClick={() => handleCardClick(product.id)} // 클릭 시 페이지 이동\r\n                                sx={{ cursor: 'pointer' }} // 커서를 포인터로 변경\r\n                            >\r\n                                <CardContent>\r\n                                    <CardMedia\r\n                                        sx={{ height: 400 }}\r\n                                        image={\r\n                                            product.itemImage\r\n                                                ? `data:image/jpeg;base64,${product.itemImage}`\r\n                                                : defaultImage // 기본 이미지 사용\r\n                                        }\r\n                                        title={product.name}\r\n                                    />\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                        {product.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        가격: {product.price}원\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n\r\n            {/*상품 이동 페이지네이션*/}\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                <Pagination\r\n                    count={totalPages} // 총 페이지 수\r\n                    page={currentPage} // 현재 페이지\r\n                    onChange={handlePageChange} // 페이지 변경 함수\r\n                    variant=\"outlined\" // 스타일 설정\r\n                    shape=\"rounded\" // 모양 설정\r\n                />\r\n            </Box>\r\n            {/*홈페이지의 최하단 네비게이션*/}\r\n            <BottomNavigationAction label=\"Recents\" icon={<MenuIcon />} />\r\n            <BottomNavigationAction label=\"Favorites\" icon={<MenuIcon />} />\r\n            <BottomNavigationAction label=\"Nearby\" icon={<MenuIcon />} />\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'gray', color: 'black' ,height: 50}}>\r\n                <Toolbar></Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n"],"names":["HomeUser","anchorElUser","setAnchorElUser","useState","anchorElProduct","setAnchorElProduct","anchorElOrdersheet","setAnchorElOrdersheet","anchorElInventory","setAnchorElInventory","anchorElSupplier","setAnchorElSupplier","products","setProducts","Boolean","currentPage","setCurrentPage","sortOrder","setSortOrder","searchTerm","setSearchTerm","filteredProducts","setFilteredProducts","navigate","useNavigate","user","setUser","useEffect","async","response","axios","get","data","error","console","fetchProducts","withCredentials","log","fetchUser","handleSort","order","sortedProducts","sort","a","b","price","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","length","open","setOpen","React","toggleDrawer","newOpen","DrawerList","_jsxs","Box","sx","width","role","onClick","children","_jsx","List","map","text","index","ListItem","disablePadding","ListItemButton","ListItemIcon","MenuIcon","ListItemText","primary","Divider","sortType","setSortType","className","AppBar","position","bgcolor","color","Toolbar","IconButton","edge","mr","Icon","Typography","align","variant","flexGrow","Button","openManagerList","window","Avatar","cname","charAt","post","Drawer","onClose","orientation","flexItem","noValidate","autoComplete","FormControl","size","OutlinedInput","placeholder","value","onChange","e","target","borderColor","borderWidth","endAdornment","InputAdornment","handleSearch","results","filter","product","name","toLowerCase","includes","SearchIcon","p","Swiper","autoplay","pagination","navigation","modules","Navigation","SwiperPagination","Autoplay","SwiperSlide","CardMedia","height","image","require","title","display","justifyContent","my","ToggleButtonGroup","exclusive","handleSortTypeChange","event","newSortType","ToggleButton","Grid","container","spacing","marginLeft","item","xs","sm","md","Card","handleCardClick","productId","id","concat","cursor","CardContent","itemImage","defaultImage","gutterBottom","component","mt","Pagination","count","page","handlePageChange","shape","BottomNavigationAction","label","icon","u","Symbol","for","c","d","f","g","h","k","l","m","n","q","t","v","r","$$typeof","type","module"],"sourceRoot":""}