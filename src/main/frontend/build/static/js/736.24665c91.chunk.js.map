{"version":3,"file":"static/js/736.24665c91.chunk.js","mappings":"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","sources":["api/ManagerApi.js","api/OrderApi.js","components/Manager/AddComponent.js","components/Manager/AddPage.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ModifyComponent.js","components/Manager/ModifyPage.js","components/Manager/ReadComponent.js","components/Manager/ReadPage.js","components/Order/ListComponent.js","components/Order/ListPage.js","components/Order/ReadComponent.js","components/Order/ReadPage.js","components/adminpage/listItems.js","components/adminpage/Explain.js","components/adminpage/Dashboard.js","components/common/PageComponent.js","components/common/ResultModal.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n export const API_SERVER_HOST = 'http://localhost:8080'\r\n const prefix = `${API_SERVER_HOST}/api/manager`\r\n export const getOne = async (userId) => {\r\n  const res = await axios.get(`${prefix}/${userId}` )\r\n  return res.data\r\n  }\r\nexport const getList = async ( pageParam ) => {\r\n const {page,size} = pageParam\r\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\r\n return res.data\r\n }\r\n\r\nexport const postAdd = async (managerObj) => {\r\n const res = await axios.post(`${prefix}/` , managerObj)\r\n return res.data\r\n }\r\n\r\nexport const deleteOne = async (userId) => {\r\n\r\n  const res = await axios.delete(`${prefix}/${userId}` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const putOne = async (manager) => {\r\n\r\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n","import axios from \"axios\"\r\n\r\n\r\nexport const API_SERVER_HOST = 'http://localhost:8080'\r\nconst prefix = `${API_SERVER_HOST}/api/orders`\r\n\r\nexport const getOne = async (id) => {\r\n  const res = await axios.get(`${prefix}/${id}`)\r\n  return res.data\r\n}\r\n\r\nexport const getList = async (pageParam) => {\r\n  const {page, size} = pageParam\r\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\r\n  return res.data\r\n}\r\n\r\nexport const postAdd = async (orderObj) => {\r\n  const res = await axios.post(`${prefix}/`, orderObj)\r\n  return res.data\r\n}\r\n\r\nexport const deleteOne = async (id) => {\r\n  const res = await axios.delete(`${prefix}/${id}`)\r\n  return res.data\r\n}\r\n\r\nexport const putOne = async (order) => {\r\n  const res = await axios.put(`${prefix}/${order.id}`, {\r\n    id: order.id,\r\n    orderedProducts: order.orderedProducts,\r\n    totalPrice: order.totalPrice,\r\n    orderType: order.orderType,\r\n    pageRequestDTO: order.pageRequestDTO,\r\n    total: order.total\r\n  })\r\n  return res.data\r\n}","import React, { useState } from \"react\";\r\nimport { postAdd } from \"../../api/ManagerApi\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport { TextField, Button, Box } from '@mui/material';\r\n\r\nconst initState = {\r\n  mname: '',\r\n  mtel: '',\r\n  memail: '',\r\n  uadr: '',\r\n}\r\n\r\nconst AddComponent = () => {\r\n  const [manager, setManager] = useState({ ...initState });\r\n  const [result, setResult] = useState(null);\r\n  const { moveToList, moveToDashboard } = useCustomMove();\r\n\r\n  const handleChangeManager = (e) => {\r\n    manager[e.target.name] = e.target.value;\r\n    setManager({ ...manager });\r\n  }\r\n\r\n  const handleClickAdd = () => {\r\n    postAdd(manager)\r\n      .then(result => {\r\n        setResult(result.userId);\r\n        setManager({ ...initState });\r\n      }).catch(e => { console.error(e) });\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setResult(null);\r\n    moveToDashboard();\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\r\n      {result ? <ResultModal title={'Add Result'} content={`등록이 완료되었습니다`} callbackFn={closeModal} /> : <></>}\r\n      <TextField\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        name=\"mname\"\r\n        value={manager.mname}\r\n        onChange={handleChangeManager}\r\n      />\r\n      <TextField\r\n        label=\"Phone Number\"\r\n        variant=\"outlined\"\r\n        name=\"mtel\"\r\n        value={manager.mtel}\r\n        onChange={handleChangeManager}\r\n        inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\r\n        helperText=\"Format: 123-4567-8901\"\r\n      />\r\n      <TextField\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        name=\"memail\"\r\n        value={manager.memail}\r\n        onChange={handleChangeManager}\r\n        inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\r\n        helperText=\"Format: example@example.com\"\r\n      />\r\n      <TextField\r\n        label=\"Address\"\r\n        variant=\"outlined\"\r\n        name=\"uadr\"\r\n        value={manager.uadr}\r\n        onChange={handleChangeManager}\r\n        inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\r\n        helperText=\"Format: Street, City, State, Country\"\r\n      />\r\n      <Button variant=\"contained\" onClick={handleClickAdd}>\r\n        등록\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddComponent;","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Container, Typography } from '@mui/material';\r\nimport AddComponent from './AddComponent';\r\n\r\nconst AddPage = ({ open, onClose }) => {\r\n    return (\r\n        <Dialog open={open} onClose={onClose}>\r\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n                공급업체 등록 페이지\r\n            </Typography>\r\n            <AddComponent />\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddPage;\r\n","// src/main/frontend/src/components/Manager/ListComponent.js\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getList } from \"../../api/ManagerApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport ReadComponent from './ReadComponent';\r\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\r\nimport PageComponent from \"../common/PageComponent\";\r\nimport axios from \"axios\";\r\nimport ModifyPage from './ModifyPage';\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst initState = {\r\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\r\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\r\n}\r\n\r\nconst ListComponent = () => {\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\r\n  const [serverData, setServerData] = useState(initState);\r\n  const [managers, setManagers] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getList({ page, size }).then(data => {\r\n      setServerData(data);\r\n      setManagers(data.dtoList);\r\n    }).catch(error => {\r\n      console.error('Error fetching data: ', error);\r\n      setManagers([]);\r\n    });\r\n  }, [page, size, refresh]);\r\n\r\n  const handleRowClick = (userId) => {\r\n    setSelectedUserId(userId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSelectedUserId(null);\r\n  };\r\n\r\n  const handleOpen = (userId) => {\r\n    setSelectedUserId(userId);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleModifyPage = (userId) => {\r\n    navigate(`/manager/modify/${userId}`);\r\n  };\r\n\r\n\r\n  const supplierDelete = async (userId) => {\r\n    try {\r\n      console.log(`Deleting user with ID: ${userId}`);\r\n      await axios.delete(`http://localhost:8080/api/manager/${userId}`);\r\n      alert('삭제가 완료되었습니다.');\r\n    } catch (error) {\r\n      console.error('삭제 중 오류가 발생했습니다:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n        <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>userId</TableCell>\r\n                  <TableCell align=\"right\">이름</TableCell>\r\n                  <TableCell align=\"right\">전화번호</TableCell>\r\n                  <TableCell align=\"right\">이메일</TableCell>\r\n                  <TableCell align=\"right\">주소</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {managers.length > 0 ? managers.map(manager =>\r\n                    <TableRow key={manager.userId} onClick={() => handleRowClick(manager.userId)}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {manager.userId}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{manager.mname}</TableCell>\r\n                      <TableCell align=\"right\">{manager.mtel}</TableCell>\r\n                      <TableCell align=\"right\">{manager.memail}</TableCell>\r\n                      <TableCell align=\"right\">{manager.uadr}</TableCell>\r\n                    </TableRow>\r\n                ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\r\n\r\n        <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth PaperProps={{ style: { height: '80vh' } }}>\r\n          <DialogTitle>공급업체 </DialogTitle>\r\n          <DialogContent>\r\n            {selectedUserId && <ReadComponent userId={selectedUserId} />}\r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 100, left: '50%', transform: 'translateX(-50%)' }}>\r\n              {/* 수정 버튼 */}\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  sx={{ ml: 1 }}\r\n                  onClick={() => handleOpen(selectedUserId)}\r\n              >\r\n                공급업체 수정\r\n              </Button>\r\n              {/* 모달 컴포넌트 */}\r\n              <Modal open={openModal} onClose={handleModalClose}>\r\n                <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      height: '20vh', // 부모 요소 높이를 전체 화면 높이로 설정\r\n                      backgroundColor: '#f0f0f0', // 배경색을 추가하여 더 잘 보이게\r\n                      marginTop : 300,\r\n                    }}\r\n                >\r\n                  <ModifyPage userId={selectedUserId} onClose={handleClose}/>\r\n                </div>\r\n              </Modal>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => supplierDelete(selectedUserId)}>공급업체\r\n                삭제</Button>\r\n            </Box>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ListComponent;","import React, { useState } from 'react';\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\nimport ListComponent from \"./ListComponent\";\r\nimport {Button} from \"@mui/material\";\r\nimport AddPage from \"./AddPage\";\r\n\r\n\r\n  const ListPage = () => {\r\n      const [openModal, setOpenModal] = useState(false);\r\n\r\n      const handleOpen = () => {\r\n          setOpenModal(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n          setOpenModal(false);\r\n      };\r\n\r\n    const [queryParams] = useSearchParams()\r\n    const page = queryParams.get(\"page\") ||1\r\n    const size = queryParams.get(\"size\") ||10\r\n\r\n\r\n    return (\r\n    <div className=\"p-4 w-full bg-orange-200 \">\r\n     <div className=\"text-3xl font-extrabold\">\r\n       공급업체 목록\r\n     </div>\r\n     <ListComponent/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n            새로운 공급업체 등록\r\n        </Button>\r\n        <AddPage open={openModal} onClose={handleClose} />\r\n     <div>{page}</div>\r\n\r\n    </div>\r\n    );\r\n  }\r\nexport default ListPage;\r\n\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { deleteOne, getOne, putOne } from \"../../api/ManagerApi\";\r\nimport { TextField, Button, Box } from '@mui/material';\r\n\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\nconst initState = {\r\n  userId:0,\r\n\r\n  mname: '',\r\n\r\n\r\n  memail: '',\r\n  mtel: '',\r\n  uadr: '',\r\n  complete: false\r\n}\r\n\r\nconst ModifyComponent = ({userId, moveList, moveRead}) => {\r\n\r\n  const [manager, setManager] = useState({...initState})\r\n\r\n\r\n  //모달 창을 위한 상태\r\n  const [result, setResult] = useState(null)\r\n\r\n  //이동을 위한 기능들\r\n  const {moveToList, moveToRead} = useCustomMove()\r\n\r\n\r\n  const handleClickModify = () => { //버튼 클릭시\r\n\r\n    //console.log(manager)\r\n\r\n    putOne(manager).then(data => {\r\n      console.log(\"modify result: \" + data)\r\n      setResult('Modified')\r\n    })\r\n  }\r\n\r\n  const handleClickDelete = () => { //버튼 클릭시\r\n\r\n    deleteOne(userId).then( data => {\r\n      console.log(\"delete result: \" + data)\r\n      setResult('Deleted')\r\n    })\r\n\r\n  }\r\n\r\n  //모달 창이 close될때\r\n  const closeModal = () => {\r\n    if(result ==='Deleted') {\r\n      moveToList()\r\n    }else {\r\n      moveToRead(userId)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getOne(userId).then(data =>  setManager(data))\r\n\r\n  },[userId])\r\n\r\n  const handleChangeManager = (e) => {\r\n\r\n    manager[e.target.name] = e.target.value\r\n\r\n    setManager({...manager})\r\n  }\r\n\r\n  const handleChangeManagerComplete = (e) => {\r\n\r\n    const value = e.target.value\r\n\r\n    manager.complete = (value === 'Y')\r\n\r\n    setManager({...manager})\r\n  }\r\n\r\n  return (\r\n      <Box sx={{ '& > :not(style)': { m: 1 } }}>\r\n        {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal>  :<></>}\r\n\r\n        <TextField\r\n                label=\"userId\"\r\n                variant=\"outlined\"\r\n                value={manager.userId}\r\n                disabled\r\n              />\r\n\r\n        <TextField\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  name=\"mname\"\r\n                  value={manager.mname}\r\n                  onChange={handleChangeManager}\r\n                />\r\n\r\n\r\n        <TextField\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"memail\"\r\n                value={manager.memail}\r\n                onChange={handleChangeManager}\r\n                inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\r\n                helperText=\"Format: example@example.com\"\r\n              />\r\n\r\n        <TextField\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                name=\"uadr\"\r\n                value={manager.uadr}\r\n                onChange={handleChangeManager}\r\n                inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\r\n                helperText=\"Format: Street, City, State, Country\"\r\n              />\r\n\r\n        <TextField\r\n                label=\"Phone Number\"\r\n                variant=\"outlined\"\r\n                name=\"mtel\"\r\n                value={manager.mtel}\r\n                onChange={handleChangeManager}\r\n                inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\r\n                helperText=\"Format: 123-4567-8901\"\r\n              />\r\n\r\n        <TextField\r\n          label=\"COMPLETE\"\r\n          variant=\"outlined\"\r\n          name=\"complete\"\r\n          value={manager.complete ? 'Y' : 'N'}\r\n          onChange={handleChangeManagerComplete}\r\n          select\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n        >\r\n          <option value='Y'>Completed</option>\r\n          <option value='N'>Not Yet</option>\r\n        </TextField>\r\n\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\r\n          Delete\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\r\n          Modify\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default ModifyComponent;\r\n","import { useParams } from \"react-router-dom\";\r\nimport ModifyComponent from \"./ModifyComponent\";\r\n\r\nconst ModifyPage = ({ userId, onClose }) => {\r\n\r\n  //const {userId} = useParams()\r\n\r\n  return (\r\n      <div\r\n          className=\"p-4 w-full max-w-lg bg-white rounded-lg shadow-lg\"\r\n          style={{\r\n              textAlign: 'center',\r\n              padding: '2rem',         // Optional: add padding for inner spacing\r\n              boxSizing: 'border-box', // Ensure padding doesn’t affect width\r\n          }}\r\n      >\r\n          <div className=\"text-3xl font-extrabold\">\r\n              Manager Modify Page\r\n          </div>\r\n\r\n          <ModifyComponent userId={userId}/>\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ModifyPage;\r\n","// src/main/frontend/src/components/Manager/ReadComponent.js\r\nimport { useEffect, useState } from \"react\";\r\nimport { getOne } from \"../../api/ManagerApi\";\r\nimport { Grid, Typography, Box, Divider } from '@mui/material';\r\n\r\nconst initState = {\r\n  userId: 0,\r\n  mName: '',\r\n  mtel: '',\r\n  mEmail: '',\r\n  mProfileImage: '',\r\n  uAdr: '',\r\n}\r\n\r\nconst ReadComponent = ({ userId }) => {\r\n  const [manager, setManager] = useState(initState);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      getOne(userId)\r\n        .then(data => setManager(data))\r\n        .catch(error => console.error('Error fetching data: ', error));\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" fontWeight=\"bold\">{manager.mname}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ width: '100%', my: 2 }} />\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>ID:</strong> {manager.userId}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Name:</strong> {manager.mname}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ width: '100%', my: 1 }} />\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Phone:</strong> {manager.mtel}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Email:</strong> {manager.memail}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ width: '100%', my: 1 }} />\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Address:</strong> {manager.uadr}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ReadComponent;","import { useCallback } from \"react\";\r\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport ReadComponent from \"./ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n\r\n      const {userId} = useParams()\r\n\r\n      return (\r\n       <div className=\"font-extrabold w-full bg-white mt-6\">\r\n       <div className=\"text-2xl \"> Manager Read Page Component {userId} </div>\r\n        <ReadComponent userId={userId}></ReadComponent>\r\n       </div>\r\n      );\r\n}\r\nexport default ReadPage;","import { useEffect, useState } from \"react\";\r\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\r\nimport { getList, getOne } from \"../../api/OrderApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport ReadComponent from './ReadComponent';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PageComponent from \"../common/PageComponent\";\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport ReadPage from './ReadPage';\r\n\r\n\r\nconst initState = {\r\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\r\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\r\n}\r\n\r\nconst ListComponent = ({ onRowClick , orderType, setOrderType}) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove();\r\n  const [serverData, setServerData] = useState(initState)\r\n  const [order, setOrder] = useState([]);\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const handleRowClick = (order) => {\r\n        setSelectedId(order.id);\r\n        setOpenModal(true);\r\n      };\r\n\r\n  const handleCloseModal = () => {\r\n          setOpenModal(false);\r\n      };\r\n\r\n\r\n  useEffect(() => {\r\n    getList({page,size}).then(data => {\r\n      console.log(data)\r\n      setServerData(data)\r\n      setOrder(data.dtoList) // setOrder function\r\n      console.log(data.dtoList)\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching data: ', error);\r\n      setOrder([]); // API 호출 실패 시 order를 빈 배열로 설정\r\n    });\r\n  }, [page,size, refresh]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>id</TableCell>\r\n                <TableCell align=\"right\">주문 ID</TableCell>\r\n                <TableCell align=\"right\">주문종류</TableCell>\r\n                <TableCell align=\"right\">주문한 상품</TableCell>\r\n                <TableCell align=\"right\">총 수량</TableCell>\r\n                <TableCell align=\"right\">총가격</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {order.length > 0 ? order.map(order =>\r\n                <TableRow\r\n                  key={order.id}\r\n                  onClick={() => {\r\n                    handleRowClick(order);\r\n                    console.log(`Row clicked with id: ${order.id}`); // 로깅하여 확인\r\n                    onRowClick(order.id);\r\n                  }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {order.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{order.id}</TableCell>\r\n                  <TableCell align=\"right\">{order.orderType}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {order.orderedProducts.map((product, index) => (\r\n                      <p key={index}>{product.name}</p>\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{order.totalAmount}</TableCell>\r\n                  <TableCell align=\"right\">{order.totalPrice}</TableCell>\r\n                </TableRow>\r\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n      <PageComponent serverData={serverData} movePage={moveToList} orderType={0} setOrder={setOrder}></PageComponent>\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n      >\r\n        <Box sx={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width: '35vw',\r\n          height: '90vh',\r\n          overflow: 'auto',\r\n          bgcolor: 'background.paper',\r\n        }}>\r\n          {selectedId && <ReadPage id={selectedId} />}\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListComponent;","import React , { useState }  from \"react\";\r\nimport {Link, useSearchParams} from \"react-router-dom\";\r\nimport { Box, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\nimport ListComponent from \"./ListComponent\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\n\r\n  const ListPage = () => {\r\n      const [orderType, setOrderType] = useState('option1'); // 선택된 옵션을 관리하는 상태\r\n\r\n      const handleChange = (event) => {\r\n          setOrderType(event.target.value);\r\n      };\r\n\r\n    const [queryParams] = useSearchParams()\r\n    const page = queryParams.get(\"page\") ||1\r\n    const size = queryParams.get(\"size\") ||10\r\n    const handleRowClick = (id) => {\r\n        console.log(`Row with id ${id} was clicked`);\r\n        // 여기에 행 클릭 시 수행할 작업을 추가합니다.\r\n      };\r\n\r\n    return (\r\n    <div className=\"p-4 w-full bg-orange-200 \">\r\n     <div className=\"text-3xl font-extrabold\">\r\n       주문서 관리\r\n     </div>\r\n     <ListComponent onRowClick={handleRowClick} />\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2, gap: 2 }}>\r\n            <FormControl fullWidth variant=\"outlined\" sx={{ width: '8%', '&:hover': { bgcolor: 'gray' }, ml: 60 }}>\r\n                <InputLabel sx={{\r\n                    '&.Mui-focused': {\r\n                        color: 'black', // 포커스 시 라벨 색상\r\n                    },\r\n                }}>주문서 종류</InputLabel>\r\n                <Select\r\n                    value={orderType}\r\n                    onChange={handleChange}\r\n                    label=\"주문서 종류\"\r\n                    MenuProps={{\r\n                        PaperProps: {\r\n                            sx: {\r\n                                marginTop: '-160px',\r\n                                '& .MuiMenuItem-root': {\r\n                                },\r\n                            },\r\n                        },\r\n                    }}\r\n                    sx={{\r\n                        '& .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: 'gray',\r\n                        },\r\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: 'gray',\r\n                        },\r\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                            color : 'black',\r\n                            borderColor: 'gray', // 포커스 시 테두리 색상 유지\r\n                        },\r\n                        '& .MuiSvgIcon-root': {\r\n                        },\r\n                    }}\r\n                >\r\n                    {/*< 0 = 주문 전, 1 = 주문 중 , 2 = 납품(주문) 완료 , 3 = 반품 중 , 4 = 반품 완료 , 5 = 취소>*/}\r\n                    <MenuItem value=\"option1\">전체</MenuItem>\r\n                    <MenuItem value=\"option2\">주문 전</MenuItem>\r\n                    <MenuItem value=\"option3\">주문 중</MenuItem>\r\n                    <MenuItem value=\"option4\">주문 완료</MenuItem>\r\n                    <MenuItem value=\"option5\">반품 처리</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Button\r\n                sx={{ bgcolor: 'gray', color: 'white', width: '8%', '&:hover': { bgcolor: 'gray' } , mr: 60}}\r\n                variant=\"contained\"\r\n                component={Link}\r\n                to=\"/order/add\"\r\n            >\r\n                주문서 등록\r\n            </Button>\r\n        </Box>\r\n     <div>{page}</div>\r\n\r\n    </div>\r\n    );\r\n  }\r\nexport default ListPage;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOne } from \"../../api/OrderApi\"\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\r\nimport * as OrderApi from '../../api/OrderApi.js';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport axios from 'axios';\r\n\r\nconst initState = {\r\n    id: 0,\r\n    orderedProducts: '',\r\n    totalPrice: '',\r\n    orderType: '',\r\n    totalAmount:'',\r\n    manager: '',\r\n}\r\n\r\nfunction ReadComponent({ id  }) {\r\n\r\n    const [order, setOrder] = useState(initState);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const {moveToList, moveToModify} = useCustomMove();\r\n\r\n\r\n    const handleOpenModal = () => {\r\n        setOpenModal(true);\r\n      };\r\n\r\n      const handleCloseModal = () => {\r\n        setOpenModal(false);\r\n      };\r\n\r\n    useEffect(() => {\r\n        // API에서 주문서 정보를 가져오는 함수\r\n        const fetchOrderDetails = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\r\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\r\n            } catch (error) {\r\n                console.error('Error fetching the order details:', error);\r\n            }\r\n        };\r\n\r\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\r\n    }, [id]);\r\n\r\n    let totalPrice = 0;\r\n    // Check if order exists and orderedProducts is an array\r\n    if (!order || !Array.isArray(order.orderedProducts)) {\r\n        return <div>Loading...</div>; // Handle loading or error state\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <h1>납품 요청 내역</h1>\r\n                <p>주문번호 : <b>{order.id}</b></p>\r\n                <p>주문일자 : <b>{new Date().toLocaleString()}</b></p> {/* Display current date and time */}\r\n                <h3>주문정보</h3>\r\n                <hr style={{border: '1px solid black', width: '450px', marginLeft: 0}}/>\r\n                <p>수신인 : {order.manager.mname}</p>\r\n                <p>연락처 : {order.manager.mtel}</p>\r\n                <h3>주문상품</h3>\r\n\r\n                {order.orderedProducts.map((product) => {\r\n                    let imageBase64 = '';\r\n                    if (product.itemImage) {\r\n                        imageBase64 = btoa(String.fromCharCode(...new Uint8Array(product.itemImage))); // Assuming itemImage is a byte array\r\n                    }\r\n\r\n                    // Update total price\r\n                    totalPrice += product.price * product.amount;\r\n\r\n                    return (\r\n                        <div key={product.id}>\r\n                            <hr style={{border: '0.1px groove gray', width: '450px', marginLeft: 0}}/>\r\n                            <div style={{display: 'flex', alignItems: 'center', marginBottom: '10px'}}>\r\n                                <img src={`data:image/png;base64,${imageBase64}`} alt=\"상품 이미지\"\r\n                                     style={{width: '100px', height: 'auto', marginRight: '10px'}}/>\r\n                                <div style={{marginLeft: '10px'}}>\r\n                                    <p style={{margin: 0}}>상품명 : {product.name}</p>\r\n                                    <p style={{margin: 0}}>상품유형 : {product.itemType}</p>\r\n                                    <p style={{margin: 0}}>사이즈 : {product.size}</p>\r\n                                    <p style={{margin: 0}}>주문수량 : {product.amount}</p>\r\n                                    <p style={{margin: 0}}>주문금액 : {product.price} 원</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n                <hr style={{border: '1px solid black', width: '450px', marginLeft: 0}}/>\r\n                <h2>총 주문금액 : {totalPrice} 원</h2>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ReadComponent;","import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport ReadComponent from \"./ReadComponent\";\r\nimport { Typography, Paper, Box, Modal, Button , Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initState = {\r\n    id: 0,\r\n    orderedProducts: '',\r\n    totalPrice: '',\r\n    orderType: '',\r\n    totalAmount:'',\r\n    manager: '',\r\n}\r\n\r\nconst ReadPage = ({ id }) => {\r\n  //const { id } = useParams(); // URL 파라미터에서 주문서의 ID를 가져옵니다.\r\n  const [open, setOpen] = useState(false); // 모달창의 상태를 관리하는 상태를 생성합니다.\r\n    const [order, setOrder] = useState(initState);\r\n    const handleOpen = () => setOpen(true); // 모달창을 열기 위한 함수를 생성합니다.\r\n    const handleClose = () => setOpen(false); // 모달창을 닫기 위한 함수를 생성합니다.\r\n\r\n    const handleDelete = () => {\r\n        orderDelete(id); // 삭제 함수 호출\r\n        handleClose(); // 모달 닫기\r\n    };\r\n    const orderAssign = async (id) => {\r\n        try {\r\n          await axios.get(`http://localhost:8080/api/orders/order/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\r\n          alert('주문이 완료되었습니다.');\r\n        } catch (error) {\r\n          console.error('주문 중 오류가 발생했습니다:', error);\r\n        }\r\n      };\r\n\r\n    const orderComplete = async (id) => {\r\n        try {\r\n            await axios.get(`http://localhost:8080/api/orders/complete/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\r\n            alert('납품이 완료되었습니다.');\r\n        } catch (error) {\r\n            console.error('납품 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // API에서 주문서 정보를 가져오는 함수\r\n        const fetchOrderDetails = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\r\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\r\n            } catch (error) {\r\n                console.error('Error fetching the order details:', error);\r\n            }\r\n        };\r\n\r\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\r\n    }, [id]);\r\n\r\n    const orderDelete = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/api/orders/${id}`);\r\n            alert('삭제가 완료되었습니다.');\r\n        } catch (error) {\r\n            console.error('삭제 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 6 }}>\r\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\r\n        Order Receipt\r\n      </Typography>\r\n      <Paper elevation={3} sx={{ p: 2, width: '500px', mt: 2 }}>\r\n        <ReadComponent id={id} /> {/* 주문서의 ID를 ReadComponent 컴포넌트에 prop으로 전달합니다. */}\r\n      </Paper>\r\n        {order.orderType === 'BEFORE_ORDER' && (\r\n          <Box mt={2}> {/* 주문하기 버튼에 상단 마진을 추가합니다. */}\r\n                  <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\r\n                      variant=\"contained\" color=\"primary\" onClick={() => orderAssign(id)}>\r\n                        주문하기\r\n                  </Button>\r\n                  <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2, ml : 3 , mr : 3}}\r\n                          variant=\"contained\" color=\"primary\" component={Link}\r\n                          to=\"/order/modify\">\r\n                      주문 수정\r\n                  </Button>\r\n              <Button\r\n                  sx={{\r\n                      bgcolor: 'gray',\r\n                      color: 'white',\r\n                      '&:hover': { bgcolor: 'gray' },\r\n                      mb: 4,\r\n                      mt: 2,\r\n                      ml: 3,\r\n                      mr: 3\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleOpen} // 모달 열기\r\n              >\r\n                  주문 삭제\r\n              </Button>\r\n\r\n              {/* 삭제 확인 모달 */}\r\n              <Dialog open={open} onClose={handleClose}>\r\n                  <DialogTitle>주문 삭제</DialogTitle>\r\n                  <DialogContent>\r\n                      <DialogContentText>\r\n                          정말 삭제하시겠습니까?\r\n                      </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                      <Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n                          예\r\n                      </Button>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                          아니오\r\n                      </Button>\r\n                  </DialogActions>\r\n              </Dialog>\r\n                  </Box>\r\n            )}\r\n        {order.orderType === 'PROGRESS_ORDER' && (\r\n            <Box mt={2}>\r\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\r\n                        variant=\"contained\" color=\"primary\" onClick={() => orderComplete(id)}>\r\n                    납품 처리\r\n                </Button>\r\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\r\n                        variant=\"contained\" color=\"primary\">\r\n                    반품 처리\r\n                </Button>\r\n            </Box>\r\n        )}\r\n        {order.orderType === 'RETURNING' && (\r\n            <Box mt={2}>\r\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\r\n                        variant=\"contained\" color=\"primary\" onClick={() => orderComplete(id)}>\r\n                    납품 처리\r\n                </Button>\r\n            </Box>\r\n        )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ReadPage;","import React, { useState } from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport LayersIcon from '@mui/icons-material/Layers';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport List from '@mui/material/List';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\nimport Inventory from '@mui/icons-material/Inventory'; // Added this line\r\nimport Store from '@mui/icons-material/Store'; // Added this line\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '@mui/material/Modal';\r\nimport ListPage from '../Order/ListPage';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nexport const MainListItems = ({ user ,statePage, setStatePage }) => {\r\n  const [openOrder, setOpenOrder] = React.useState(false);\r\n  const [openSupplier, setOpenSupplier] = React.useState(false);\r\n  const [openUser, setOpenUser] = React.useState(false);\r\n  const [openInventory, setOpenInventory] = React.useState(false);\r\n  const [openProduct, setOpenProduct] = React.useState(false);\r\n\r\n\r\n  const handleClickOrder = () => {\r\n      setStatePage(1);\r\n      setOpenOrder(!openOrder);\r\n  };\r\n\r\n  const handleClickSupplier = () => {\r\n      setStatePage(2);\r\n    setOpenSupplier(!openSupplier);\r\n  };\r\n\r\n  const handleClickUser = () => {\r\n      setStatePage(3);\r\n      setOpenUser(!openUser);\r\n  };\r\n\r\n  const handleClickInventory = () => {\r\n      setStatePage(4);\r\n        setOpenInventory(!openInventory);\r\n  };\r\n\r\n  const handleClickProduct = () => {\r\n      setStatePage(5);\r\n        setOpenProduct(!openProduct);\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItemButton sx={{ justifyContent: 'flex-start', marginLeft: 5 }}>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, marginBottom: 5 }}>\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              alt=\"Admin Name\"\r\n              src=\"/sample/sample1.jpg\"\r\n              sx={{ borderRadius: '50%', width: 100, height: 100 }} // 크기를 조절\r\n            />\r\n          </ListItemAvatar>\r\n            <ListItemText primary={user?.cname || \"Unknown\"} />\r\n        </Box>\r\n      </ListItemButton>\r\n      <Divider />\r\n      <ListItemButton onClick={handleClickOrder}> {/*주문서 관리시 상태 1로 변경*/}\r\n      <ListItemIcon>\r\n                <DashboardIcon />\r\n      </ListItemIcon>\r\n        <ListItemText primary=\"주문서 관리\" />\r\n          {/*\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            <Box sx={{\r\n                p: 4,\r\n                width: '80vw',\r\n                height: '80vh',\r\n                overflow: 'auto',\r\n                backgroundColor: 'white',\r\n                position: 'absolute', // Add position here\r\n                top: '50%', // Add top here\r\n                left: '50%', // Add left here\r\n                transform: 'translate(-50%, -50%)' // Add transform here\r\n            }}>\r\n              <ListPage />\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n                <Button variant=\"contained\" component={Link} to=\"/order/add\">주문서 등록</Button>\r\n                <Button variant=\"contained\" component={Link} to=\"/order/modify\">주문서 수정</Button>\r\n                <Button variant=\"contained\">주문서 삭제</Button>\r\n              </Box>\r\n            </Box>\r\n          </Modal>\r\n          */}\r\n\r\n      </ListItemButton>\r\n\r\n      <ListItemButton onClick={handleClickSupplier}>\r\n        <ListItemIcon>\r\n          <ShoppingCartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"공급업체 관리\" />\r\n        {openSupplier ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItemButton>\r\n      <Collapse in={openSupplier} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 등록\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 조회\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 수정\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 삭제\" />\r\n          </ListItemButton>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickUser}>\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"사용자 관리\" />\r\n              {openUser ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openUser} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/manager/list\">\r\n                  <ListItemText primary=\"사용자 목록\" />\r\n                </ListItemButton>\r\n\r\n\r\n              </List>\r\n            </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickInventory}>\r\n              <ListItemIcon>\r\n                <Inventory />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"재고 관리\" />\r\n              {openInventory ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openInventory} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"재고 확인 및 수정\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"반품 품목 확인\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"납품 품목 확인\" />\r\n                </ListItemButton>\r\n\r\n              </List>\r\n            </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickProduct}>\r\n                    <ListItemIcon>\r\n                      <Store />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"상품 관리\" />\r\n                    {openProduct ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItemButton>\r\n                  <Collapse in={openProduct} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 등록\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 조회\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 수정\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 삭제\" />\r\n                      </ListItemButton>\r\n                    </List>\r\n                  </Collapse>\r\n    </React.Fragment>\r\n  );\r\n};","import * as React from \"react\";\r\nimport Title from \"./Title\";\r\nimport Link from \"@mui/material/Link\";\r\nimport {\r\n    Text,\r\n    Typography,\r\n    Paper,\r\n    Box,\r\n    Modal,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Card, Stack, Divider, Chip\r\n} from '@mui/material';\r\n\r\nexport default function Explain() {\r\n    return (\r\n        <div>\r\n            <Typography>관리자 메뉴 내비게이션</Typography>\r\n            <hr style={{marginLeft: 0}}/>\r\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\r\n                    >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\r\n                            주문서 관리\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        모든 주문서 조회 및 특정 상태의 주문서 조회 / 주문서 수정 / 주문서 삭제 / 주문서 주문\r\n                    </Typography>\r\n                </Box>\r\n                <Divider />\r\n            </Card>\r\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\r\n                    >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\r\n                            공급업체 관리\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        공급업체 등록 : 새로운 공급업체 정보 입력 및 등록\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        공급업체 조회 : 모든 공급업체 정보 조회\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        공급업체 수정 : 선택한 공급업체 정보 수정\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        공급업체 삭제 : 선택한 공급업체 정보 삭제\r\n                    </Typography>\r\n                </Box>\r\n                <Divider />\r\n            </Card>\r\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\r\n                    >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\r\n                            사용자 관리\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        사용자 목록 : 현재 쇼핑몰의 관리자 정보 조회\r\n                    </Typography>\r\n                </Box>\r\n                <Divider />\r\n            </Card>\r\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\r\n                    >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\r\n                            재고 관리\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        재고 확인 및 수정 : 현재 쇼핑몰의 상품 재고 리스트 조회 및 수정\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        반품 품목 확인 : 반품 처리된 상품들의 리스트 조회\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        납품 품목 확인 : 납품 처리된 상품들의 리스트 조회\r\n                    </Typography>\r\n                </Box>\r\n                <Divider />\r\n            </Card>\r\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\r\n                    >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\r\n                            상품 관리\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        상품 등록 : 새로운 상품 정보 입력 및 등록\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        상품 조회 : 모든 상품 정보 조회\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        상품 수정 : 선택한 상품 정보 수정\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\r\n                        상품 삭제 : 선택한 상품 정보 삭제\r\n                    </Typography>\r\n                </Box>\r\n                <Divider />\r\n            </Card>\r\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\r\n                <Box sx={{ p: 2 }}>\r\n                        <Typography sx={{ ml : 10}}>주문서는 수요일 밤 12:00 에 갱신</Typography>\r\n                        <Typography sx={{ ml : 10}}>수요예측시 현재 상품의 재고를 입력값으로 사용</Typography>\r\n\r\n                    </Box>\r\n            </Card>\r\n        </div>\r\n    );\r\n}","\r\nimport React, { useState , useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { MainListItems } from './listItems';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport ListComponent from '../Manager/ListComponent';\r\n//import ListComponent from '../Order/ListComponent';\r\nimport ReadComponent from '../Manager/ReadComponent';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n\r\nimport Deposits from './Deposits';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ManagerRead from '../Manager/ReadPage';\r\nimport ManagerList from '../Manager/ListPage';\r\nimport AddPage from '../Manager/AddPage'; // AddPage 컴포넌트를 import 합니다.\r\nimport SupplierListPage from '../Manager/ListPage';\r\nimport OrderListPage from '../Order/ListPage';\r\nimport Explain from './Explain';\r\nimport axios from \"axios\"; // ListPage 컴포넌트를 import 합니다.\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://mui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n      '& .MuiDrawer-paper': {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        boxSizing: 'border-box',\r\n        ...(!open && {\r\n          overflowX: 'hidden',\r\n          transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n          width: theme.spacing(7),\r\n          [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n          },\r\n        }),\r\n      },\r\n      '& .MuiDrawer-paper > .admin-profile': { // 추가된 스타일\r\n        display: open ? 'block' : 'none',\r\n      },\r\n      '& .MuiDrawer-paper > *': {\r\n        overflowX: 'visible',\r\n      },\r\n    }),\r\n);\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Dashboard() {\r\n    // 현재 페이지를 나타내주는 변수 0 : 기본 / 1 : 주문서 관리 / 2:\r\n    const [statePage, setStatePage] = useState(0);\r\n\r\n\r\n\r\n    const [user, setUser] = useState(null);\r\n  const [open, setOpen] = React.useState(true);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const { moveToRead } = useCustomMove(); // useCustomMove 훅에서 moveToRead 함수를 가져옵니다.\r\n  const handleRowClick = (userId) => {\r\n    moveToRead(userId); // moveToRead 함수를 호출합니다.\r\n    console.log(selectedUserId);\r\n  };\r\n  const { userId } = useParams();\r\n\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n    {/*현재 로그인한 관리자 정보*/}\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/user/current-user', {\r\n                    withCredentials: true // 세션 쿠키 전달을 위한 설정\r\n                });\r\n                console.log(response.data); // 확인용 로그\r\n                setUser(response.data);\r\n            } catch (error) {\r\n                console.error(\"사용자 정보 가져오기 오류:\", error);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n  {/* 알림 설정 */}\r\n  const [alarmOpen, setAlarmOpen] = useState(false);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS('http://localhost:8080/ws');\r\n    const stompClient = Stomp.over(socket);\r\n\r\n    stompClient.connect({}, function (frame) {\r\n      console.log('Connected: ' + frame);\r\n\r\n      stompClient.subscribe('/topic/notifications', function (message) {\r\n        console.log('Received message:', message.body);\r\n        setNotificationCount(prevCount => prevCount + 1);\r\n        setMessages(prevMessages => [...prevMessages, message.body]); // 메시지 저장\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      if (stompClient) {\r\n        stompClient.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleAlarmOpen = () => {\r\n    setAlarmOpen(true);\r\n  };\r\n\r\n  const handleAlarmClose = () => {\r\n    setAlarmOpen(false);\r\n    setNotificationCount(0); // 알림 확인 시 카운트 초기화\r\n    setMessages([]); // 메시지 초기화 (원하는 경우)\r\n  };\r\n\r\n\r\n  {/**/}\r\n  return (\r\n      <>\r\n\r\n\r\n        <ThemeProvider theme={defaultTheme}>\r\n          <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" open={open}>\r\n              <Toolbar\r\n                  sx={{\r\n                    pr: '24px', // keep right padding when drawer closed\r\n                  }}\r\n              >\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={toggleDrawer}\r\n                    sx={{\r\n                      marginRight: '36px',\r\n                      ...(open && { display: 'none' }),\r\n                    }}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                  <Typography\r\n                      component=\"h1\"\r\n                      variant=\"h6\"\r\n                      color=\"inherit\"\r\n                      noWrap\r\n                      sx={{ flexGrow: 1, cursor: 'pointer' }} // 클릭 커서 스타일 추가\r\n                      onClick={() => setStatePage(0)} // 클릭 이벤트 핸들러 추가\r\n                  >\r\n                      Dashboard\r\n                  </Typography>\r\n                {/*주문서 생성 알림*/}\r\n                <IconButton color=\"inherit\" onClick={handleAlarmOpen}>\r\n                  <Badge badgeContent={notificationCount} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <Dialog\r\n                    open={alarmOpen}\r\n                    onClose={handleAlarmClose}\r\n                    PaperProps={{\r\n                      style: {\r\n                        position: 'absolute',\r\n                        top: '20px', // 버튼 바로 아래 위치 조정\r\n                        right: '1px', // 오른쪽 위치 조정\r\n                        transform: 'translateX(0)', // 기본 위치\r\n                      },\r\n                    }}\r\n                    BackdropProps={{ invisible: true }} // 배경 어두운 효과 끄기\r\n                >\r\n                  <DialogTitle>알림</DialogTitle>\r\n                  <DialogContent>\r\n                    {messages.length === 0 ? (\r\n                        <Typography>현재 알림이 없습니다.</Typography>\r\n                    ) : (\r\n                        messages.map((msg, index) => (\r\n                            <Typography key={index}>{msg}</Typography>\r\n                        ))\r\n                    )}\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleAlarmClose}>닫기</Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n                {/**/}\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n              <Toolbar\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    px: [1],\r\n                  }}\r\n              >\r\n              </Toolbar>\r\n              <Divider />\r\n              <List component=\"nav\">\r\n                  {/*관리자 메뉴*/}\r\n                  <MainListItems user={user} statePage={statePage} setStatePage={setStatePage} />\r\n                <Divider sx={{ my: 1 }} />\r\n              </List>\r\n            </Drawer>\r\n            <Box\r\n                component=\"main\"\r\n                sx={{\r\n                  backgroundColor: (theme) =>\r\n                      theme.palette.mode === 'light'\r\n                          ? theme.palette.grey[100]\r\n                          : theme.palette.grey[900],\r\n                  flexGrow: 1,\r\n                  height: '100vh',\r\n                  overflow: 'auto',\r\n                }}\r\n            >\r\n              <Toolbar />\r\n              <Container maxWidth=\"lg\" sx={{ ml:4, mt: 4, mb: 4 }}>\r\n                      {/*서브메뉴 클릭시 변경되는 페이지*/}\r\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column',height : 'flex' , width: 1550 }}>\r\n                        {/*statePage가 변경될때마다 구성내용 변경*/}\r\n                        {statePage === 1 ? (\r\n                            <OrderListPage/> // statePage가 1일 때\r\n                        ) : statePage === 2 ? (\r\n                            <SupplierListPage/> // statePage가 3일 때\r\n                        ) : ( // statePage가 0일 때\r\n                            <Explain/>\r\n                  )}\r\n              </Paper>\r\n                {/*\r\n                      <Routes>\r\n                        <Route path=\"/add\" element={<AddPage />} />\r\n                        <Route path=\"/list\" element={<OrderListPage />} />\r\n                        <Route path=\"*\" element={<Outlet />} />\r\n                      </Routes>\r\n                      */}\r\n                <Copyright sx={{ pt: 4 }} />\r\n              </Container>\r\n            </Box>\r\n          </Box>\r\n        </ThemeProvider>\r\n      </>\r\n  );\r\n}","import React from 'react';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst PageComponent = ({serverData, movePage}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\r\n      {serverData.prev ?\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\r\n          Prev\r\n        </Button> : null}\r\n      {serverData.pageNumList.map(pageNum =>\r\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\r\n          {pageNum}\r\n        </Button>\r\n      )}\r\n      {serverData.next ?\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\r\n          Next\r\n        </Button> : null}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PageComponent;","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\r\n\r\nconst ResultModal = ({ title, content, callbackFn }) => {\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={callbackFn}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          {content}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\r\n          Close Modal\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ResultModal;","import { useCallback, useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n    return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n}\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n\r\n      const navigate = useNavigate()\r\n\r\n      const [refresh, setRefresh] = useState(false)\r\n\r\n      const [queryParams] = useSearchParams()\r\n\r\n      const page = getNum(queryParams.get('page'), 1)\r\n      const size = getNum(queryParams.get('size'), 10)\r\n\r\n      const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n      const moveToList = (pageParam) => {\r\n      console.log('moveToList called with: ', pageParam);\r\n        let queryStr = \"\"\r\n         if(pageParam){\r\n\r\n          const pageNum = getNum(pageParam.page, 1)\r\n          const sizeNum = getNum(pageParam.size, 10)\r\n\r\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n      }  else {\r\n          queryStr = queryDefault\r\n         }\r\n\r\n         setRefresh(!refresh)\r\n\r\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\r\n       navigate({pathname: '/list', search: queryStr});\r\n      }\r\n\r\n\r\n     const moveToModify = useCallback((num) => {\r\n     console.log(queryDefault)\r\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\r\n     },[page,size])\r\n\r\n     const moveToRead = (userId) => {\r\n       console.log('userId:', userId); // userId 파라미터 로깅\r\n       console.log(queryDefault)\r\n       navigate({\r\n         pathname: `../read/${userId}`,\r\n         search: queryDefault\r\n       })\r\n     }\r\n\r\n     const moveToDashboard = () => {\r\n         navigate('/dashboard');\r\n       };\r\n\r\n\r\n     return {moveToList, moveToModify, moveToDashboard, moveToRead, page, size, refresh}\r\n   }\r\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","id","orderObj","order","orderedProducts","totalPrice","orderType","pageRequestDTO","total","initState","mname","mtel","memail","uadr","AddComponent","setManager","useState","result","setResult","moveToList","moveToDashboard","useCustomMove","handleChangeManager","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","onChange","inputProps","pattern","helperText","Button","onClick","handleClickAdd","then","catch","console","error","_ref","open","onClose","Dialog","Typography","component","gutterBottom","dtoList","pageNumList","prev","next","totoalCount","prevPage","nextPage","totalPage","current","ListComponent","selectedUserId","setSelectedUserId","setOpen","moveToRead","refresh","serverData","setServerData","managers","setManagers","openModal","setOpenModal","useNavigate","useEffect","handleClose","className","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","map","handleRowClick","scope","colSpan","PageComponent","movePage","maxWidth","fullWidth","PaperProps","style","height","DialogTitle","DialogContent","ReadComponent","mt","display","justifyContent","position","bottom","left","transform","color","ml","Modal","handleModalClose","alignItems","backgroundColor","marginTop","ModifyPage","log","alert","supplierDelete","ListPage","queryParams","useSearchParams","handleOpen","AddPage","complete","moveList","moveRead","disabled","select","SelectProps","native","handleClickDelete","handleClickModify","textAlign","padding","boxSizing","ModifyComponent","mName","mEmail","mProfileImage","uAdr","p","Grid","container","spacing","item","xs","fontWeight","Divider","width","my","fontSize","ReadPage","useParams","onRowClick","setOrderType","selectedId","setSelectedId","setOrder","cursor","product","index","totalAmount","handleCloseModal","top","overflow","bgcolor","gap","FormControl","InputLabel","Select","event","MenuProps","borderColor","MenuItem","mr","Link","to","moveToModify","response","fetchOrderDetails","Array","isArray","Date","toLocaleString","border","marginLeft","imageBase64","itemImage","btoa","String","fromCharCode","Uint8Array","price","amount","marginBottom","src","alt","marginRight","margin","itemType","orderComplete","orderDelete","flexDirection","elevation","mb","orderAssign","DialogContentText","DialogActions","handleDelete","autoFocus","MainListItems","user","statePage","setStatePage","openOrder","setOpenOrder","React","openSupplier","setOpenSupplier","openUser","setOpenUser","openInventory","setOpenInventory","openProduct","setOpenProduct","ListItemButton","ListItemAvatar","Avatar","borderRadius","ListItemText","primary","cname","handleClickOrder","ListItemIcon","DashboardIcon","handleClickSupplier","ShoppingCartIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","pl","handleClickUser","PeopleIcon","handleClickInventory","Inventory","handleClickProduct","Store","Explain","Card","Stack","direction","Copyright","props","href","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","_ref2","whiteSpace","overflowX","breakpoints","up","defaultTheme","createTheme","Dashboard","setUser","withCredentials","fetchUser","alarmOpen","setAlarmOpen","notificationCount","setNotificationCount","messages","setMessages","socket","SockJS","stompClient","Stomp","over","connect","frame","subscribe","message","body","prevCount","prevMessages","disconnect","handleAlarmClose","ThemeProvider","CssBaseline","Toolbar","pr","IconButton","edge","toggleDrawer","MenuIcon","noWrap","flexGrow","handleAlarmOpen","Badge","badgeContent","NotificationsIcon","right","BackdropProps","invisible","msg","px","palette","mode","grey","Container","OrderListPage","SupplierListPage","pt","pageNum","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num"],"sourceRoot":""}