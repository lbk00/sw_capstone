{"version":3,"file":"static/js/570.00c55cb1.chunk.js","mappings":"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","sources":["api/ManagerApi.js","components/common/PageComponent.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ReadComponent.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n export const API_SERVER_HOST = 'http://localhost:8080'\r\n const prefix = `${API_SERVER_HOST}/api/manager`\r\n export const getOne = async (userId) => {\r\n  const res = await axios.get(`${prefix}/${userId}` )\r\n  return res.data\r\n  }\r\nexport const getList = async ( pageParam ) => {\r\n const {page,size} = pageParam\r\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\r\n return res.data\r\n }\r\n\r\nexport const postAdd = async (managerObj) => {\r\n const res = await axios.post(`${prefix}/` , managerObj)\r\n return res.data\r\n }\r\n\r\nexport const deleteOne = async (userId) => {\r\n\r\n  const res = await axios.delete(`${prefix}/${userId}` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const putOne = async (manager) => {\r\n\r\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst PageComponent = ({serverData, movePage}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\r\n      {serverData.prev ?\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\r\n          Prev\r\n        </Button> : null}\r\n      {serverData.pageNumList.map(pageNum =>\r\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\r\n          {pageNum}\r\n        </Button>\r\n      )}\r\n      {serverData.next ?\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\r\n          Next\r\n        </Button> : null}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PageComponent;","import { useEffect, useState } from \"react\";\r\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\r\nimport { getList, getOne } from \"../../api/ManagerApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport ReadComponent from './ReadComponent';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PageComponent from \"../common/PageComponent\";\r\n\r\n\r\nconst initState = {\r\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\r\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\r\n}\r\n\r\nconst ListComponent = ({ onRowClick }) => {\r\n  console.log(onRowClick);\r\n  const [selectedUserId, setSelectedUserId] = useState(null); // setSelectedUserId 함수 정의\r\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove()\r\n  const [serverData, setServerData] = useState(initState)\r\n  const [managers, setManagers] = useState([]); // managers state\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getList({page,size}).then(data => {\r\n      console.log(data)\r\n      setServerData(data)\r\n      setManagers(data.dtoList) // setManagers function\r\n      console.log(data.dtoList)\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching data: ', error);\r\n      setManagers([]); // API 호출 실패 시 managers를 빈 배열로 설정\r\n    });\r\n  }, [page,size, refresh]);\r\n  return (\r\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>userId</TableCell>\r\n                <TableCell align=\"right\">이름</TableCell>\r\n                <TableCell align=\"right\">성별</TableCell>\r\n                <TableCell align=\"right\">ID</TableCell>\r\n                <TableCell align=\"right\">PW</TableCell>\r\n                <TableCell align=\"right\">생년월일</TableCell>\r\n                <TableCell align=\"right\">전화번호</TableCell>\r\n                <TableCell align=\"right\">이메일</TableCell>\r\n                <TableCell align=\"right\">주소</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {managers.length > 0 ? managers.map(manager =>\r\n                <TableRow key={manager.userId} onClick={() => {\r\n                      console.log(`Row clicked with userId: ${manager.userId}`); // 로깅하여 확인\r\n                      onRowClick(manager.userId);\r\n                      }}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {manager.userId}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{manager.mname}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mgender}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mid}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mpw}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mtel}</TableCell>\r\n                  <TableCell align=\"right\">{manager.memail}</TableCell>\r\n                  <TableCell align=\"right\">{manager.uadr}</TableCell>\r\n                </TableRow>\r\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n      <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListComponent;","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport ListComponent from \"./ListComponent\";\r\n\r\n\r\n\r\n  const ListPage = () => {\r\n\r\n    const [queryParams] = useSearchParams()\r\n    const page = queryParams.get(\"page\") ||1\r\n    const size = queryParams.get(\"size\") ||10\r\n\r\n    return (\r\n    <div className=\"p-4 w-full bg-orange-200 \">\r\n     <div className=\"text-3xl font-extrabold\">\r\n       Manager List Page Component\r\n     </div>\r\n     <ListComponent/>\r\n\r\n     <div>{page}</div>\r\n\r\n    </div>\r\n    );\r\n  }\r\nexport default ListPage;\r\n\r\n","import { useEffect, useState,} from \"react\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOne } from \"../../api/ManagerApi\"\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\r\n\r\nconst initState = {\r\n    userId: 0,\r\n    mID: '',\r\n    mPW: '',\r\n    mName: '',\r\n    mGender: '',\r\n    mbirthDate: '',\r\n    mtel: '',\r\n    mEmail: '',\r\n    mProfileImage: '',\r\n    uAdr: '',\r\n}\r\n\r\nfunction ReadComponent({ userId }) {\r\n\r\n\r\n    const [manager, setManager] = useState(initState);\r\n\r\n    const {moveToList, moveToModify} = useCustomMove();\r\n\r\n    useEffect(() => {\r\n      getOne(userId)\r\n        .then(data => {\r\n          console.log(data); // API로부터 받아온 데이터를 콘솔에 출력\r\n          setManager(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data: ', error); // API 호출에 실패했을 때 에러 메시지를 출력\r\n        });\r\n    }, [userId]);\r\n\r\n    return(\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>userId</TableCell>\r\n                            <TableCell align=\"right\">이름</TableCell>\r\n                            <TableCell align=\"right\">성별</TableCell>\r\n                            <TableCell align=\"right\">ID</TableCell>\r\n                            <TableCell align=\"right\">PW</TableCell>\r\n                            <TableCell align=\"right\">생년월일</TableCell>\r\n                            <TableCell align=\"right\">전화번호</TableCell>\r\n                            <TableCell align=\"right\">이메일</TableCell>\r\n                            <TableCell align=\"right\">주소</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {manager.userId}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{manager.mname}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mgender}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mid}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mpw}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mtel}</TableCell>\r\n                            <TableCell align=\"right\">{manager.memail}</TableCell>\r\n                            <TableCell align=\"right\">{manager.uadr}</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n\r\n            <div className=\"flex justify-end p-4\">\r\n              <button type=\"button\"\r\n                           className=\"rounded p-4 text-xl w-32 text-white bg-blue-500\"\r\n                           onClick={() => moveToList()}>\r\n                    list\r\n                    </button>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end p-4\">\r\n              <button type=\"button\"\r\n                    className=\"rounded p-4 text-xl w-32 text-white bg-red-500\"\r\n                    onClick={() => moveToModify(manager.userId)}>\r\n              Modify\r\n              </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst makeDiv = (title, value) =>\r\n  <div className=\"flex justify-center\">\r\n    <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n      <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n        <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\nexport default ReadComponent;","import { useCallback, useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n    return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n}\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n\r\n      const navigate = useNavigate()\r\n\r\n      const [refresh, setRefresh] = useState(false)\r\n\r\n      const [queryParams] = useSearchParams()\r\n\r\n      const page = getNum(queryParams.get('page'), 1)\r\n      const size = getNum(queryParams.get('size'), 10)\r\n\r\n      const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n      const moveToList = (pageParam) => {\r\n      console.log('moveToList called with: ', pageParam);\r\n        let queryStr = \"\"\r\n         if(pageParam){\r\n\r\n          const pageNum = getNum(pageParam.page, 1)\r\n          const sizeNum = getNum(pageParam.size, 10)\r\n\r\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n      }  else {\r\n          queryStr = queryDefault\r\n         }\r\n\r\n         setRefresh(!refresh)\r\n\r\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\r\n       navigate({pathname: '/list', search: queryStr});\r\n      }\r\n\r\n     const moveToModify = useCallback((num) => {\r\n     console.log(queryDefault)\r\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\r\n     },[page,size])\r\n\r\n     const moveToRead = (userId) => {\r\n       console.log('userId:', userId); // userId 파라미터 로깅\r\n       console.log(queryDefault)\r\n       navigate({\r\n         pathname: `../read/${userId}`,\r\n         search: queryDefault\r\n       })\r\n     }\r\n\r\n\r\n     return {moveToList, moveToModify, moveToRead, page, size, refresh}\r\n   }\r\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","_ref","serverData","movePage","_jsxs","Box","sx","display","justifyContent","m","p","children","prev","_jsx","Button","variant","color","onClick","prevPage","pageNumList","map","pageNum","current","next","nextPage","initState","dtoList","pageRequestDTO","totoalCount","totalPage","onRowClick","console","log","selectedUserId","setSelectedUserId","useState","moveToRead","refresh","moveToList","useCustomMove","setServerData","managers","setManagers","useParams","useNavigate","useEffect","then","catch","error","className","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","scope","mname","mgender","mid","mpw","mbirthDate","mtel","memail","uadr","colSpan","PageComponent","ListPage","queryParams","useSearchParams","ListComponent","mID","mPW","mName","mGender","mEmail","mProfileImage","uAdr","setManager","moveToModify","_Fragment","type","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num"],"sourceRoot":""}