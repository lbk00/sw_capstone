{"version":3,"file":"static/js/292.044f42d5.chunk.js","mappings":"uKAEQ,MACDA,EAAM,GAAAC,OADmB,wBACE,gBACpBC,EAASC,gBACHC,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,KAAAC,OAAIK,KAC9BC,KAEAC,EAAUL,UACtB,MAAM,KAACM,EAAI,KAACC,GAAQC,EAEpB,aADkBP,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,SAAS,CAACY,OAAQ,CAACH,KAAKA,EAAKC,KAAKA,MAC5DH,IAAI,EAGHM,EAAUV,gBACJC,EAAAA,EAAMU,KAAK,GAADb,OAAID,EAAM,KAAMe,IACjCR,KAGCS,EAAYb,gBAELC,EAAAA,EAAMa,OAAO,GAADhB,OAAID,EAAM,KAAAC,OAAIK,KAEjCC,KAIAW,EAASf,gBAEFC,EAAAA,EAAMe,IAAI,GAADlB,OAAID,EAAM,KAAAC,OAAImB,EAAQd,QAAUc,IAEhDb,I,iICxBb,MAAMc,EAAY,CAChBf,OAAO,EAEPgB,MAAO,GAGPC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,UAAU,GA+IZ,EA5IwBC,IAAmC,IAAlC,OAACrB,EAAM,SAAEsB,EAAQ,SAAEC,GAASF,EAEnD,MAAOP,EAASU,IAAcC,EAAAA,EAAAA,UAAS,IAAIV,KAIpCW,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAG/B,WAACG,EAAU,WAAEC,IAAcC,EAAAA,EAAAA,MAiCjCC,EAAAA,EAAAA,YAAU,MAERnC,EAAAA,EAAAA,IAAOI,GAAQgC,MAAK/B,GAASuB,EAAWvB,IAAM,GAE9C,CAACD,IAEH,MAAMiC,EAAuBC,IAE3BpB,EAAQoB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAElCb,EAAW,IAAIV,GAAS,EAY1B,OACIwB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE,kBAAmB,CAAEC,EAAG,IAAMC,SAAA,CACtChB,GAASiB,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,MAAO,2BAAQC,QAASpB,EAAQqB,WAlC1CC,KACJ,YAAVtB,EACDE,IAEAC,EAAW7B,EACb,KA6BoG2C,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,KAEhGN,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,SACNC,QAAQ,WACRf,MAAOvB,EAAQd,OACfqD,UAAQ,KAGhBV,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACAC,MAAM,OACNC,QAAQ,WACRhB,KAAK,QACLC,MAAOvB,EAAQE,MACfsC,SAAUrB,KAIpBU,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,QACNC,QAAQ,WACRhB,KAAK,SACLC,MAAOvB,EAAQG,OACfqC,SAAUrB,EACVsB,WAAY,CAAEC,QAAS,2CACvBC,WAAW,iCAGnBd,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,UACNC,QAAQ,WACRhB,KAAK,OACLC,MAAOvB,EAAQK,KACfmC,SAAUrB,EACVsB,WAAY,CAAEC,QAAS,oBACvBC,WAAW,0CAGnBd,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,eACNC,QAAQ,WACRhB,KAAK,OACLC,MAAOvB,EAAQI,KACfoC,SAAUrB,EACVsB,WAAY,CAAEC,QAAS,0BACvBC,WAAW,2BAGnBnB,EAAAA,EAAAA,MAACY,EAAAA,EAAS,CACRC,MAAM,WACNC,QAAQ,WACRhB,KAAK,WACLC,MAAOvB,EAAQM,SAAW,IAAM,IAChCkC,SAhE6BpB,IAEnC,MAAMG,EAAQH,EAAEC,OAAOE,MAEvBvB,EAAQM,SAAsB,MAAViB,EAEpBb,EAAW,IAAIV,GAAS,EA2DlB4C,QAAM,EACNC,YAAa,CACXC,QAAQ,GACRlB,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQN,MAAM,IAAGK,SAAC,eAClBC,EAAAA,EAAAA,KAAA,UAAQN,MAAM,IAAGK,SAAC,gBAGpBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACT,QAAQ,YAAYU,MAAM,YAAYC,QA3G1BC,MAExBtD,EAAAA,EAAAA,IAAUV,GAAQgC,MAAM/B,IACtBgE,QAAQC,IAAI,kBAAoBjE,GAChC0B,EAAU,UAAU,GACpB,EAsG2Ee,SAAC,YAI1EC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACT,QAAQ,YAAYU,MAAM,UAAUC,QAzHxBI,MAIxBvD,EAAAA,EAAAA,IAAOE,GAASkB,MAAK/B,IACnBgE,QAAQC,IAAI,kBAAoBjE,GAChC0B,EAAU,WAAW,GACrB,EAkHyEe,SAAC,aAGpE,ECjIZ,EAvBmBrB,IAA0B,IAAzB,OAAErB,EAAM,QAAEoE,GAAS/C,EAIrC,OACIiB,EAAAA,EAAAA,MAAA,OACI+B,UAAU,oDACVC,MAAO,CACHC,UAAW,SACXC,QAAS,OACTC,UAAW,cACb/B,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OAAK0B,UAAU,0BAAyB3B,SAAC,yBAIzCC,EAAAA,EAAAA,KAAC+B,EAAe,CAAC1E,OAAQA,MAEvB,C,iHCnBZ,MAuBA,EAvBoBqB,IAAqC,IAApC,MAAEwB,EAAK,QAAEC,EAAO,WAAEC,GAAY1B,EACjD,OACEiB,EAAAA,EAAAA,MAACqC,EAAAA,EAAM,CACLC,MAAM,EACNR,QAASrB,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BL,SAAA,EAE3CC,EAAAA,EAAAA,KAACkC,EAAAA,EAAW,CAACC,GAAG,qBAAoBpC,SAAEG,KACtCF,EAAAA,EAAAA,KAACoC,EAAAA,EAAa,CAAArC,UACZC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAAC5B,QAAQ,KAAK6B,UAAU,MAAKvC,SACrCI,OAGLH,EAAAA,EAAAA,KAACuC,EAAAA,EAAa,CAAAxC,UACZC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACE,QAAShB,EAAYe,MAAM,UAAUqB,WAAS,EAAAzC,SAAC,oBAIlD,C,oECjBb,MAAM0C,EAASA,CAACC,EAAOC,IAEfD,EAIGE,SAASF,GAHTC,EA8DX,EAvDsBxD,KAGhB,MAAM0D,GAAWC,EAAAA,EAAAA,OAEVC,EAASC,IAAclE,EAAAA,EAAAA,WAAS,IAEhCmE,IAAeC,EAAAA,EAAAA,mBAEhB1F,EAAOiF,EAAOQ,EAAY7F,IAAI,QAAS,GACvCK,EAAOgF,EAAOQ,EAAY7F,IAAI,QAAS,IAEvC+F,GAAeC,EAAAA,EAAAA,oBAAmB,CAAC5F,OAAMC,SAAO4F,WAyCvD,MAAO,CAACpE,WAvCavB,IACpB4D,QAAQC,IAAI,2BAA4B7D,GACtC,IAAI4F,EAAW,GACd,GAAG5F,EAAU,CAEZ,MAAM6F,EAAUd,EAAO/E,EAAUF,KAAM,GACjCgG,EAAUf,EAAO/E,EAAUD,KAAM,IAEvC6F,GAAWF,EAAAA,EAAAA,oBAAmB,CAAC5F,KAAK+F,EAAS9F,KAAM+F,IAAUH,UACjE,MACIC,EAAWH,EAGZH,GAAYD,GAEdzB,QAAQC,IAAI,kBAAmB,CAACkC,SAAU,QAASC,OAAQJ,IAC3DT,EAAS,CAACY,SAAU,QAASC,OAAQJ,GAAU,EAuB7BK,cAnBCC,EAAAA,EAAAA,cAAaC,IAClCvC,QAAQC,IAAI4B,GACZN,EAAS,CAAEY,SAAS,aAADzG,OAAe6G,GAAOH,OAAQP,GAAe,GAC9D,CAAC3F,EAAKC,IAgB0BqG,gBALVA,KACpBjB,EAAS,aAAa,EAIyB3D,WAd/B7B,IAClBiE,QAAQC,IAAI,UAAWlE,GACvBiE,QAAQC,IAAI4B,GACZN,EAAS,CACPY,SAAS,WAADzG,OAAaK,GACrBqG,OAAQP,GACR,EAQ2D3F,OAAMC,OAAMsF,UAAQ,C","sources":["api/ManagerApi.js","components/Manager/ModifyComponent.js","components/Manager/ModifyPage.js","components/common/ResultModal.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n export const API_SERVER_HOST = 'http://localhost:8080'\r\n const prefix = `${API_SERVER_HOST}/api/manager`\r\n export const getOne = async (userId) => {\r\n  const res = await axios.get(`${prefix}/${userId}` )\r\n  return res.data\r\n  }\r\nexport const getList = async ( pageParam ) => {\r\n const {page,size} = pageParam\r\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\r\n return res.data\r\n }\r\n\r\nexport const postAdd = async (managerObj) => {\r\n const res = await axios.post(`${prefix}/` , managerObj)\r\n return res.data\r\n }\r\n\r\nexport const deleteOne = async (userId) => {\r\n\r\n  const res = await axios.delete(`${prefix}/${userId}` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const putOne = async (manager) => {\r\n\r\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { deleteOne, getOne, putOne } from \"../../api/ManagerApi\";\r\nimport { TextField, Button, Box } from '@mui/material';\r\n\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\nconst initState = {\r\n  userId:0,\r\n\r\n  mname: '',\r\n\r\n\r\n  memail: '',\r\n  mtel: '',\r\n  uadr: '',\r\n  complete: false\r\n}\r\n\r\nconst ModifyComponent = ({userId, moveList, moveRead}) => {\r\n\r\n  const [manager, setManager] = useState({...initState})\r\n\r\n\r\n  //모달 창을 위한 상태\r\n  const [result, setResult] = useState(null)\r\n\r\n  //이동을 위한 기능들\r\n  const {moveToList, moveToRead} = useCustomMove()\r\n\r\n\r\n  const handleClickModify = () => { //버튼 클릭시\r\n\r\n    //console.log(manager)\r\n\r\n    putOne(manager).then(data => {\r\n      console.log(\"modify result: \" + data)\r\n      setResult('Modified')\r\n    })\r\n  }\r\n\r\n  const handleClickDelete = () => { //버튼 클릭시\r\n\r\n    deleteOne(userId).then( data => {\r\n      console.log(\"delete result: \" + data)\r\n      setResult('Deleted')\r\n    })\r\n\r\n  }\r\n\r\n  //모달 창이 close될때\r\n  const closeModal = () => {\r\n    if(result ==='Deleted') {\r\n      moveToList()\r\n    }else {\r\n      moveToRead(userId)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getOne(userId).then(data =>  setManager(data))\r\n\r\n  },[userId])\r\n\r\n  const handleChangeManager = (e) => {\r\n\r\n    manager[e.target.name] = e.target.value\r\n\r\n    setManager({...manager})\r\n  }\r\n\r\n  const handleChangeManagerComplete = (e) => {\r\n\r\n    const value = e.target.value\r\n\r\n    manager.complete = (value === 'Y')\r\n\r\n    setManager({...manager})\r\n  }\r\n\r\n  return (\r\n      <Box sx={{ '& > :not(style)': { m: 1 } }}>\r\n        {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal>  :<></>}\r\n\r\n        <TextField\r\n                label=\"userId\"\r\n                variant=\"outlined\"\r\n                value={manager.userId}\r\n                disabled\r\n              />\r\n\r\n        <TextField\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  name=\"mname\"\r\n                  value={manager.mname}\r\n                  onChange={handleChangeManager}\r\n                />\r\n\r\n\r\n        <TextField\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"memail\"\r\n                value={manager.memail}\r\n                onChange={handleChangeManager}\r\n                inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\r\n                helperText=\"Format: example@example.com\"\r\n              />\r\n\r\n        <TextField\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                name=\"uadr\"\r\n                value={manager.uadr}\r\n                onChange={handleChangeManager}\r\n                inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\r\n                helperText=\"Format: Street, City, State, Country\"\r\n              />\r\n\r\n        <TextField\r\n                label=\"Phone Number\"\r\n                variant=\"outlined\"\r\n                name=\"mtel\"\r\n                value={manager.mtel}\r\n                onChange={handleChangeManager}\r\n                inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\r\n                helperText=\"Format: 123-4567-8901\"\r\n              />\r\n\r\n        <TextField\r\n          label=\"COMPLETE\"\r\n          variant=\"outlined\"\r\n          name=\"complete\"\r\n          value={manager.complete ? 'Y' : 'N'}\r\n          onChange={handleChangeManagerComplete}\r\n          select\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n        >\r\n          <option value='Y'>Completed</option>\r\n          <option value='N'>Not Yet</option>\r\n        </TextField>\r\n\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\r\n          Delete\r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\r\n          Modify\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default ModifyComponent;\r\n","import { useParams } from \"react-router-dom\";\r\nimport ModifyComponent from \"./ModifyComponent\";\r\n\r\nconst ModifyPage = ({ userId, onClose }) => {\r\n\r\n  //const {userId} = useParams()\r\n\r\n  return (\r\n      <div\r\n          className=\"p-4 w-full max-w-lg bg-white rounded-lg shadow-lg\"\r\n          style={{\r\n              textAlign: 'center',\r\n              padding: '2rem',         // Optional: add padding for inner spacing\r\n              boxSizing: 'border-box', // Ensure padding doesn’t affect width\r\n          }}\r\n      >\r\n          <div className=\"text-3xl font-extrabold\">\r\n              Manager Modify Page\r\n          </div>\r\n\r\n          <ModifyComponent userId={userId}/>\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ModifyPage;\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\r\n\r\nconst ResultModal = ({ title, content, callbackFn }) => {\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={callbackFn}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          {content}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\r\n          Close Modal\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ResultModal;","import { useCallback, useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n    return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n}\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n\r\n      const navigate = useNavigate()\r\n\r\n      const [refresh, setRefresh] = useState(false)\r\n\r\n      const [queryParams] = useSearchParams()\r\n\r\n      const page = getNum(queryParams.get('page'), 1)\r\n      const size = getNum(queryParams.get('size'), 10)\r\n\r\n      const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n      const moveToList = (pageParam) => {\r\n      console.log('moveToList called with: ', pageParam);\r\n        let queryStr = \"\"\r\n         if(pageParam){\r\n\r\n          const pageNum = getNum(pageParam.page, 1)\r\n          const sizeNum = getNum(pageParam.size, 10)\r\n\r\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n      }  else {\r\n          queryStr = queryDefault\r\n         }\r\n\r\n         setRefresh(!refresh)\r\n\r\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\r\n       navigate({pathname: '/list', search: queryStr});\r\n      }\r\n\r\n\r\n     const moveToModify = useCallback((num) => {\r\n     console.log(queryDefault)\r\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\r\n     },[page,size])\r\n\r\n     const moveToRead = (userId) => {\r\n       console.log('userId:', userId); // userId 파라미터 로깅\r\n       console.log(queryDefault)\r\n       navigate({\r\n         pathname: `../read/${userId}`,\r\n         search: queryDefault\r\n       })\r\n     }\r\n\r\n     const moveToDashboard = () => {\r\n         navigate('/dashboard');\r\n       };\r\n\r\n\r\n     return {moveToList, moveToModify, moveToDashboard, moveToRead, page, size, refresh}\r\n   }\r\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","initState","mname","memail","mtel","uadr","complete","_ref","moveList","moveRead","setManager","useState","result","setResult","moveToList","moveToRead","useCustomMove","useEffect","then","handleChangeManager","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","disabled","onChange","inputProps","pattern","helperText","select","SelectProps","native","Button","color","onClick","handleClickDelete","console","log","handleClickModify","onClose","className","style","textAlign","padding","boxSizing","ModifyComponent","Dialog","open","DialogTitle","id","DialogContent","Typography","component","DialogActions","autoFocus","getNum","param","defaultValue","parseInt","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","queryDefault","createSearchParams","toString","queryStr","pageNum","sizeNum","pathname","search","moveToModify","useCallback","num","moveToDashboard"],"sourceRoot":""}