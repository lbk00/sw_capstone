{"version":3,"file":"static/js/913.0147069d.chunk.js","mappings":"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","sources":["api/ManagerApi.js","api/ProductApi.js","components/Manager/AddComponent.js","components/Manager/AddPage.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ModifyComponent.js","components/Manager/ModifyPage.js","components/Manager/ReadComponent.js","components/Manager/ReadPage.js","components/Product/AddComponent.js","components/Product/AddPage.js","components/adminpage/listItems.js","api/UserApi.js","components/User/ListComponent.js","components/User/ListPage.js","components/Product/ReadComponent.js","components/Product/ModifyComponent.js","components/Product/ModifyPage.js","components/Product/ListComponent.js","components/Product/ListPage.js","components/adminpage/Explain.js","components/adminpage/Dashboard.js"],"sourcesContent":["import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/api/manager`\n export const getOne = async (userId) => {\n  const res = await axios.get(`${prefix}/${userId}` )\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (managerObj) => {\n const res = await axios.post(`${prefix}/` , managerObj)\n return res.data\n }\n\nexport const deleteOne = async (userId) => {\n\n  const res = await axios.delete(`${prefix}/${userId}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (manager) => {\n\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\n\n  return res.data\n}\n\n\n","import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/products`\n export const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (productObj) => {\n const res = await axios.post(`${prefix}/create` , productObj)\n return res.data\n }\n\nexport const deleteOne = async (id) => {\n\n  const res = await axios.delete(`${prefix}/${id}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (product) => {\n\n  const res = await axios.put(`${prefix}/${product.id}`, product)\n\n  return res.data\n}\n\n\n","import React, { useState } from \"react\";\nimport { postAdd } from \"../../api/ManagerApi\";\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport { TextField, Button, Box } from '@mui/material';\n\nconst initState = {\n  mname: '',\n  mtel: '',\n  memail: '',\n  uadr: '',\n}\n\nconst AddComponent = () => {\n  const [manager, setManager] = useState({ ...initState });\n  const [result, setResult] = useState(null);\n  const { moveToList, moveToDashboard } = useCustomMove();\n\n  const handleChangeManager = (e) => {\n    manager[e.target.name] = e.target.value;\n    setManager({ ...manager });\n  }\n\n  const handleClickAdd = () => {\n    postAdd(manager)\n      .then(result => {\n        setResult(result.userId);\n        setManager({ ...initState });\n      }).catch(e => { console.error(e) });\n  }\n\n  const closeModal = () => {\n    setResult(null);\n    moveToDashboard();\n  }\n\n  return (\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\n      {result ? <ResultModal title={'Add Result'} content={`등록이 완료되었습니다`} callbackFn={closeModal} /> : <></>}\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        name=\"mname\"\n        value={manager.mname}\n        onChange={handleChangeManager}\n      />\n      <TextField\n        label=\"Phone Number\"\n        variant=\"outlined\"\n        name=\"mtel\"\n        value={manager.mtel}\n        onChange={handleChangeManager}\n        inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\n        helperText=\"Format: 123-4567-8901\"\n      />\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        name=\"memail\"\n        value={manager.memail}\n        onChange={handleChangeManager}\n        inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\n        helperText=\"Format: example@example.com\"\n      />\n      <TextField\n        label=\"Address\"\n        variant=\"outlined\"\n        name=\"uadr\"\n        value={manager.uadr}\n        onChange={handleChangeManager}\n        inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\n        helperText=\"Format: Street, City, State, Country\"\n      />\n      <Button variant=\"contained\" onClick={handleClickAdd}>\n        등록\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddComponent;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Container, Typography } from '@mui/material';\nimport AddComponent from './AddComponent';\n\nconst AddPage = ({ open, onClose }) => {\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                공급업체 등록 페이지\n            </Typography>\n            <AddComponent />\n        </Dialog>\n    );\n};\n\nexport default AddPage;\n","// src/main/frontend/src/components/Manager/ListComponent.js\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/ManagerApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\nimport PageComponent from \"../common/PageComponent\";\nimport axios from \"axios\";\nimport ModifyPage from './ModifyPage';\nimport Modal from \"@mui/material/Modal\";\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = () => {\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [managers, setManagers] = useState([]);\n  const navigate = useNavigate();\n  const [openModal, setOpenModal] = useState(false);\n\n\n\n  useEffect(() => {\n    getList({ page, size }).then(data => {\n      setServerData(data);\n      setManagers(data.dtoList);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setManagers([]);\n    });\n  }, [page, size, refresh]);\n\n  const handleRowClick = (userId) => {\n    setSelectedUserId(userId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedUserId(null);\n  };\n\n  const handleOpen = (userId) => {\n    setSelectedUserId(userId);\n    setOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleModifyPage = (userId) => {\n    navigate(`/manager/modify/${userId}`);\n  };\n\n\n  const supplierDelete = async (userId) => {\n    try {\n      console.log(`Deleting user with ID: ${userId}`);\n      await axios.delete(`http://localhost:8080/api/manager/${userId}`);\n      alert('삭제가 완료되었습니다.');\n    } catch (error) {\n      console.error('삭제 중 오류가 발생했습니다:', error);\n    }\n  };\n\n  return (\n      <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n        <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>userId</TableCell>\n                  <TableCell align=\"right\">이름</TableCell>\n                  <TableCell align=\"right\">전화번호</TableCell>\n                  <TableCell align=\"right\">이메일</TableCell>\n                  <TableCell align=\"right\">주소</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {managers.length > 0 ? managers.map(manager =>\n                    <TableRow key={manager.userId} onClick={() => handleRowClick(manager.userId)}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {manager.userId}\n                      </TableCell>\n                      <TableCell align=\"right\">{manager.mname}</TableCell>\n                      <TableCell align=\"right\">{manager.mtel}</TableCell>\n                      <TableCell align=\"right\">{manager.memail}</TableCell>\n                      <TableCell align=\"right\">{manager.uadr}</TableCell>\n                    </TableRow>\n                ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\n\n        <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth PaperProps={{ style: { height: '80vh' } }}>\n          <DialogTitle>공급업체 </DialogTitle>\n          <DialogContent>\n            {selectedUserId && <ReadComponent userId={selectedUserId} />}\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 100, left: '50%', transform: 'translateX(-50%)' }}>\n              {/* 수정 버튼 */}\n              <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ ml: 1 }}\n                  onClick={() => handleOpen(selectedUserId)}\n              >\n                공급업체 수정\n              </Button>\n              {/* 모달 컴포넌트 */}\n              <Modal open={openModal} onClose={handleModalClose}>\n                <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      height: '20vh', // 부모 요소 높이를 전체 화면 높이로 설정\n                      backgroundColor: '#f0f0f0', // 배경색을 추가하여 더 잘 보이게\n                      marginTop : 300,\n                    }}\n                >\n                  <ModifyPage userId={selectedUserId} onClose={handleClose}/>\n                </div>\n              </Modal>\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => supplierDelete(selectedUserId)}>공급업체\n                삭제</Button>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </div>\n  );\n}\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\nimport {Button} from \"@mui/material\";\nimport AddPage from \"./AddPage\";\n\n\n  const ListPage = () => {\n      const [openModal, setOpenModal] = useState(false);\n\n      const handleOpen = () => {\n          setOpenModal(true);\n      };\n\n      const handleClose = () => {\n          setOpenModal(false);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       공급업체 목록\n     </div>\n     <ListComponent/>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n            새로운 공급업체 등록\n        </Button>\n        <AddPage open={openModal} onClose={handleClose} />\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useCallback, useEffect, useState } from \"react\";\nimport { deleteOne, getOne, putOne } from \"../../api/ManagerApi\";\nimport { TextField, Button, Box } from '@mui/material';\n\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\n\nconst initState = {\n  userId:0,\n\n  mname: '',\n\n\n  memail: '',\n  mtel: '',\n  uadr: '',\n  complete: false\n}\n\nconst ModifyComponent = ({userId, moveList, moveRead}) => {\n\n  const [manager, setManager] = useState({...initState})\n\n\n  //모달 창을 위한 상태\n  const [result, setResult] = useState(null)\n\n  //이동을 위한 기능들\n  const {moveToList, moveToRead} = useCustomMove()\n\n\n  const handleClickModify = () => { //버튼 클릭시\n\n    //console.log(manager)\n\n    putOne(manager).then(data => {\n      console.log(\"modify result: \" + data)\n      setResult('Modified')\n    })\n  }\n\n  const handleClickDelete = () => { //버튼 클릭시\n\n    deleteOne(userId).then( data => {\n      console.log(\"delete result: \" + data)\n      setResult('Deleted')\n    })\n\n  }\n\n  //모달 창이 close될때\n  const closeModal = () => {\n    if(result ==='Deleted') {\n      moveToList()\n    }else {\n      moveToRead(userId)\n    }\n  }\n\n\n\n  useEffect(() => {\n\n    getOne(userId).then(data =>  setManager(data))\n\n  },[userId])\n\n  const handleChangeManager = (e) => {\n\n    manager[e.target.name] = e.target.value\n\n    setManager({...manager})\n  }\n\n  const handleChangeManagerComplete = (e) => {\n\n    const value = e.target.value\n\n    manager.complete = (value === 'Y')\n\n    setManager({...manager})\n  }\n\n  return (\n      <Box sx={{ '& > :not(style)': { m: 1 } }}>\n        {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal>  :<></>}\n\n        <TextField\n                label=\"userId\"\n                variant=\"outlined\"\n                value={manager.userId}\n                disabled\n              />\n\n        <TextField\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  name=\"mname\"\n                  value={manager.mname}\n                  onChange={handleChangeManager}\n                />\n\n\n        <TextField\n                label=\"Email\"\n                variant=\"outlined\"\n                name=\"memail\"\n                value={manager.memail}\n                onChange={handleChangeManager}\n                inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\n                helperText=\"Format: example@example.com\"\n              />\n\n        <TextField\n                label=\"Address\"\n                variant=\"outlined\"\n                name=\"uadr\"\n                value={manager.uadr}\n                onChange={handleChangeManager}\n                inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\n                helperText=\"Format: Street, City, State, Country\"\n              />\n\n        <TextField\n                label=\"Phone Number\"\n                variant=\"outlined\"\n                name=\"mtel\"\n                value={manager.mtel}\n                onChange={handleChangeManager}\n                inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\n                helperText=\"Format: 123-4567-8901\"\n              />\n\n        <TextField\n          label=\"COMPLETE\"\n          variant=\"outlined\"\n          name=\"complete\"\n          value={manager.complete ? 'Y' : 'N'}\n          onChange={handleChangeManagerComplete}\n          select\n          SelectProps={{\n            native: true,\n          }}\n        >\n          <option value='Y'>Completed</option>\n          <option value='N'>Not Yet</option>\n        </TextField>\n\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\n          Delete\n        </Button>\n\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\n          Modify\n        </Button>\n      </Box>\n    );\n  }\n\nexport default ModifyComponent;\n","import { useParams } from \"react-router-dom\";\nimport ModifyComponent from \"./ModifyComponent\";\n\nconst ModifyPage = ({ userId, onClose }) => {\n\n  //const {userId} = useParams()\n\n  return (\n      <div\n          className=\"p-4 w-full max-w-lg bg-white rounded-lg shadow-lg\"\n          style={{\n              textAlign: 'center',\n              padding: '2rem',         // Optional: add padding for inner spacing\n              boxSizing: 'border-box', // Ensure padding doesn’t affect width\n          }}\n      >\n          <div className=\"text-3xl font-extrabold\">\n              Manager Modify Page\n          </div>\n\n          <ModifyComponent userId={userId}/>\n\n      </div>\n  );\n}\n\nexport default ModifyPage;\n","// src/main/frontend/src/components/Manager/ReadComponent.js\nimport { useEffect, useState } from \"react\";\nimport { getOne } from \"../../api/ManagerApi\";\nimport { Grid, Typography, Box, Divider } from '@mui/material';\n\nconst initState = {\n  userId: 0,\n  mName: '',\n  mtel: '',\n  mEmail: '',\n  mProfileImage: '',\n  uAdr: '',\n}\n\nconst ReadComponent = ({ userId }) => {\n  const [manager, setManager] = useState(initState);\n\n  useEffect(() => {\n    if (userId) {\n      getOne(userId)\n        .then(data => setManager(data))\n        .catch(error => console.error('Error fetching data: ', error));\n    }\n  }, [userId]);\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" fontWeight=\"bold\">{manager.mname}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 2 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>ID:</strong> {manager.userId}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Name:</strong> {manager.mname}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Phone:</strong> {manager.mtel}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Email:</strong> {manager.memail}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Address:</strong> {manager.uadr}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default ReadComponent;","import { useCallback } from \"react\";\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\n\nconst ReadPage = () => {\n\n      const {userId} = useParams()\n\n      return (\n       <div className=\"font-extrabold w-full bg-white mt-6\">\n       <div className=\"text-2xl \"> Manager Read Page Component {userId} </div>\n        <ReadComponent userId={userId}></ReadComponent>\n       </div>\n      );\n}\nexport default ReadPage;","import React, { useState } from \"react\";\nimport { postAdd } from \"../../api/ProductApi\";\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport { TextField, Button, Box } from '@mui/material';\n\nconst initState = {\n\n    name : '',\n    item_type : '',\n    size : '',\n    price : '',\n    size : '',\n    amount : '',\n\n\n\n}\n\nconst AddComponent = () => {\n\n    const [product, setProduct] = useState({...initState})\n    const [result, setResult] = useState(null)\n    const {moveToList} = useCustomMove()\n\n    const handleChangeProduct = (e) => {\n        product[e.target.name] = e.target.value\n        setProduct({...product})\n    }\n\n    const handleClickAdd = () => {\n        postAdd(product)\n            .then(result => {\n                \n                \n                setResult(result.id)\n                setProduct({...initState})\n            }).catch(e => { console.error(e) })\n    }\n\n    const closeModal = () => {\n        setResult(null)\n        moveToList()\n    }\n\n    return (\n        <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            {result ? <ResultModal title={'Add Result'} content={`New ${result} Added`} callbackFn={closeModal}/>: <></>}\n            <TextField\n                label=\"Name\"\n                variant=\"outlined\"\n                name=\"name\"\n                value={product.name}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Type\"\n                variant=\"outlined\"\n                name=\"item_type\"\n                value={product.item_type}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Size\"\n                variant=\"outlined\"\n                name=\"size\"\n                value={product.size}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Price\"\n                variant=\"outlined\"\n                name=\"price\"\n                value={product.price}\n                onChange={handleChangeProduct}\n            />\n            />\n            <Button variant=\"contained\" onClick={handleClickAdd}>\n                ADD\n            </Button>\n        </Box>\n    );\n};\n\nexport default AddComponent;\n","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Container, Typography } from '@mui/material';\nimport AddComponent from './AddComponent';\n\nconst AddPage = ({ open, onClose }) => {\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                상품 등록 페이지\n            </Typography>\n            <AddComponent />\n        </Dialog>\n    );\n};\n\nexport default AddPage;\n","import React, { useState } from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport PeopleIcon from '@mui/icons-material/People';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport Inventory from '@mui/icons-material/Inventory'; // Added this line\nimport Store from '@mui/icons-material/Store'; // Added this line\nimport { Link } from 'react-router-dom';\nimport Modal from '@mui/material/Modal';\nimport ListPage from '../Order/ListPage';\nimport Button from '@mui/material/Button';\n\n\nexport const MainListItems = ({ user ,statePage, setStatePage }) => {\n  const [openOrder, setOpenOrder] = React.useState(false);\n  const [openSupplier, setOpenSupplier] = React.useState(false);\n  const [openUser, setOpenUser] = React.useState(false);\n  const [openInventory, setOpenInventory] = React.useState(false);\n  const [openProduct, setOpenProduct] = React.useState(false);\n\n\n  const handleClickOrder = () => {\n      setStatePage(1);\n      setOpenOrder(!openOrder);\n  };\n\n  const handleClickSupplier = () => {\n      setStatePage(2);\n    setOpenSupplier(!openSupplier);\n  };\n\n  const handleClickUser = () => {\n      setStatePage(3);\n      setOpenUser(!openUser);\n  };\n\n  const handleClickInventory = () => {\n      setStatePage(4);\n        setOpenInventory(!openInventory);\n  };\n\n  const handleClickProduct = () => {\n      setStatePage(5);\n        setOpenProduct(!openProduct);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <React.Fragment>\n      <ListItemButton sx={{ justifyContent: 'flex-start', marginLeft: 5 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, marginBottom: 5 }}>\n          <ListItemAvatar>\n            <Avatar\n              alt=\"Admin Name\"\n              src=\"/sample/sample1.jpg\"\n              sx={{ borderRadius: '50%', width: 100, height: 100 }} // 크기를 조절\n            />\n          </ListItemAvatar>\n            <ListItemText primary={user?.cname || \"Unknown\"} />\n        </Box>\n      </ListItemButton>\n      <Divider />\n      <ListItemButton onClick={handleClickOrder}> {/*주문서 관리시 상태 1로 변경*/}\n      <ListItemIcon>\n                <DashboardIcon />\n      </ListItemIcon>\n        <ListItemText primary=\"주문서 관리\" />\n          {/*\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <Box sx={{\n                p: 4,\n                width: '80vw',\n                height: '80vh',\n                overflow: 'auto',\n                backgroundColor: 'white',\n                position: 'absolute', // Add position here\n                top: '50%', // Add top here\n                left: '50%', // Add left here\n                transform: 'translate(-50%, -50%)' // Add transform here\n            }}>\n              <ListPage />\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Button variant=\"contained\" component={Link} to=\"/order/add\">주문서 등록</Button>\n                <Button variant=\"contained\" component={Link} to=\"/order/modify\">주문서 수정</Button>\n                <Button variant=\"contained\">주문서 삭제</Button>\n              </Box>\n            </Box>\n          </Modal>\n          */}\n\n      </ListItemButton>\n\n      <ListItemButton onClick={handleClickSupplier}>\n        <ListItemIcon>\n          <ShoppingCartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"공급업체 관리\" />\n        {openSupplier ? <ExpandLess /> : <ExpandMore />}\n      </ListItemButton>\n      <Collapse in={openSupplier} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 등록\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 조회\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 수정\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 삭제\" />\n          </ListItemButton>\n        </List>\n      </Collapse>\n\n      <ListItemButton onClick={handleClickUser}>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"사용자 관리\" />\n              {openUser ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openUser} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/manager/list\">\n                  <ListItemText primary=\"사용자 목록\" />\n                </ListItemButton>\n\n\n              </List>\n            </Collapse>\n\n      <ListItemButton onClick={handleClickInventory}>\n              <ListItemIcon>\n                <Inventory />\n              </ListItemIcon>\n              <ListItemText primary=\"재고 관리\" />\n              {openInventory ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openInventory} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"재고 확인 및 수정\" />\n                </ListItemButton>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"반품 품목 확인\" />\n                </ListItemButton>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"납품 품목 확인\" />\n                </ListItemButton>\n\n              </List>\n            </Collapse>\n\n      <ListItemButton onClick={handleClickProduct}>\n                    <ListItemIcon>\n                      <Store />\n                    </ListItemIcon>\n                    <ListItemText primary=\"상품 관리\" />\n                    {openProduct ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                  <Collapse in={openProduct} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 등록\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 조회\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 수정\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 삭제\" />\n                      </ListItemButton>\n                    </List>\n                  </Collapse>\n    </React.Fragment>\n  );\n};","import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/api/user`\n export const getOne = async (userId) => {\n  const res = await axios.get(`${prefix}/${userId}`)\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (userObj) => {\n const res = await axios.post(`${prefix}/` , userObj)\n return res.data\n }\n\nexport const deleteOne = async (userId) => {\n\n  const res = await axios.delete(`${prefix}/${userId}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (user) => {\n\n  const res = await axios.put(`${prefix}/${user.userId}`, user)\n\n  return res.data\n}\n\n\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/UserApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\nimport PageComponent from \"../common/PageComponent\";\nimport axios from \"axios\";\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = () => {\n  const [selecteduserId, setSelecteduserId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [user, setUser] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getList({ page, size }).then(data => {\n      setServerData(data);\n      setUser(data.dtoList);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setUser([]);\n    });\n  }, [page, size, refresh]);\n\n\n  return (\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>userId</TableCell>\n                <TableCell align=\"right\">이름</TableCell>\n                <TableCell align=\"right\">성별</TableCell>\n                <TableCell align=\"right\">id</TableCell>\n                <TableCell align=\"right\">전화번호</TableCell>\n                <TableCell align=\"right\">이메일</TableCell>\n                <TableCell align=\"right\">주소</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {user.length > 0 ? user.map(user =>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {user.userId}\n                  </TableCell>\n                  <TableCell align=\"right\">{user.cname}</TableCell>\n                  <TableCell align=\"right\">{user.cgender}</TableCell>\n                    <TableCell align=\"right\">{user.cid}</TableCell>\n\n                  <TableCell align=\"right\">{user.ctel}</TableCell>\n                  <TableCell align=\"right\">{user.cemail}</TableCell>\n                  <TableCell align=\"right\">{user.cadr}</TableCell>\n                </TableRow>\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <PageComponent serverData={serverData} movePage={moveToList} setUser={setUser}></PageComponent>\n\n\n    </div>\n  );\n}\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\nimport {Button} from \"@mui/material\";\n\n\n  const ListPage = () => {\n      const [openModal, setOpenModal] = useState(false);\n\n      const handleOpen = () => {\n          setOpenModal(true);\n      };\n\n      const handleClose = () => {\n          setOpenModal(false);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n\n     </div>\n     <ListComponent/>\n\n\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/ProductApi\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport * as ProductApi from '../../api/ProductApi.js';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport axios from 'axios';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n\nconst initState = {\n    id: '',\n        name: '',\n        itemType: '',\n        price: '',\n        size: '',\n        amount:''\n\n}\n\nconst ReadComponent = ({ id }) => {\n  const [product, setProduct] = useState(initState);\n\n  useEffect(() => {\n    if (id) {\n      getOne(id)\n        .then(data => setProduct(data))\n        .catch(error => console.error('Error fetching data: ', error));\n    }\n  }, [id]);\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" fontWeight=\"bold\">{product.id}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 2 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Name:</strong> {product.name}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>ItemType:</strong> {product.itemType}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Price:</strong> {product.price}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Size:</strong> {product.size}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Amount:</strong> {product.amount}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default ReadComponent;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { deleteOne, getOne, putOne } from \"../../api/ProductApi\";\nimport { TextField, Button, Box } from '@mui/material';\n\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\n\nconst initState = {\n    id: 0,\n    name: '',\n    itemType: '',\n    price: '',\n    size: '',\n    amount:'',\n    complete: false\n}\n\nconst ModifyComponent = ({ id, moveList }) => {\n\n    const [product, setProduct] = useState({ ...initState })\n\n    // 모달 창을 위한 상태\n    const [result, setResult] = useState(null)\n\n    // 이동을 위한 기능들\n    const { moveToList, ProductmoveToRead } = useCustomMove()\n\n    const handleClickModify = () => { // 버튼 클릭 시\n        putOne(product).then(data => {\n            console.log(\"modify result: \" + data)\n            setResult('Modified')\n        })\n    }\n\n    const handleClickDelete = () => { // 버튼 클릭 시\n        deleteOne(id).then(data => {\n            console.log(\"delete result: \" + data)\n            setResult('Deleted')\n        })\n    }\n\n    // 모달 창이 close될 때\n    const closeModal = () => {\n        if (result === 'Deleted') {\n            moveToList()\n        } else {\n            ProductmoveToRead(id)\n        }\n    }\n\n    useEffect(() => {\n        getOne(id).then(data => setProduct(data))\n    }, [id])\n\n    const handleChangeProduct = (e) => {\n        product[e.target.name] = e.target.value\n        setProduct({ ...product })\n    }\n\n    const handleChangeProductComplete = (e) => {\n        const value = e.target.value\n        product.complete = (value === 'Y')\n        setProduct({ ...product })\n    }\n\n    return (\n        <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal> : <></>}\n\n            <TextField\n                label=\"Name\"\n                variant=\"outlined\"\n                name=\"name\"\n                value={product.name}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Type\"\n                variant=\"outlined\"\n                name=\"itemType\"\n                value={product.itemType}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                            label=\"Price\"\n                            variant=\"outlined\"\n                            name=\"price\"\n                            value={product.totalPrice}\n                            onChange={handleChangeProduct}\n            />\n\n            <TextField\n                   label=\"Size\"\n                   variant=\"outlined\"\n                   name=\"size\"\n                   value={product.size}\n                   onChange={handleChangeProduct}\n            />\n\n            <TextField\n                label=\"Amount\"\n                variant=\"outlined\"\n                name=\"amount\"\n                value={product.amount}\n                onChange={handleChangeProduct}\n            />\n\n            <TextField\n                label=\"COMPLETE\"\n                variant=\"outlined\"\n                name=\"complete\"\n                value={product.complete ? 'Y' : 'N'}\n                onChange={handleChangeProductComplete}\n                select\n                SelectProps={{\n                    native: true,\n                }}\n            >\n                <option value='Y'>Completed</option>\n                <option value='N'>Not Yet</option>\n            </TextField>\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\n                Delete\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\n                Modify\n            </Button>\n        </Box>\n    );\n}\n\nexport default ModifyComponent;","import { useParams } from \"react-router-dom\";\nimport ModifyComponent from \"./ModifyComponent\";\n\nconst ModifyPage = () => {\n\n    const {id} = useParams()\n\n    return (\n        <div className=\"p-4 w-full bg-white\">\n            <div className=\"text-3xl font-extrabold\">\n                Product Modify Page\n            </div>\n\n            <ModifyComponent id={id}/>\n\n        </div>\n    );\n}\n\nexport default ModifyPage;\n","\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/ProductApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\nimport PageComponent from \"../common/PageComponent\";\nimport axios from \"axios\";\nimport ModifyPage from './ModifyPage';\nimport Modal from \"@mui/material/Modal\";\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = () => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    getList({ page, size }).then(data => {\n      setServerData(data);\n      setProducts(data.dtoList);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setProducts([]);\n    });\n  }, [page, size, refresh]);\n\n  const handleRowClick = (id) => {\n    setSelectedId(id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedId(null);\n  };\n\n  const handleOpen = (id) => {\n    setSelectedId(id);\n    setOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleModifyPage = (id) => {\n    navigate(`/product/modify/${id}`);\n  };\n\nif (!products || products.length === 0) {\n    return <div>No data available</div>;\n  }\n\n\n  const productDelete = async (id) => {\n    try {\n      console.log(`Deleting user with ID: ${id}`);\n      await axios.delete(`http://localhost:8080/products/${id}`);\n      alert('삭제가 완료되었습니다.');\n    } catch (error) {\n      console.error('삭제 중 오류가 발생했습니다:', error);\n    }\n  };\n\n  return (\n      <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n        <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>userId</TableCell>\n                  <TableCell align=\"right\">이름</TableCell>\n                  <TableCell align=\"right\">상품종류</TableCell>\n                  <TableCell align=\"right\">사이즈</TableCell>\n                  <TableCell align=\"right\">가격</TableCell>\n                  <TableCell align=\"right\">수량</TableCell>\n\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {products.length > 0 ? products.map(product =>\n                    <TableRow key={product.id} onClick={() => handleRowClick(product.id)}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {product.id}\n                      </TableCell>\n                      <TableCell align=\"right\">{product.name}</TableCell>\n                      <TableCell align=\"right\">{product.itemType}</TableCell>\n                      <TableCell align=\"right\">{product.size}</TableCell>\n                      <TableCell align=\"right\">{product.price}</TableCell>\n                      <TableCell align=\"right\">{product.amount}</TableCell>\n                    </TableRow>\n                ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <PageComponent serverData={serverData} movePage={moveToList} setProducts={setProducts}></PageComponent>\n\n        <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth PaperProps={{ style: { height: '80vh' } }}>\n          <DialogTitle>상품 </DialogTitle>\n          <DialogContent>\n            {selectedId && <ReadComponent id={selectedId} />}\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 100, left: '50%', transform: 'translateX(-50%)' }}>\n              {/* 수정 버튼 */}\n              <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ ml: 1 }}\n                  onClick={() => handleOpen(selectedId)}\n              >\n                상품 수정\n              </Button>\n              {/* 모달 컴포넌트 */}\n              <Modal open={openModal} onClose={handleModalClose}>\n                <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      height: '20vh', // 부모 요소 높이를 전체 화면 높이로 설정\n                      backgroundColor: '#f0f0f0', // 배경색을 추가하여 더 잘 보이게\n                      marginTop : 300,\n                    }}\n                >\n                  <ModifyPage id={selectedId} onClose={handleClose}/>\n                </div>\n              </Modal>\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => productDelete(selectedId)}>상품\n                삭제</Button>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </div>\n  );\n}\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\nimport {Button} from \"@mui/material\";\nimport AddPage from \"./AddPage\";\n\n\n  const ListPage = () => {\n      const [openModal, setOpenModal] = useState(false);\n\n      const handleOpen = () => {\n          setOpenModal(true);\n      };\n\n      const handleClose = () => {\n          setOpenModal(false);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       상품\n     </div>\n     <ListComponent/>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n            새로운 상품 등록\n        </Button>\n        <AddPage open={openModal} onClose={handleClose} />\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import * as React from \"react\";\nimport Title from \"./Title\";\nimport Link from \"@mui/material/Link\";\nimport {\n    Text,\n    Typography,\n    Paper,\n    Box,\n    Modal,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Card, Stack, Divider, Chip\n} from '@mui/material';\n\nexport default function Explain() {\n    return (\n        <div>\n            <Typography>관리자 메뉴 내비게이션</Typography>\n            <hr style={{marginLeft: 0}}/>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            주문서 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        모든 주문서 조회 및 특정 상태의 주문서 조회 / 주문서 수정 / 주문서 삭제 / 주문서 주문\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            공급업체 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 등록 : 새로운 공급업체 정보 입력 및 등록\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 조회 : 모든 공급업체 정보 조회\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 수정 : 선택한 공급업체 정보 수정\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 삭제 : 선택한 공급업체 정보 삭제\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            사용자 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        사용자 목록 : 현재 쇼핑몰의 관리자 정보 조회\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            재고 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        재고 확인 및 수정 : 현재 쇼핑몰의 상품 재고 리스트 조회 및 수정\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        반품 품목 확인 : 반품 처리된 상품들의 리스트 조회\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        납품 품목 확인 : 납품 처리된 상품들의 리스트 조회\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            상품 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 등록 : 새로운 상품 정보 입력 및 등록\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 조회 : 모든 상품 정보 조회\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 수정 : 선택한 상품 정보 수정\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 삭제 : 선택한 상품 정보 삭제\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                        <Typography sx={{ ml : 10}}>주문서는 수요일 밤 12:00 에 갱신</Typography>\n                        <Typography sx={{ ml : 10}}>수요예측시 현재 상품의 재고를 입력값으로 사용</Typography>\n\n                    </Box>\n            </Card>\n        </div>\n    );\n}","\r\nimport React, { useState , useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { MainListItems } from './listItems';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport ListComponent from '../Manager/ListComponent';\r\n//import ListComponent from '../Order/ListComponent';\r\nimport ReadComponent from '../Manager/ReadComponent';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n\r\nimport Deposits from './Deposits';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ManagerRead from '../Manager/ReadPage';\r\nimport ManagerList from '../Manager/ListPage';\r\nimport AddPage from '../Manager/AddPage'; // AddPage 컴포넌트를 import 합니다.\r\nimport SupplierListPage from '../Manager/ListPage';\r\nimport UserListPage from '../User/ListPage';\r\nimport OrderListPage from '../Order/ListPage';\r\nimport ProductListPage from '../Product/ListPage';\r\nimport Explain from './Explain';\r\nimport axios from \"axios\"; // ListPage 컴포넌트를 import 합니다.\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://mui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n      '& .MuiDrawer-paper': {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        boxSizing: 'border-box',\r\n        ...(!open && {\r\n          overflowX: 'hidden',\r\n          transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n          width: theme.spacing(7),\r\n          [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n          },\r\n        }),\r\n      },\r\n      '& .MuiDrawer-paper > .admin-profile': { // 추가된 스타일\r\n        display: open ? 'block' : 'none',\r\n      },\r\n      '& .MuiDrawer-paper > *': {\r\n        overflowX: 'visible',\r\n      },\r\n    }),\r\n);\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Dashboard() {\r\n    // 현재 페이지를 나타내주는 변수 0 : 기본 / 1 : 주문서 관리 / 2:\r\n    const [statePage, setStatePage] = useState(1);\r\n\r\n\r\n\r\n    const [user, setUser] = useState(null);\r\n  const [open, setOpen] = React.useState(true);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const { moveToRead } = useCustomMove(); // useCustomMove 훅에서 moveToRead 함수를 가져옵니다.\r\n  const handleRowClick = (userId) => {\r\n    moveToRead(userId); // moveToRead 함수를 호출합니다.\r\n    console.log(selectedUserId);\r\n  };\r\n  const { userId } = useParams();\r\n\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n    {/*현재 로그인한 관리자 정보*/}\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/user/current-user', {\r\n                    withCredentials: true // 세션 쿠키 전달을 위한 설정\r\n                });\r\n                console.log(response.data); // 확인용 로그\r\n                setUser(response.data);\r\n            } catch (error) {\r\n                console.error(\"사용자 정보 가져오기 오류:\", error);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n  {/* 알림 설정 */}\r\n  const [alarmOpen, setAlarmOpen] = useState(false);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS('http://localhost:8080/ws');\r\n    const stompClient = Stomp.over(socket);\r\n\r\n    stompClient.connect({}, function (frame) {\r\n      console.log('Connected: ' + frame);\r\n\r\n      stompClient.subscribe('/topic/notifications', function (message) {\r\n        console.log('Received message:', message.body);\r\n        setNotificationCount(prevCount => prevCount + 1);\r\n        setMessages(prevMessages => [...prevMessages, message.body]); // 메시지 저장\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      if (stompClient) {\r\n        stompClient.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleAlarmOpen = () => {\r\n    setAlarmOpen(true);\r\n  };\r\n\r\n  const handleAlarmClose = () => {\r\n    setAlarmOpen(false);\r\n    setNotificationCount(0); // 알림 확인 시 카운트 초기화\r\n    setMessages([]); // 메시지 초기화 (원하는 경우)\r\n  };\r\n\r\n\r\n  {/**/}\r\n  return (\r\n      <>\r\n\r\n\r\n        <ThemeProvider theme={defaultTheme}>\r\n          <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" open={open}>\r\n              <Toolbar\r\n                  sx={{\r\n                    pr: '24px', // keep right padding when drawer closed\r\n                  }}\r\n              >\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={toggleDrawer}\r\n                    sx={{\r\n                      marginRight: '36px',\r\n                      ...(open && { display: 'none' }),\r\n                    }}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                  <Typography\r\n                      component=\"h1\"\r\n                      variant=\"h6\"\r\n                      color=\"inherit\"\r\n                      noWrap\r\n                      sx={{ flexGrow: 1, cursor: 'pointer' }} // 클릭 커서 스타일 추가\r\n                      onClick={() => setStatePage(0)} // 클릭 이벤트 핸들러 추가\r\n                  >\r\n                      Dashboard\r\n                  </Typography>\r\n                {/*주문서 생성 알림*/}\r\n                <IconButton color=\"inherit\" onClick={handleAlarmOpen}>\r\n                  <Badge badgeContent={notificationCount} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <Dialog\r\n                    open={alarmOpen}\r\n                    onClose={handleAlarmClose}\r\n                    PaperProps={{\r\n                      style: {\r\n                        position: 'absolute',\r\n                        top: '20px', // 버튼 바로 아래 위치 조정\r\n                        right: '1px', // 오른쪽 위치 조정\r\n                        transform: 'translateX(0)', // 기본 위치\r\n                      },\r\n                    }}\r\n                    BackdropProps={{ invisible: true }} // 배경 어두운 효과 끄기\r\n                >\r\n                  <DialogTitle>알림</DialogTitle>\r\n                  <DialogContent>\r\n                    {messages.length === 0 ? (\r\n                        <Typography>현재 알림이 없습니다.</Typography>\r\n                    ) : (\r\n                        messages.map((msg, index) => (\r\n                            <Typography key={index}>{msg}</Typography>\r\n                        ))\r\n                    )}\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleAlarmClose}>닫기</Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n                {/**/}\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n              <Toolbar\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    px: [1],\r\n                  }}\r\n              >\r\n              </Toolbar>\r\n              <Divider />\r\n              <List component=\"nav\">\r\n                  {/*관리자 메뉴*/}\r\n                  <MainListItems user={user} statePage={statePage} setStatePage={setStatePage} />\r\n                <Divider sx={{ my: 1 }} />\r\n              </List>\r\n            </Drawer>\r\n            <Box\r\n                component=\"main\"\r\n                sx={{\r\n                  backgroundColor: (theme) =>\r\n                      theme.palette.mode === 'light'\r\n                          ? theme.palette.grey[100]\r\n                          : theme.palette.grey[900],\r\n                  flexGrow: 1,\r\n                  height: '100vh',\r\n                  overflow: 'auto',\r\n                }}\r\n            >\r\n              <Toolbar />\r\n              <Container maxWidth=\"lg\" sx={{ ml:4, mt: 4, mb: 4 }}>\r\n                      {/*서브메뉴 클릭시 변경되는 페이지*/}\r\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column',height : 'flex' , width: 1550 }}>\r\n                        {/*statePage가 변경될때마다 구성내용 변경*/}\r\n                        {statePage === 1 ? (\r\n                            <OrderListPage/> // statePage가 1일 때\r\n                        ) : statePage === 2 ? (\r\n                            <SupplierListPage/> // statePage가 2일 때\r\n                        )  : statePage === 3 ? (\r\n                            <UserListPage/> // statePage가 3일 때\r\n                        ) : statePage === 5 ? (\r\n                           <ProductListPage/> // statePage가 4일 때\r\n                        ) : ( // statePage가 0일 때\r\n                            <Explain/>\r\n                  )}\r\n\r\n              </Paper>\r\n                {/*\r\n                      <Routes>\r\n                        <Route path=\"/add\" element={<AddPage />} />\r\n                        <Route path=\"/list\" element={<OrderListPage />} />\r\n                        <Route path=\"*\" element={<Outlet />} />\r\n                      </Routes>\r\n                      */}\r\n                <Copyright sx={{ pt: 4 }} />\r\n              </Container>\r\n            </Box>\r\n          </Box>\r\n        </ThemeProvider>\r\n      </>\r\n  );\r\n}"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","id","productObj","product","initState","mname","mtel","memail","uadr","AddComponent","setManager","useState","result","setResult","moveToList","moveToDashboard","useCustomMove","handleChangeManager","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","onChange","inputProps","pattern","helperText","Button","onClick","handleClickAdd","then","catch","console","error","_ref","open","onClose","Dialog","Typography","component","gutterBottom","dtoList","pageNumList","pageRequestDTO","prev","next","totoalCount","prevPage","nextPage","totalPage","current","ListComponent","selectedUserId","setSelectedUserId","setOpen","moveToRead","refresh","serverData","setServerData","managers","setManagers","openModal","setOpenModal","useNavigate","useEffect","handleClose","className","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","map","handleRowClick","scope","colSpan","PageComponent","movePage","maxWidth","fullWidth","PaperProps","style","height","DialogTitle","DialogContent","ReadComponent","mt","display","justifyContent","position","bottom","left","transform","color","ml","Modal","handleModalClose","alignItems","backgroundColor","marginTop","ModifyPage","log","alert","supplierDelete","ListPage","queryParams","useSearchParams","handleOpen","AddPage","complete","moveList","moveRead","disabled","select","SelectProps","native","handleClickDelete","handleClickModify","textAlign","padding","boxSizing","ModifyComponent","mName","mEmail","mProfileImage","uAdr","p","Grid","container","spacing","item","xs","fontWeight","Divider","width","my","fontSize","ReadPage","useParams","item_type","price","amount","setProduct","handleChangeProduct","MainListItems","user","statePage","setStatePage","openOrder","setOpenOrder","React","openSupplier","setOpenSupplier","openUser","setOpenUser","openInventory","setOpenInventory","openProduct","setOpenProduct","ListItemButton","marginLeft","flexDirection","gap","marginBottom","ListItemAvatar","Avatar","alt","src","borderRadius","ListItemText","primary","cname","handleClickOrder","ListItemIcon","DashboardIcon","handleClickSupplier","ShoppingCartIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","pl","handleClickUser","PeopleIcon","Link","to","handleClickInventory","Inventory","handleClickProduct","Store","selecteduserId","setSelecteduserId","setUser","cgender","cid","ctel","cemail","cadr","itemType","ProductmoveToRead","totalPrice","selectedId","setSelectedId","products","setProducts","productDelete","Explain","Card","Stack","direction","Copyright","props","href","Date","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","_ref2","whiteSpace","overflowX","breakpoints","up","defaultTheme","createTheme","Dashboard","response","withCredentials","fetchUser","alarmOpen","setAlarmOpen","notificationCount","setNotificationCount","messages","setMessages","socket","SockJS","stompClient","Stomp","over","connect","frame","subscribe","message","body","prevCount","prevMessages","disconnect","handleAlarmClose","ThemeProvider","CssBaseline","Toolbar","pr","IconButton","edge","toggleDrawer","marginRight","MenuIcon","noWrap","flexGrow","cursor","handleAlarmOpen","Badge","badgeContent","NotificationsIcon","top","right","BackdropProps","invisible","msg","index","DialogActions","px","palette","mode","grey","overflow","Container","mb","OrderListPage","SupplierListPage","UserListPage","ProductListPage","pt"],"sourceRoot":""}