{"version":3,"file":"static/js/707.641ab558.chunk.js","mappings":"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","sources":["api/OrderApi.js","components/Order/ReadComponent.js","components/Order/ReadPage.js","hooks/useCustomMove.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import axios from \"axios\"\n\n\nexport const API_SERVER_HOST = 'http://localhost:8080'\nconst prefix = `${API_SERVER_HOST}/api/orders`\n\nexport const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const getList = async (pageParam) => {\n  const {page, size} = pageParam\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\n  return res.data\n}\n\nexport const postAdd = async (orderObj) => {\n  const res = await axios.post(`${prefix}/`, orderObj)\n  return res.data\n}\n\nexport const deleteOne = async (id) => {\n  const res = await axios.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const putOne = async (order) => {\n  const res = await axios.put(`${prefix}/${order.id}`, {\n    id: order.id,\n    orderedProducts: order.orderedProducts,\n    totalPrice: order.totalPrice,\n    orderType: order.orderType,\n    pageRequestDTO: order.pageRequestDTO,\n    total: order.total\n  })\n  return res.data\n}","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/OrderApi\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\nimport * as OrderApi from '../../api/OrderApi.js';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport axios from 'axios';\n\nconst initState = {\n    id: 0,\n    orderedProducts: '',\n    totalPrice: '',\n    orderType: '',\n    totalAmount:'',\n    manager: '',\n}\n\nfunction ReadComponent({ id  }) {\n\n    const [order, setOrder] = useState(initState);\n    const [supplier, setSupplier] = useState(initState);\n    const [openModal, setOpenModal] = useState(false);\n    const {moveToList, moveToModify} = useCustomMove();\n\n\n    const handleOpenModal = () => {\n        setOpenModal(true);\n      };\n\n      const handleCloseModal = () => {\n        setOpenModal(false);\n      };\n\n    useEffect(() => {\n        // API에서 주문서 정보를 가져오는 함수\n        const fetchOrderDetails = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\n                const supplierResponse = await axios.get(`http://localhost:8080/api/manager/${response.data.manager}`);\n                setSupplier(supplierResponse.data); // 공급업체 데이터를 상태로 저장\n\n            } catch (error) {\n                console.error('Error fetching the order details:', error);\n            }\n        };\n\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\n    }, [id]);\n\n\n    let totalPrice = 0;\n    // Check if order exists and orderedProducts is an array\n    if (!order || !Array.isArray(order.orderedProducts)) {\n        return <div>Loading...</div>; // Handle loading or error state\n    }\n\n    return(\n        <>\n            <div>\n                <h1>납품 요청 내역</h1>\n                <p>주문번호 : <b>{order.id}</b></p>\n                <p>주문일자 : <b>{new Date().toLocaleString()}</b></p> {/* Display current date and time */}\n                <h3>주문정보</h3>\n                <hr style={{border: '1px solid black', width: '450px', marginLeft: 0}}/>\n                <p>수신인 : {supplier.mname}</p>\n                <p>연락처 : {supplier.mtel}</p>\n                <h3>주문상품</h3>\n\n                {order.orderedProducts.map((product) => {\n                    let imageBase64 = '';\n                    if (product.itemImage) {\n                        imageBase64 = btoa(String.fromCharCode(...new Uint8Array(product.itemImage))); // Assuming itemImage is a byte array\n                    }\n\n                    // Update total price\n                    totalPrice += product.price * product.amount;\n\n                    return (\n                        <div key={product.id}>\n                            <hr style={{border: '0.1px groove gray', width: '450px', marginLeft: 0}}/>\n                            <div style={{display: 'flex', alignItems: 'center', marginBottom: '10px'}}>\n                                <img src={`data:image/png;base64,${imageBase64}`} alt=\"상품 이미지\"\n                                     style={{width: '100px', height: 'auto', marginRight: '10px'}}/>\n                                <div style={{marginLeft: '10px'}}>\n                                    <p style={{margin: 0}}>상품명 : {product.name}</p>\n                                    <p style={{margin: 0}}>상품유형 : {product.itemType}</p>\n                                    <p style={{margin: 0}}>사이즈 : {product.size}</p>\n                                    <p style={{margin: 0}}>주문수량 : {product.amount}</p>\n                                    <p style={{margin: 0}}>주문금액 : {product.price} 원</p>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n\n                <hr style={{border: '1px solid black', width: '450px', marginLeft: 0}}/>\n                <h2>총 주문금액 : {totalPrice} 원</h2>\n            </div>\n        </>\n\n    );\n}\n\nexport default ReadComponent;","import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\nimport { Typography, Paper, Box, Modal, Button , Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport axios from 'axios';\n\n\nconst initState = {\n    id: 0,\n    orderedProducts: '',\n    totalPrice: '',\n    orderType: '',\n    totalAmount:'',\n    manager: '',\n}\n\nconst ReadPage = ({ id }) => {\n  //const { id } = useParams(); // URL 파라미터에서 주문서의 ID를 가져옵니다.\n  const [open, setOpen] = useState(false); // 모달창의 상태를 관리하는 상태를 생성합니다.\n    const [order, setOrder] = useState(initState);\n    const handleOpen = () => setOpen(true); // 모달창을 열기 위한 함수를 생성합니다.\n    const handleClose = () => setOpen(false); // 모달창을 닫기 위한 함수를 생성합니다.\n\n    const handleDelete = () => {\n        orderDelete(id); // 삭제 함수 호출\n        handleClose(); // 모달 닫기\n    };\n    const orderAssign = async (id) => {\n        try {\n          await axios.get(`http://localhost:8080/api/orders/order/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\n          alert('주문이 완료되었습니다.');\n        } catch (error) {\n          console.error('주문 중 오류가 발생했습니다:', error);\n        }\n      };\n\n    const orderComplete = async (id) => {\n        try {\n            await axios.get(`http://localhost:8080/api/orders/complete/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\n            alert('납품이 완료되었습니다.');\n        } catch (error) {\n            console.error('납품 중 오류가 발생했습니다:', error);\n        }\n    };\n\n\n    useEffect(() => {\n        // API에서 주문서 정보를 가져오는 함수\n        const fetchOrderDetails = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\n            } catch (error) {\n                console.error('Error fetching the order details:', error);\n            }\n        };\n\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\n    }, [id]);\n\n    const orderDelete = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/api/orders/${id}`);\n            alert('삭제가 완료되었습니다.');\n        } catch (error) {\n            console.error('삭제 중 오류가 발생했습니다:', error);\n        }\n    };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\n        Order Receipt\n      </Typography>\n      <Paper elevation={3} sx={{ p: 2, width: '500px', mt: 2 }}>\n        <ReadComponent id={id} /> {/* 주문서의 ID를 ReadComponent 컴포넌트에 prop으로 전달합니다. */}\n      </Paper>\n        {order.orderType === 'BEFORE_ORDER' && (\n          <Box mt={2}> {/* 주문하기 버튼에 상단 마진을 추가합니다. */}\n                  <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                      variant=\"contained\" color=\"primary\" onClick={() => orderAssign(id)}>\n                        주문하기\n                  </Button>\n                  <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2, ml : 3 , mr : 3}}\n                          variant=\"contained\" color=\"primary\" component={Link}\n                          to=\"/order/modify\">\n                      주문 수정\n                  </Button>\n              <Button\n                  sx={{\n                      bgcolor: 'gray',\n                      color: 'white',\n                      '&:hover': { bgcolor: 'gray' },\n                      mb: 4,\n                      mt: 2,\n                      ml: 3,\n                      mr: 3\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleOpen} // 모달 열기\n              >\n                  주문 삭제\n              </Button>\n\n              {/* 삭제 확인 모달 */}\n              <Dialog open={open} onClose={handleClose}>\n                  <DialogTitle>주문 삭제</DialogTitle>\n                  <DialogContent>\n                      <DialogContentText>\n                          정말 삭제하시겠습니까?\n                      </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                      <Button onClick={handleDelete} color=\"primary\" autoFocus>\n                          예\n                      </Button>\n                      <Button onClick={handleClose} color=\"primary\">\n                          아니오\n                      </Button>\n                  </DialogActions>\n              </Dialog>\n                  </Box>\n            )}\n        {order.orderType === 'PROGRESS_ORDER' && (\n            <Box mt={2}>\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                        variant=\"contained\" color=\"primary\" onClick={() => orderComplete(id)}>\n                    납품 처리\n                </Button>\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                        variant=\"contained\" color=\"primary\">\n                    반품 처리\n                </Button>\n            </Box>\n        )}\n        {order.orderType === 'RETURNING' && (\n            <Box mt={2}>\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                        variant=\"contained\" color=\"primary\" onClick={() => orderComplete(id)}>\n                    납품 처리\n                </Button>\n            </Box>\n        )}\n    </Box>\n  );\n}\n\nexport default ReadPage;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n       navigate({pathname: '/list', search: queryStr});\n      }\n\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n     const moveToDashboard = () => {\n         navigate('/dashboard');\n       };\n\n\n     return {moveToList, moveToModify, moveToDashboard, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n      className,\n      disableSpacing = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["prefix","concat","getOne","async","axios","get","id","data","getList","page","size","pageParam","params","postAdd","post","orderObj","deleteOne","delete","putOne","put","order","orderedProducts","totalPrice","orderType","pageRequestDTO","total","initState","totalAmount","manager","_ref","setOrder","useState","supplier","setSupplier","openModal","setOpenModal","moveToList","moveToModify","useCustomMove","useEffect","response","supplierResponse","error","console","fetchOrderDetails","Array","isArray","_jsx","_Fragment","children","_jsxs","Date","toLocaleString","style","border","width","marginLeft","mname","mtel","map","product","imageBase64","itemImage","btoa","String","fromCharCode","Uint8Array","price","amount","display","alignItems","marginBottom","src","alt","height","marginRight","margin","name","itemType","open","setOpen","handleClose","orderComplete","alert","orderDelete","Box","sx","flexDirection","mt","Typography","variant","component","gutterBottom","Paper","elevation","p","ReadComponent","Button","bgcolor","color","mb","ml","mr","onClick","orderAssign","Link","to","handleOpen","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","handleDelete","autoFocus","getNum","param","defaultValue","parseInt","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","queryDefault","createSearchParams","toString","log","queryStr","pageNum","sizeNum","pathname","search","useCallback","num","moveToDashboard","moveToRead","userId","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","padding","justifyContent","flex","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","composedClasses"],"sourceRoot":""}