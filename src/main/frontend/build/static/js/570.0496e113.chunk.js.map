{"version":3,"file":"static/js/570.0496e113.chunk.js","mappings":"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","sources":["api/ManagerApi.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ReadComponent.js","components/common/PageComponent.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/api/manager`\n export const getOne = async (userId) => {\n  const res = await axios.get(`${prefix}/${userId}` )\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (managerObj) => {\n const res = await axios.post(`${prefix}/` , managerObj)\n return res.data\n }\n\nexport const deleteOne = async (userId) => {\n\n  const res = await axios.delete(`${prefix}/${userId}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (manager) => {\n\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\n\n  return res.data\n}\n\n\n","import { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\nimport { getList, getOne } from \"../../api/ManagerApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { useNavigate } from 'react-router-dom';\nimport PageComponent from \"../common/PageComponent\";\n\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = ({ onRowClick }) => {\n  console.log(onRowClick);\n  const [selectedUserId, setSelectedUserId] = useState(null); // setSelectedUserId 함수 정의\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove()\n  const [serverData, setServerData] = useState(initState)\n  const [managers, setManagers] = useState([]); // managers state\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getList({page,size}).then(data => {\n      console.log(data)\n      setServerData(data)\n      setManagers(data.dtoList) // setManagers function\n      console.log(data.dtoList)\n    })\n    .catch(error => {\n      console.error('Error fetching data: ', error);\n      setManagers([]); // API 호출 실패 시 managers를 빈 배열로 설정\n    });\n  }, [page,size, refresh]);\n  return (\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>userId</TableCell>\n                <TableCell align=\"right\">이름</TableCell>\n                <TableCell align=\"right\">성별</TableCell>\n                <TableCell align=\"right\">ID</TableCell>\n                <TableCell align=\"right\">PW</TableCell>\n                <TableCell align=\"right\">생년월일</TableCell>\n                <TableCell align=\"right\">전화번호</TableCell>\n                <TableCell align=\"right\">이메일</TableCell>\n                <TableCell align=\"right\">주소</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {managers.length > 0 ? managers.map(manager =>\n                <TableRow key={manager.userId} onClick={() => {\n                      console.log(`Row clicked with userId: ${manager.userId}`); // 로깅하여 확인\n                      onRowClick(manager.userId);\n                      }}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {manager.userId}\n                  </TableCell>\n                  <TableCell align=\"right\">{manager.mname}</TableCell>\n                  <TableCell align=\"right\">{manager.mgender}</TableCell>\n                  <TableCell align=\"right\">{manager.mid}</TableCell>\n                  <TableCell align=\"right\">{manager.mpw}</TableCell>\n                  <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\n                  <TableCell align=\"right\">{manager.mtel}</TableCell>\n                  <TableCell align=\"right\">{manager.memail}</TableCell>\n                  <TableCell align=\"right\">{manager.uadr}</TableCell>\n                </TableRow>\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\n    </div>\n  );\n}\n\nexport default ListComponent;","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\n\n\n\n  const ListPage = () => {\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       Manager List Page Component\n     </div>\n     <ListComponent/>\n\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState,} from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/ManagerApi\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\n\nconst initState = {\n    userId: 0,\n    mID: '',\n    mPW: '',\n    mName: '',\n    mGender: '',\n    mbirthDate: '',\n    mtel: '',\n    mEmail: '',\n    mProfileImage: '',\n    uAdr: '',\n}\n\nfunction ReadComponent({ userId }) {\n\n\n    const [manager, setManager] = useState(initState);\n\n    const {moveToList, moveToModify} = useCustomMove();\n\n    useEffect(() => {\n      getOne(userId)\n        .then(data => {\n          console.log(data); // API로부터 받아온 데이터를 콘솔에 출력\n          setManager(data);\n        })\n        .catch(error => {\n          console.error('Error fetching data: ', error); // API 호출에 실패했을 때 에러 메시지를 출력\n        });\n    }, [userId]);\n\n    return(\n        <>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>userId</TableCell>\n                            <TableCell align=\"right\">이름</TableCell>\n                            <TableCell align=\"right\">성별</TableCell>\n                            <TableCell align=\"right\">ID</TableCell>\n                            <TableCell align=\"right\">PW</TableCell>\n                            <TableCell align=\"right\">생년월일</TableCell>\n                            <TableCell align=\"right\">전화번호</TableCell>\n                            <TableCell align=\"right\">이메일</TableCell>\n                            <TableCell align=\"right\">주소</TableCell>\n\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {manager.userId}\n                            </TableCell>\n                            <TableCell align=\"right\">{manager.mname}</TableCell>\n                            <TableCell align=\"right\">{manager.mgender}</TableCell>\n                            <TableCell align=\"right\">{manager.mid}</TableCell>\n                            <TableCell align=\"right\">{manager.mpw}</TableCell>\n                            <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\n                            <TableCell align=\"right\">{manager.mtel}</TableCell>\n                            <TableCell align=\"right\">{manager.memail}</TableCell>\n                            <TableCell align=\"right\">{manager.uadr}</TableCell>\n\n\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n            <div className=\"flex justify-end p-4\">\n              <button type=\"button\"\n                           className=\"rounded p-4 text-xl w-32 text-white bg-blue-500\"\n                           onClick={() => moveToList()}>\n                    list\n                    </button>\n            </div>\n\n            <div className=\"flex justify-end p-4\">\n              <button type=\"button\"\n                    className=\"rounded p-4 text-xl w-32 text-white bg-red-500\"\n                    onClick={() => moveToModify(manager.userId)}>\n              Modify\n              </button>\n            </div>\n        </>\n    );\n}\n\nconst makeDiv = (title, value) =>\n  <div className=\"flex justify-center\">\n    <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\n      <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\n        <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\n          {value}\n        </div>\n      </div>\n    </div>\n\nexport default ReadComponent;","import React from 'react';\nimport { Box, Button } from '@mui/material';\n\nconst PageComponent = ({serverData, movePage}) => {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\n      {serverData.prev ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\n          Prev\n        </Button> : null}\n      {serverData.pageNumList.map(pageNum =>\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\n          {pageNum}\n        </Button>\n      )}\n      {serverData.next ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\n          Next\n        </Button> : null}\n    </Box>\n  );\n}\n\nexport default PageComponent;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n       navigate({pathname: '/list', search: queryStr});\n      }\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n\n     return {moveToList, moveToModify, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","initState","dtoList","pageNumList","pageRequestDTO","prev","next","totoalCount","prevPage","nextPage","totalPage","current","_ref","onRowClick","console","log","selectedUserId","setSelectedUserId","useState","moveToRead","refresh","moveToList","useCustomMove","serverData","setServerData","managers","setManagers","useParams","useNavigate","useEffect","then","catch","error","_jsxs","className","children","_jsx","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","map","onClick","scope","mname","mgender","mid","mpw","mbirthDate","mtel","memail","uadr","colSpan","PageComponent","movePage","ListPage","queryParams","useSearchParams","ListComponent","mID","mPW","mName","mGender","mEmail","mProfileImage","uAdr","setManager","moveToModify","_Fragment","type","Box","display","justifyContent","m","p","Button","variant","color","pageNum","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num"],"sourceRoot":""}