{"version":3,"file":"static/js/678.4652fc0f.chunk.js","mappings":"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","sources":["api/ManagerApi.js","components/Manager/ReadComponent.js","components/Manager/ReadPage.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n export const API_SERVER_HOST = 'http://localhost:8080'\r\n const prefix = `${API_SERVER_HOST}/api/manager`\r\n export const getOne = async (userId) => {\r\n  const res = await axios.get(`${prefix}/${userId}` )\r\n  return res.data\r\n  }\r\nexport const getList = async ( pageParam ) => {\r\n const {page,size} = pageParam\r\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\r\n return res.data\r\n }\r\n\r\nexport const postAdd = async (managerObj) => {\r\n const res = await axios.post(`${prefix}/` , managerObj)\r\n return res.data\r\n }\r\n\r\nexport const deleteOne = async (userId) => {\r\n\r\n  const res = await axios.delete(`${prefix}/${userId}` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const putOne = async (manager) => {\r\n\r\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n","import { useEffect, useState,} from \"react\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOne } from \"../../api/ManagerApi\"\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\r\n\r\nconst initState = {\r\n    userId: 0,\r\n    mID: '',\r\n    mPW: '',\r\n    mName: '',\r\n    mGender: '',\r\n    mbirthDate: '',\r\n    mtel: '',\r\n    mEmail: '',\r\n    mProfileImage: '',\r\n    uAdr: '',\r\n}\r\n\r\nfunction ReadComponent({ userId }) {\r\n\r\n\r\n    const [manager, setManager] = useState(initState);\r\n\r\n    const {moveToList, moveToModify} = useCustomMove();\r\n\r\n    useEffect(() => {\r\n      getOne(userId)\r\n        .then(data => {\r\n          console.log(data); // API로부터 받아온 데이터를 콘솔에 출력\r\n          setManager(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data: ', error); // API 호출에 실패했을 때 에러 메시지를 출력\r\n        });\r\n    }, [userId]);\r\n\r\n    return(\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>userId</TableCell>\r\n                            <TableCell align=\"right\">이름</TableCell>\r\n                            <TableCell align=\"right\">성별</TableCell>\r\n                            <TableCell align=\"right\">ID</TableCell>\r\n                            <TableCell align=\"right\">PW</TableCell>\r\n                            <TableCell align=\"right\">생년월일</TableCell>\r\n                            <TableCell align=\"right\">전화번호</TableCell>\r\n                            <TableCell align=\"right\">이메일</TableCell>\r\n                            <TableCell align=\"right\">주소</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {manager.userId}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{manager.mname}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mgender}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mid}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mpw}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mtel}</TableCell>\r\n                            <TableCell align=\"right\">{manager.memail}</TableCell>\r\n                            <TableCell align=\"right\">{manager.uadr}</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n\r\n            <div className=\"flex justify-end p-4\">\r\n              <button type=\"button\"\r\n                           className=\"rounded p-4 text-xl w-32 text-white bg-blue-500\"\r\n                           onClick={() => moveToList()}>\r\n                    list\r\n                    </button>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end p-4\">\r\n              <button type=\"button\"\r\n                    className=\"rounded p-4 text-xl w-32 text-white bg-red-500\"\r\n                    onClick={() => moveToModify(manager.userId)}>\r\n              Modify\r\n              </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst makeDiv = (title, value) =>\r\n  <div className=\"flex justify-center\">\r\n    <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n      <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n        <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\nexport default ReadComponent;","import { useCallback } from \"react\";\r\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport ReadComponent from \"./ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n\r\n      const {userId} = useParams()\r\n\r\n      return (\r\n       <div className=\"font-extrabold w-full bg-white mt-6\">\r\n       <div className=\"text-2xl \"> Manager Read Page Component {userId} </div>\r\n        <ReadComponent userId={userId}></ReadComponent>\r\n       </div>\r\n      );\r\n}\r\nexport default ReadPage;","import { useCallback, useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n    return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n}\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n\r\n      const navigate = useNavigate()\r\n\r\n      const [refresh, setRefresh] = useState(false)\r\n\r\n      const [queryParams] = useSearchParams()\r\n\r\n      const page = getNum(queryParams.get('page'), 1)\r\n      const size = getNum(queryParams.get('size'), 10)\r\n\r\n      const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n      const moveToList = (pageParam) => {\r\n      console.log('moveToList called with: ', pageParam);\r\n        let queryStr = \"\"\r\n         if(pageParam){\r\n\r\n          const pageNum = getNum(pageParam.page, 1)\r\n          const sizeNum = getNum(pageParam.size, 10)\r\n\r\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n      }  else {\r\n          queryStr = queryDefault\r\n         }\r\n\r\n         setRefresh(!refresh)\r\n\r\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\r\n       navigate({pathname: '/list', search: queryStr});\r\n      }\r\n\r\n     const moveToModify = useCallback((num) => {\r\n     console.log(queryDefault)\r\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\r\n     },[page,size])\r\n\r\n     const moveToRead = (userId) => {\r\n       console.log('userId:', userId); // userId 파라미터 로깅\r\n       console.log(queryDefault)\r\n       navigate({\r\n         pathname: `../read/${userId}`,\r\n         search: queryDefault\r\n       })\r\n     }\r\n\r\n\r\n     return {moveToList, moveToModify, moveToRead, page, size, refresh}\r\n   }\r\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","initState","mID","mPW","mName","mGender","mbirthDate","mtel","mEmail","mProfileImage","uAdr","_ref","setManager","useState","moveToList","moveToModify","useCustomMove","useEffect","then","console","log","catch","error","_jsxs","_Fragment","children","_jsx","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","scope","mname","mgender","mid","mpw","memail","uadr","className","type","onClick","ReadPage","useParams","ReadComponent","getNum","param","defaultValue","parseInt","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","queryDefault","createSearchParams","toString","queryStr","pageNum","sizeNum","pathname","search","useCallback","num","moveToRead"],"sourceRoot":""}