{"version":3,"file":"static/js/913.0ef884df.chunk.js","mappings":"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","sources":["api/ManagerApi.js","api/OrderApi.js","api/ProductApi.js","components/Manager/AddComponent.js","components/Manager/AddPage.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ModifyComponent.js","components/Manager/ModifyPage.js","components/Manager/ReadComponent.js","components/Manager/ReadPage.js","components/Order/ListComponent.js","components/Order/ListPage.js","components/Order/ReadComponent.js","components/Order/ReadPage.js","components/Product/AddComponent.js","components/Product/AddPage.js","components/adminpage/listItems.js","api/UserApi.js","components/User/ListComponent.js","components/User/ListPage.js","components/Product/ReadComponent.js","components/Product/ModifyComponent.js","components/Product/ModifyPage.js","components/Product/ListComponent.js","components/Product/ListPage.js","components/adminpage/Explain.js","components/adminpage/Dashboard.js","components/common/PageComponent.js","components/common/ResultModal.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/api/manager`\n export const getOne = async (userId) => {\n  const res = await axios.get(`${prefix}/${userId}` )\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (managerObj) => {\n const res = await axios.post(`${prefix}/` , managerObj)\n return res.data\n }\n\nexport const deleteOne = async (userId) => {\n\n  const res = await axios.delete(`${prefix}/${userId}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (manager) => {\n\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\n\n  return res.data\n}\n\n\n","import axios from \"axios\"\n\n\nexport const API_SERVER_HOST = 'http://localhost:8080'\nconst prefix = `${API_SERVER_HOST}/api/orders`\n\nexport const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const getList = async (pageParam) => {\n  const {page, size} = pageParam\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\n  return res.data\n}\n\nexport const postAdd = async (orderObj) => {\n  const res = await axios.post(`${prefix}/`, orderObj)\n  return res.data\n}\n\nexport const deleteOne = async (id) => {\n  const res = await axios.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const putOne = async (order) => {\n  const res = await axios.put(`${prefix}/${order.id}`, {\n    id: order.id,\n    orderedProducts: order.orderedProducts,\n    totalPrice: order.totalPrice,\n    orderType: order.orderType,\n    pageRequestDTO: order.pageRequestDTO,\n    total: order.total\n  })\n  return res.data\n}","import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/products`\n export const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (productObj) => {\n const res = await axios.post(`${prefix}/create` , productObj)\n return res.data\n }\n\nexport const deleteOne = async (id) => {\n\n  const res = await axios.delete(`${prefix}/${id}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (product) => {\n\n  const res = await axios.put(`${prefix}/${product.id}`, product)\n\n  return res.data\n}\n\n\n","import React, { useState } from \"react\";\nimport { postAdd } from \"../../api/ManagerApi\";\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport { TextField, Button, Box } from '@mui/material';\n\nconst initState = {\n  mname: '',\n  mtel: '',\n  memail: '',\n  uadr: '',\n}\n\nconst AddComponent = () => {\n  const [manager, setManager] = useState({ ...initState });\n  const [result, setResult] = useState(null);\n  const { moveToList, moveToDashboard } = useCustomMove();\n\n  const handleChangeManager = (e) => {\n    manager[e.target.name] = e.target.value;\n    setManager({ ...manager });\n  }\n\n  const handleClickAdd = () => {\n    postAdd(manager)\n      .then(result => {\n        setResult(result.userId);\n        setManager({ ...initState });\n      }).catch(e => { console.error(e) });\n  }\n\n  const closeModal = () => {\n    setResult(null);\n    moveToDashboard();\n  }\n\n  return (\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\n      {result ? <ResultModal title={'Add Result'} content={`등록이 완료되었습니다`} callbackFn={closeModal} /> : <></>}\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        name=\"mname\"\n        value={manager.mname}\n        onChange={handleChangeManager}\n      />\n      <TextField\n        label=\"Phone Number\"\n        variant=\"outlined\"\n        name=\"mtel\"\n        value={manager.mtel}\n        onChange={handleChangeManager}\n        inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\n        helperText=\"Format: 123-4567-8901\"\n      />\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        name=\"memail\"\n        value={manager.memail}\n        onChange={handleChangeManager}\n        inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\n        helperText=\"Format: example@example.com\"\n      />\n      <TextField\n        label=\"Address\"\n        variant=\"outlined\"\n        name=\"uadr\"\n        value={manager.uadr}\n        onChange={handleChangeManager}\n        inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\n        helperText=\"Format: Street, City, State, Country\"\n      />\n      <Button variant=\"contained\" onClick={handleClickAdd}>\n        등록\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddComponent;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Container, Typography } from '@mui/material';\nimport AddComponent from './AddComponent';\n\nconst AddPage = ({ open, onClose }) => {\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                공급업체 등록 페이지\n            </Typography>\n            <AddComponent />\n        </Dialog>\n    );\n};\n\nexport default AddPage;\n","// src/main/frontend/src/components/Manager/ListComponent.js\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/ManagerApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\nimport PageComponent from \"../common/PageComponent\";\nimport axios from \"axios\";\nimport ModifyPage from './ModifyPage';\nimport Modal from \"@mui/material/Modal\";\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = () => {\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [managers, setManagers] = useState([]);\n  const navigate = useNavigate();\n  const [openModal, setOpenModal] = useState(false);\n\n\n\n  useEffect(() => {\n    getList({ page, size }).then(data => {\n      setServerData(data);\n      setManagers(data.dtoList);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setManagers([]);\n    });\n  }, [page, size, refresh]);\n\n  const handleRowClick = (userId) => {\n    setSelectedUserId(userId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedUserId(null);\n  };\n\n  const handleOpen = (userId) => {\n    setSelectedUserId(userId);\n    setOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleModifyPage = (userId) => {\n    navigate(`/manager/modify/${userId}`);\n  };\n\n\n  const supplierDelete = async (userId) => {\n    try {\n      console.log(`Deleting user with ID: ${userId}`);\n      await axios.delete(`http://localhost:8080/api/manager/${userId}`);\n      alert('삭제가 완료되었습니다.');\n    } catch (error) {\n      console.error('삭제 중 오류가 발생했습니다:', error);\n    }\n  };\n\n  return (\n      <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n        <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>userId</TableCell>\n                  <TableCell align=\"right\">이름</TableCell>\n                  <TableCell align=\"right\">전화번호</TableCell>\n                  <TableCell align=\"right\">이메일</TableCell>\n                  <TableCell align=\"right\">주소</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {managers.length > 0 ? managers.map(manager =>\n                    <TableRow key={manager.userId} onClick={() => handleRowClick(manager.userId)}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {manager.userId}\n                      </TableCell>\n                      <TableCell align=\"right\">{manager.mname}</TableCell>\n                      <TableCell align=\"right\">{manager.mtel}</TableCell>\n                      <TableCell align=\"right\">{manager.memail}</TableCell>\n                      <TableCell align=\"right\">{manager.uadr}</TableCell>\n                    </TableRow>\n                ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\n\n        <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth PaperProps={{ style: { height: '80vh' } }}>\n          <DialogTitle>공급업체 </DialogTitle>\n          <DialogContent>\n            {selectedUserId && <ReadComponent userId={selectedUserId} />}\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 100, left: '50%', transform: 'translateX(-50%)' }}>\n              {/* 수정 버튼 */}\n              <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ ml: 1 }}\n                  onClick={() => handleOpen(selectedUserId)}\n              >\n                공급업체 수정\n              </Button>\n              {/* 모달 컴포넌트 */}\n              <Modal open={openModal} onClose={handleModalClose}>\n                <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      height: '20vh', // 부모 요소 높이를 전체 화면 높이로 설정\n                      backgroundColor: '#f0f0f0', // 배경색을 추가하여 더 잘 보이게\n                      marginTop : 300,\n                    }}\n                >\n                  <ModifyPage userId={selectedUserId} onClose={handleClose}/>\n                </div>\n              </Modal>\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => supplierDelete(selectedUserId)}>공급업체\n                삭제</Button>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </div>\n  );\n}\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\nimport {Button} from \"@mui/material\";\nimport AddPage from \"./AddPage\";\n\n\n  const ListPage = () => {\n      const [openModal, setOpenModal] = useState(false);\n\n      const handleOpen = () => {\n          setOpenModal(true);\n      };\n\n      const handleClose = () => {\n          setOpenModal(false);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       공급업체 목록\n     </div>\n     <ListComponent/>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n            새로운 공급업체 등록\n        </Button>\n        <AddPage open={openModal} onClose={handleClose} />\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useCallback, useEffect, useState } from \"react\";\nimport { deleteOne, getOne, putOne } from \"../../api/ManagerApi\";\nimport { TextField, Button, Box } from '@mui/material';\n\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\n\nconst initState = {\n  userId:0,\n\n  mname: '',\n\n\n  memail: '',\n  mtel: '',\n  uadr: '',\n  complete: false\n}\n\nconst ModifyComponent = ({userId, moveList, moveRead}) => {\n\n  const [manager, setManager] = useState({...initState})\n\n\n  //모달 창을 위한 상태\n  const [result, setResult] = useState(null)\n\n  //이동을 위한 기능들\n  const {moveToList, moveToRead} = useCustomMove()\n\n\n  const handleClickModify = () => { //버튼 클릭시\n\n    //console.log(manager)\n\n    putOne(manager).then(data => {\n      console.log(\"modify result: \" + data)\n      setResult('Modified')\n    })\n  }\n\n  const handleClickDelete = () => { //버튼 클릭시\n\n    deleteOne(userId).then( data => {\n      console.log(\"delete result: \" + data)\n      setResult('Deleted')\n    })\n\n  }\n\n  //모달 창이 close될때\n  const closeModal = () => {\n    if(result ==='Deleted') {\n      moveToList()\n    }else {\n      moveToRead(userId)\n    }\n  }\n\n\n\n  useEffect(() => {\n\n    getOne(userId).then(data =>  setManager(data))\n\n  },[userId])\n\n  const handleChangeManager = (e) => {\n\n    manager[e.target.name] = e.target.value\n\n    setManager({...manager})\n  }\n\n  const handleChangeManagerComplete = (e) => {\n\n    const value = e.target.value\n\n    manager.complete = (value === 'Y')\n\n    setManager({...manager})\n  }\n\n  return (\n      <Box sx={{ '& > :not(style)': { m: 1 } }}>\n        {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal>  :<></>}\n\n        <TextField\n                label=\"userId\"\n                variant=\"outlined\"\n                value={manager.userId}\n                disabled\n              />\n\n        <TextField\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  name=\"mname\"\n                  value={manager.mname}\n                  onChange={handleChangeManager}\n                />\n\n\n        <TextField\n                label=\"Email\"\n                variant=\"outlined\"\n                name=\"memail\"\n                value={manager.memail}\n                onChange={handleChangeManager}\n                inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\n                helperText=\"Format: example@example.com\"\n              />\n\n        <TextField\n                label=\"Address\"\n                variant=\"outlined\"\n                name=\"uadr\"\n                value={manager.uadr}\n                onChange={handleChangeManager}\n                inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\n                helperText=\"Format: Street, City, State, Country\"\n              />\n\n        <TextField\n                label=\"Phone Number\"\n                variant=\"outlined\"\n                name=\"mtel\"\n                value={manager.mtel}\n                onChange={handleChangeManager}\n                inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\n                helperText=\"Format: 123-4567-8901\"\n              />\n\n        <TextField\n          label=\"COMPLETE\"\n          variant=\"outlined\"\n          name=\"complete\"\n          value={manager.complete ? 'Y' : 'N'}\n          onChange={handleChangeManagerComplete}\n          select\n          SelectProps={{\n            native: true,\n          }}\n        >\n          <option value='Y'>Completed</option>\n          <option value='N'>Not Yet</option>\n        </TextField>\n\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\n          Delete\n        </Button>\n\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\n          Modify\n        </Button>\n      </Box>\n    );\n  }\n\nexport default ModifyComponent;\n","import { useParams } from \"react-router-dom\";\nimport ModifyComponent from \"./ModifyComponent\";\n\nconst ModifyPage = ({ userId, onClose }) => {\n\n  //const {userId} = useParams()\n\n  return (\n      <div\n          className=\"p-4 w-full max-w-lg bg-white rounded-lg shadow-lg\"\n          style={{\n              textAlign: 'center',\n              padding: '2rem',         // Optional: add padding for inner spacing\n              boxSizing: 'border-box', // Ensure padding doesn’t affect width\n          }}\n      >\n          <div className=\"text-3xl font-extrabold\">\n              Manager Modify Page\n          </div>\n\n          <ModifyComponent userId={userId}/>\n\n      </div>\n  );\n}\n\nexport default ModifyPage;\n","// src/main/frontend/src/components/Manager/ReadComponent.js\nimport { useEffect, useState } from \"react\";\nimport { getOne } from \"../../api/ManagerApi\";\nimport { Grid, Typography, Box, Divider } from '@mui/material';\n\nconst initState = {\n  userId: 0,\n  mName: '',\n  mtel: '',\n  mEmail: '',\n  mProfileImage: '',\n  uAdr: '',\n}\n\nconst ReadComponent = ({ userId }) => {\n  const [manager, setManager] = useState(initState);\n\n  useEffect(() => {\n    if (userId) {\n      getOne(userId)\n        .then(data => setManager(data))\n        .catch(error => console.error('Error fetching data: ', error));\n    }\n  }, [userId]);\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" fontWeight=\"bold\">{manager.mname}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 2 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>ID:</strong> {manager.userId}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Name:</strong> {manager.mname}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Phone:</strong> {manager.mtel}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Email:</strong> {manager.memail}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Address:</strong> {manager.uadr}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default ReadComponent;","import { useCallback } from \"react\";\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\n\nconst ReadPage = () => {\n\n      const {userId} = useParams()\n\n      return (\n       <div className=\"font-extrabold w-full bg-white mt-6\">\n       <div className=\"text-2xl \"> Manager Read Page Component {userId} </div>\n        <ReadComponent userId={userId}></ReadComponent>\n       </div>\n      );\n}\nexport default ReadPage;","import { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\nimport { getList, getOne } from \"../../api/OrderApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { useNavigate } from 'react-router-dom';\nimport PageComponent from \"../common/PageComponent\";\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport ReadPage from './ReadPage';\n\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = ({ onRowClick , orderType, setOrderType}) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove();\n  const [serverData, setServerData] = useState(initState)\n  const [order, setOrder] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const handleRowClick = (order) => {\n    setSelectedId(order.id);\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n\n  useEffect(() => {\n    getList({page,size}).then(data => {\n      console.log(data)\n      setServerData(data)\n      setOrder(data.dtoList) // setOrder function\n      console.log(data.dtoList)\n    })\n        .catch(error => {\n          console.error('Error fetching data: ', error);\n          setOrder([]); // API 호출 실패 시 order를 빈 배열로 설정\n        });\n  }, [page,size, refresh]);\n\n\n\n  return (\n      <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n        <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>id</TableCell>\n                  <TableCell align=\"right\">주문 ID</TableCell>\n                  <TableCell align=\"right\">주문종류</TableCell>\n                  <TableCell align=\"right\">주문한 상품</TableCell>\n                  <TableCell align=\"right\">총 수량</TableCell>\n                  <TableCell align=\"right\">총가격</TableCell>\n\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.length > 0 ? order.map(order =>\n                    <TableRow\n                        key={order.id}\n                        onClick={() => {\n                          handleRowClick(order);\n                          console.log(`Row clicked with id: ${order.id}`); // 로깅하여 확인\n                          onRowClick(order.id);\n                        }}\n                        style={{ cursor: 'pointer' }}\n                    >\n\n                      <TableCell component=\"th\" scope=\"row\">\n                        {order.id}\n                      </TableCell>\n                      <TableCell align=\"right\">{order.id}</TableCell>\n                      <TableCell align=\"right\">{order.orderType}</TableCell>\n                      <TableCell align=\"right\">\n                        {order.orderedProducts.map((product, index) => (\n                            <p key={index}>{product.name}</p>\n                        ))}\n                      </TableCell>\n                      <TableCell align=\"right\">{order.totalAmount}</TableCell>\n                      <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                    </TableRow>\n                ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <PageComponent serverData={serverData} movePage={moveToList} orderType={0} setOrder={setOrder}></PageComponent>\n        <Modal\n            open={openModal}\n            onClose={handleCloseModal}\n        >\n          <Box sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: '35vw',\n            height: '90vh',\n            overflow: 'auto',\n            bgcolor: 'background.paper',\n          }}>\n            {selectedId && <ReadPage id={selectedId} />}\n          </Box>\n        </Modal>\n      </div>\n  );\n}\n\nexport default ListComponent;","import React , { useState }  from \"react\";\nimport {Link, useSearchParams} from \"react-router-dom\";\nimport { Box, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport ListComponent from \"./ListComponent\";\nimport Button from \"@mui/material/Button\";\n\n\n\n  const ListPage = () => {\n      const [orderType, setOrderType] = useState('option1'); // 선택된 옵션을 관리하는 상태\n\n      const handleChange = (event) => {\n          setOrderType(event.target.value);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n    const handleRowClick = (id) => {\n        console.log(`Row with id ${id} was clicked`);\n        // 여기에 행 클릭 시 수행할 작업을 추가합니다.\n      };\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       주문서 관리\n     </div>\n     <ListComponent onRowClick={handleRowClick} />\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2, gap: 2 }}>\n            <FormControl fullWidth variant=\"outlined\" sx={{ width: '8%', '&:hover': { bgcolor: 'gray' }, ml: 60 }}>\n                <InputLabel sx={{\n                    '&.Mui-focused': {\n                        color: 'black', // 포커스 시 라벨 색상\n                    },\n                }}>주문서 종류</InputLabel>\n                <Select\n                    value={orderType}\n                    onChange={handleChange}\n                    label=\"주문서 종류\"\n                    MenuProps={{\n                        PaperProps: {\n                            sx: {\n                                marginTop: '-160px',\n                                '& .MuiMenuItem-root': {\n                                },\n                            },\n                        },\n                    }}\n                    sx={{\n                        '& .MuiOutlinedInput-notchedOutline': {\n                            borderColor: 'gray',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                            borderColor: 'gray',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                            color : 'black',\n                            borderColor: 'gray', // 포커스 시 테두리 색상 유지\n                        },\n                        '& .MuiSvgIcon-root': {\n                        },\n                    }}\n                >\n                    {/*< 0 = 주문 전, 1 = 주문 중 , 2 = 납품(주문) 완료 , 3 = 반품 중 , 4 = 반품 완료 , 5 = 취소>*/}\n                    <MenuItem value=\"option1\">전체</MenuItem>\n                    <MenuItem value=\"option2\">주문 전</MenuItem>\n                    <MenuItem value=\"option3\">주문 중</MenuItem>\n                    <MenuItem value=\"option4\">주문 완료</MenuItem>\n                    <MenuItem value=\"option5\">반품 처리</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                sx={{ bgcolor: 'gray', color: 'white', width: '8%', '&:hover': { bgcolor: 'gray' } , mr: 60}}\n                variant=\"contained\"\n                component={Link}\n                to=\"/order/add\"\n            >\n                주문서 등록\n            </Button>\n        </Box>\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/OrderApi\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\nimport * as OrderApi from '../../api/OrderApi.js';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport axios from 'axios';\n\nconst initState = {\n    id: 0,\n    orderedProducts: '',\n    totalPrice: '',\n    orderType: '',\n    totalAmount:'',\n    manager: '',\n}\n\nfunction ReadComponent({ id  }) {\n\n    const [order, setOrder] = useState(initState);\n    const [supplier, setSupplier] = useState(initState);\n    const [openModal, setOpenModal] = useState(false);\n    const {moveToList, moveToModify} = useCustomMove();\n\n\n    const handleOpenModal = () => {\n        setOpenModal(true);\n      };\n\n      const handleCloseModal = () => {\n        setOpenModal(false);\n      };\n\n    useEffect(() => {\n        // API에서 주문서 정보를 가져오는 함수\n        const fetchOrderDetails = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\n                const supplierResponse = await axios.get(`http://localhost:8080/api/manager/${response.data.manager}`);\n                setSupplier(supplierResponse.data); // 공급업체 데이터를 상태로 저장\n\n            } catch (error) {\n                console.error('Error fetching the order details:', error);\n            }\n        };\n\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\n    }, [id]);\n\n\n    let totalPrice = 0;\n    // Check if order exists and orderedProducts is an array\n    if (!order || !Array.isArray(order.orderedProducts)) {\n        return <div>Loading...</div>; // Handle loading or error state\n    }\n\n    return(\n        <>\n            <div>\n                <h1>납품 요청 내역</h1>\n                <p>주문번호 : <b>{order.id}</b></p>\n                <p>주문일자 : <b>{new Date().toLocaleString()}</b></p> {/* Display current date and time */}\n                <h3>주문정보</h3>\n                <hr style={{border: '1px solid black', width: '450px', marginLeft: 0}}/>\n                <p>수신인 : {supplier.mname}</p>\n                <p>연락처 : {supplier.mtel}</p>\n                <h3>주문상품</h3>\n\n                {order.orderedProducts.map((product) => {\n                    let imageBase64 = '';\n                    if (product.itemImage) {\n                        imageBase64 = btoa(String.fromCharCode(...new Uint8Array(product.itemImage))); // Assuming itemImage is a byte array\n                    }\n\n                    // Update total price\n                    totalPrice += product.price * product.amount;\n\n                    return (\n                        <div key={product.id}>\n                            <hr style={{border: '0.1px groove gray', width: '450px', marginLeft: 0}}/>\n                            <div style={{display: 'flex', alignItems: 'center', marginBottom: '10px'}}>\n                                <img src={`data:image/png;base64,${imageBase64}`} alt=\"상품 이미지\"\n                                     style={{width: '100px', height: 'auto', marginRight: '10px'}}/>\n                                <div style={{marginLeft: '10px'}}>\n                                    <p style={{margin: 0}}>상품명 : {product.name}</p>\n                                    <p style={{margin: 0}}>상품유형 : {product.itemType}</p>\n                                    <p style={{margin: 0}}>사이즈 : {product.size}</p>\n                                    <p style={{margin: 0}}>주문수량 : {product.amount}</p>\n                                    <p style={{margin: 0}}>주문금액 : {product.price} 원</p>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n\n                <hr style={{border: '1px solid black', width: '450px', marginLeft: 0}}/>\n                <h2>총 주문금액 : {totalPrice} 원</h2>\n            </div>\n        </>\n\n    );\n}\n\nexport default ReadComponent;","import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\nimport { Typography, Paper, Box, Modal, Button , Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport axios from 'axios';\n\n\nconst initState = {\n    id: 0,\n    orderedProducts: '',\n    totalPrice: '',\n    orderType: '',\n    totalAmount:'',\n    manager: '',\n}\n\nconst ReadPage = ({ id }) => {\n  //const { id } = useParams(); // URL 파라미터에서 주문서의 ID를 가져옵니다.\n  const [open, setOpen] = useState(false); // 모달창의 상태를 관리하는 상태를 생성합니다.\n    const [order, setOrder] = useState(initState);\n    const handleOpen = () => setOpen(true); // 모달창을 열기 위한 함수를 생성합니다.\n    const handleClose = () => setOpen(false); // 모달창을 닫기 위한 함수를 생성합니다.\n\n    const handleDelete = () => {\n        orderDelete(id); // 삭제 함수 호출\n        handleClose(); // 모달 닫기\n    };\n    const orderAssign = async (id) => {\n        try {\n          await axios.get(`http://localhost:8080/api/orders/order/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\n          alert('주문이 완료되었습니다.');\n        } catch (error) {\n          console.error('주문 중 오류가 발생했습니다:', error);\n        }\n      };\n\n    const orderComplete = async (id) => {\n        try {\n            await axios.get(`http://localhost:8080/api/orders/complete/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\n            alert('납품이 완료되었습니다.');\n        } catch (error) {\n            console.error('납품 중 오류가 발생했습니다:', error);\n        }\n    };\n\n\n    useEffect(() => {\n        // API에서 주문서 정보를 가져오는 함수\n        const fetchOrderDetails = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\n            } catch (error) {\n                console.error('Error fetching the order details:', error);\n            }\n        };\n\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\n    }, [id]);\n\n    const orderDelete = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/api/orders/${id}`);\n            alert('삭제가 완료되었습니다.');\n        } catch (error) {\n            console.error('삭제 중 오류가 발생했습니다:', error);\n        }\n    };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\n        Order Receipt\n      </Typography>\n      <Paper elevation={3} sx={{ p: 2, width: '500px', mt: 2 }}>\n        <ReadComponent id={id} /> {/* 주문서의 ID를 ReadComponent 컴포넌트에 prop으로 전달합니다. */}\n      </Paper>\n        {order.orderType === 'BEFORE_ORDER' && (\n          <Box mt={2}> {/* 주문하기 버튼에 상단 마진을 추가합니다. */}\n                  <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                      variant=\"contained\" color=\"primary\" onClick={() => orderAssign(id)}>\n                        주문하기\n                  </Button>\n                  <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2, ml : 3 , mr : 3}}\n                          variant=\"contained\" color=\"primary\" component={Link}\n                          to=\"/order/modify\">\n                      주문 수정\n                  </Button>\n              <Button\n                  sx={{\n                      bgcolor: 'gray',\n                      color: 'white',\n                      '&:hover': { bgcolor: 'gray' },\n                      mb: 4,\n                      mt: 2,\n                      ml: 3,\n                      mr: 3\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleOpen} // 모달 열기\n              >\n                  주문 삭제\n              </Button>\n\n              {/* 삭제 확인 모달 */}\n              <Dialog open={open} onClose={handleClose}>\n                  <DialogTitle>주문 삭제</DialogTitle>\n                  <DialogContent>\n                      <DialogContentText>\n                          정말 삭제하시겠습니까?\n                      </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                      <Button onClick={handleDelete} color=\"primary\" autoFocus>\n                          예\n                      </Button>\n                      <Button onClick={handleClose} color=\"primary\">\n                          아니오\n                      </Button>\n                  </DialogActions>\n              </Dialog>\n                  </Box>\n            )}\n        {order.orderType === 'PROGRESS_ORDER' && (\n            <Box mt={2}>\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                        variant=\"contained\" color=\"primary\" onClick={() => orderComplete(id)}>\n                    납품 처리\n                </Button>\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                        variant=\"contained\" color=\"primary\">\n                    반품 처리\n                </Button>\n            </Box>\n        )}\n        {order.orderType === 'RETURNING' && (\n            <Box mt={2}>\n                <Button sx={{ bgcolor: 'gray', color: 'white','&:hover': { bgcolor: 'gray' },mb : 4, mt : 2 , ml : 3 , mr : 3}}\n                        variant=\"contained\" color=\"primary\" onClick={() => orderComplete(id)}>\n                    납품 처리\n                </Button>\n            </Box>\n        )}\n    </Box>\n  );\n}\n\nexport default ReadPage;","import React, { useState } from \"react\";\nimport { postAdd } from \"../../api/ProductApi\";\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport { TextField, Button, Box } from '@mui/material';\n\nconst initState = {\n\n    name : '',\n    item_type : '',\n    size : '',\n    price : '',\n    size : '',\n    amount : '',\n\n\n\n}\n\nconst AddComponent = () => {\n\n    const [product, setProduct] = useState({...initState})\n    const [result, setResult] = useState(null)\n    const {moveToList} = useCustomMove()\n\n    const handleChangeProduct = (e) => {\n        product[e.target.name] = e.target.value\n        setProduct({...product})\n    }\n\n    const handleClickAdd = () => {\n        postAdd(product)\n            .then(result => {\n                \n                \n                setResult(result.id)\n                setProduct({...initState})\n            }).catch(e => { console.error(e) })\n    }\n\n    const closeModal = () => {\n        setResult(null)\n        moveToList()\n    }\n\n    return (\n        <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            {result ? <ResultModal title={'Add Result'} content={`New ${result} Added`} callbackFn={closeModal}/>: <></>}\n            <TextField\n                label=\"Name\"\n                variant=\"outlined\"\n                name=\"name\"\n                value={product.name}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Type\"\n                variant=\"outlined\"\n                name=\"item_type\"\n                value={product.item_type}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Size\"\n                variant=\"outlined\"\n                name=\"size\"\n                value={product.size}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Price\"\n                variant=\"outlined\"\n                name=\"price\"\n                value={product.price}\n                onChange={handleChangeProduct}\n            />\n            />\n            <Button variant=\"contained\" onClick={handleClickAdd}>\n                ADD\n            </Button>\n        </Box>\n    );\n};\n\nexport default AddComponent;\n","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Container, Typography } from '@mui/material';\nimport AddComponent from './AddComponent';\n\nconst AddPage = ({ open, onClose }) => {\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                상품 등록 페이지\n            </Typography>\n            <AddComponent />\n        </Dialog>\n    );\n};\n\nexport default AddPage;\n","import React, { useState } from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport PeopleIcon from '@mui/icons-material/People';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport Inventory from '@mui/icons-material/Inventory'; // Added this line\nimport Store from '@mui/icons-material/Store'; // Added this line\nimport { Link } from 'react-router-dom';\nimport Modal from '@mui/material/Modal';\nimport ListPage from '../Order/ListPage';\nimport Button from '@mui/material/Button';\n\n\nexport const MainListItems = ({ user ,statePage, setStatePage }) => {\n  const [openOrder, setOpenOrder] = React.useState(false);\n  const [openSupplier, setOpenSupplier] = React.useState(false);\n  const [openUser, setOpenUser] = React.useState(false);\n  const [openInventory, setOpenInventory] = React.useState(false);\n  const [openProduct, setOpenProduct] = React.useState(false);\n\n\n  const handleClickOrder = () => {\n      setStatePage(1);\n      setOpenOrder(!openOrder);\n  };\n\n  const handleClickSupplier = () => {\n      setStatePage(2);\n    setOpenSupplier(!openSupplier);\n  };\n\n  const handleClickUser = () => {\n      setStatePage(3);\n      setOpenUser(!openUser);\n  };\n\n  const handleClickInventory = () => {\n      setStatePage(4);\n        setOpenInventory(!openInventory);\n  };\n\n  const handleClickProduct = () => {\n      setStatePage(5);\n        setOpenProduct(!openProduct);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <React.Fragment>\n      <ListItemButton sx={{ justifyContent: 'flex-start', marginLeft: 5 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, marginBottom: 5 }}>\n          <ListItemAvatar>\n            <Avatar\n              alt=\"Admin Name\"\n              src=\"/sample/sample1.jpg\"\n              sx={{ borderRadius: '50%', width: 100, height: 100 }} // 크기를 조절\n            />\n          </ListItemAvatar>\n            <ListItemText primary={user?.cname || \"Unknown\"} />\n        </Box>\n      </ListItemButton>\n      <Divider />\n      <ListItemButton onClick={handleClickOrder}> {/*주문서 관리시 상태 1로 변경*/}\n      <ListItemIcon>\n                <DashboardIcon />\n      </ListItemIcon>\n        <ListItemText primary=\"주문서 관리\" />\n          {/*\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <Box sx={{\n                p: 4,\n                width: '80vw',\n                height: '80vh',\n                overflow: 'auto',\n                backgroundColor: 'white',\n                position: 'absolute', // Add position here\n                top: '50%', // Add top here\n                left: '50%', // Add left here\n                transform: 'translate(-50%, -50%)' // Add transform here\n            }}>\n              <ListPage />\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Button variant=\"contained\" component={Link} to=\"/order/add\">주문서 등록</Button>\n                <Button variant=\"contained\" component={Link} to=\"/order/modify\">주문서 수정</Button>\n                <Button variant=\"contained\">주문서 삭제</Button>\n              </Box>\n            </Box>\n          </Modal>\n          */}\n\n      </ListItemButton>\n\n      <ListItemButton onClick={handleClickSupplier}>\n        <ListItemIcon>\n          <ShoppingCartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"공급업체 관리\" />\n        {openSupplier ? <ExpandLess /> : <ExpandMore />}\n      </ListItemButton>\n      <Collapse in={openSupplier} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 등록\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 조회\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 수정\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 삭제\" />\n          </ListItemButton>\n        </List>\n      </Collapse>\n\n      <ListItemButton onClick={handleClickUser}>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"사용자 관리\" />\n              {openUser ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openUser} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/manager/list\">\n                  <ListItemText primary=\"사용자 목록\" />\n                </ListItemButton>\n\n\n              </List>\n            </Collapse>\n\n      <ListItemButton onClick={handleClickInventory}>\n              <ListItemIcon>\n                <Inventory />\n              </ListItemIcon>\n              <ListItemText primary=\"재고 관리\" />\n              {openInventory ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openInventory} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"재고 확인 및 수정\" />\n                </ListItemButton>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"반품 품목 확인\" />\n                </ListItemButton>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"납품 품목 확인\" />\n                </ListItemButton>\n\n              </List>\n            </Collapse>\n\n      <ListItemButton onClick={handleClickProduct}>\n                    <ListItemIcon>\n                      <Store />\n                    </ListItemIcon>\n                    <ListItemText primary=\"상품 관리\" />\n                    {openProduct ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                  <Collapse in={openProduct} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 등록\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 조회\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 수정\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 삭제\" />\n                      </ListItemButton>\n                    </List>\n                  </Collapse>\n    </React.Fragment>\n  );\n};","import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/api/user`\n export const getOne = async (userId) => {\n  const res = await axios.get(`${prefix}/${userId}`)\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (userObj) => {\n const res = await axios.post(`${prefix}/` , userObj)\n return res.data\n }\n\nexport const deleteOne = async (userId) => {\n\n  const res = await axios.delete(`${prefix}/${userId}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (user) => {\n\n  const res = await axios.put(`${prefix}/${user.userId}`, user)\n\n  return res.data\n}\n\n\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/UserApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\nimport PageComponent from \"../common/PageComponent\";\nimport axios from \"axios\";\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = () => {\n  const [selecteduserId, setSelecteduserId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [user, setUser] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getList({ page, size }).then(data => {\n      setServerData(data);\n      setUser(data.dtoList);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setUser([]);\n    });\n  }, [page, size, refresh]);\n\n\n  return (\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>userId</TableCell>\n                <TableCell align=\"right\">이름</TableCell>\n                <TableCell align=\"right\">성별</TableCell>\n                <TableCell align=\"right\">id</TableCell>\n                <TableCell align=\"right\">전화번호</TableCell>\n                <TableCell align=\"right\">이메일</TableCell>\n                <TableCell align=\"right\">주소</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {user.length > 0 ? user.map(user =>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {user.userId}\n                  </TableCell>\n                  <TableCell align=\"right\">{user.cname}</TableCell>\n                  <TableCell align=\"right\">{user.cgender}</TableCell>\n                    <TableCell align=\"right\">{user.cid}</TableCell>\n\n                  <TableCell align=\"right\">{user.ctel}</TableCell>\n                  <TableCell align=\"right\">{user.cemail}</TableCell>\n                  <TableCell align=\"right\">{user.cadr}</TableCell>\n                </TableRow>\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <PageComponent serverData={serverData} movePage={moveToList} setUser={setUser}></PageComponent>\n\n\n    </div>\n  );\n}\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\nimport {Button} from \"@mui/material\";\n\n\n  const ListPage = () => {\n      const [openModal, setOpenModal] = useState(false);\n\n      const handleOpen = () => {\n          setOpenModal(true);\n      };\n\n      const handleClose = () => {\n          setOpenModal(false);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n\n     </div>\n     <ListComponent/>\n\n\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/ProductApi\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport * as ProductApi from '../../api/ProductApi.js';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport axios from 'axios';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n\nconst initState = {\n    id: '',\n        name: '',\n        itemType: '',\n        price: '',\n        size: '',\n        amount:''\n\n}\n\nconst ReadComponent = ({ id }) => {\n  const [product, setProduct] = useState(initState);\n\n  useEffect(() => {\n    if (id) {\n      getOne(id)\n        .then(data => setProduct(data))\n        .catch(error => console.error('Error fetching data: ', error));\n    }\n  }, [id]);\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" fontWeight=\"bold\">{product.id}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 2 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Name:</strong> {product.name}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>ItemType:</strong> {product.itemType}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Price:</strong> {product.price}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Size:</strong> {product.size}</Typography>\n        </Grid>\n        <Divider sx={{ width: '100%', my: 1 }} />\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" fontSize=\"1.1rem\"><strong>Amount:</strong> {product.amount}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default ReadComponent;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { deleteOne, getOne, putOne } from \"../../api/ProductApi\";\nimport { TextField, Button, Box } from '@mui/material';\n\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\n\nconst initState = {\n    id: 0,\n    name: '',\n    itemType: '',\n    price: '',\n    size: '',\n    amount:'',\n    complete: false\n}\n\nconst ModifyComponent = ({ id, moveList }) => {\n\n    const [product, setProduct] = useState({ ...initState })\n\n    // 모달 창을 위한 상태\n    const [result, setResult] = useState(null)\n\n    // 이동을 위한 기능들\n    const { moveToList, ProductmoveToRead } = useCustomMove()\n\n    const handleClickModify = () => { // 버튼 클릭 시\n        putOne(product).then(data => {\n            console.log(\"modify result: \" + data)\n            setResult('Modified')\n        })\n    }\n\n    const handleClickDelete = () => { // 버튼 클릭 시\n        deleteOne(id).then(data => {\n            console.log(\"delete result: \" + data)\n            setResult('Deleted')\n        })\n    }\n\n    // 모달 창이 close될 때\n    const closeModal = () => {\n        if (result === 'Deleted') {\n            moveToList()\n        } else {\n            ProductmoveToRead(id)\n        }\n    }\n\n    useEffect(() => {\n        getOne(id).then(data => setProduct(data))\n    }, [id])\n\n    const handleChangeProduct = (e) => {\n        product[e.target.name] = e.target.value\n        setProduct({ ...product })\n    }\n\n    const handleChangeProductComplete = (e) => {\n        const value = e.target.value\n        product.complete = (value === 'Y')\n        setProduct({ ...product })\n    }\n\n    return (\n        <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal> : <></>}\n\n            <TextField\n                label=\"Name\"\n                variant=\"outlined\"\n                name=\"name\"\n                value={product.name}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                label=\"Type\"\n                variant=\"outlined\"\n                name=\"itemType\"\n                value={product.itemType}\n                onChange={handleChangeProduct}\n            />\n            <TextField\n                            label=\"Price\"\n                            variant=\"outlined\"\n                            name=\"price\"\n                            value={product.totalPrice}\n                            onChange={handleChangeProduct}\n            />\n\n            <TextField\n                   label=\"Size\"\n                   variant=\"outlined\"\n                   name=\"size\"\n                   value={product.size}\n                   onChange={handleChangeProduct}\n            />\n\n            <TextField\n                label=\"Amount\"\n                variant=\"outlined\"\n                name=\"amount\"\n                value={product.amount}\n                onChange={handleChangeProduct}\n            />\n\n            <TextField\n                label=\"COMPLETE\"\n                variant=\"outlined\"\n                name=\"complete\"\n                value={product.complete ? 'Y' : 'N'}\n                onChange={handleChangeProductComplete}\n                select\n                SelectProps={{\n                    native: true,\n                }}\n            >\n                <option value='Y'>Completed</option>\n                <option value='N'>Not Yet</option>\n            </TextField>\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\n                Delete\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\n                Modify\n            </Button>\n        </Box>\n    );\n}\n\nexport default ModifyComponent;","import { useParams } from \"react-router-dom\";\nimport ModifyComponent from \"./ModifyComponent\";\n\nconst ModifyPage = () => {\n\n    const {id} = useParams()\n\n    return (\n        <div className=\"p-4 w-full bg-white\">\n            <div className=\"text-3xl font-extrabold\">\n                Product Modify Page\n            </div>\n\n            <ModifyComponent id={id}/>\n\n        </div>\n    );\n}\n\nexport default ModifyPage;\n","\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getList } from \"../../api/ProductApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { Dialog, DialogTitle, DialogContent, Button, Box } from '@mui/material';\nimport PageComponent from \"../common/PageComponent\";\nimport axios from \"axios\";\nimport ModifyPage from './ModifyPage';\nimport Modal from \"@mui/material/Modal\";\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = () => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [open, setOpen] = useState(false);\n  const { moveToRead, page, size, refresh, moveToList } = useCustomMove();\n  const [serverData, setServerData] = useState(initState);\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    getList({ page, size }).then(data => {\n      setServerData(data);\n      setProducts(data.dtoList);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setProducts([]);\n    });\n  }, [page, size, refresh]);\n\n  const handleRowClick = (id) => {\n    setSelectedId(id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedId(null);\n  };\n\n  const handleOpen = (id) => {\n    setSelectedId(id);\n    setOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleModifyPage = (id) => {\n    navigate(`/product/modify/${id}`);\n  };\n\nif (!products || products.length === 0) {\n    return <div>No data available</div>;\n  }\n\n\n  const productDelete = async (id) => {\n    try {\n      console.log(`Deleting user with ID: ${id}`);\n      await axios.delete(`http://localhost:8080/products/${id}`);\n      alert('삭제가 완료되었습니다.');\n    } catch (error) {\n      console.error('삭제 중 오류가 발생했습니다:', error);\n    }\n  };\n\n  return (\n      <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n        <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>userId</TableCell>\n                  <TableCell align=\"right\">이름</TableCell>\n                  <TableCell align=\"right\">상품종류</TableCell>\n                  <TableCell align=\"right\">사이즈</TableCell>\n                  <TableCell align=\"right\">가격</TableCell>\n                  <TableCell align=\"right\">수량</TableCell>\n\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {products.length > 0 ? products.map(product =>\n                    <TableRow key={product.id} onClick={() => handleRowClick(product.id)}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {product.id}\n                      </TableCell>\n                      <TableCell align=\"right\">{product.name}</TableCell>\n                      <TableCell align=\"right\">{product.itemType}</TableCell>\n                      <TableCell align=\"right\">{product.size}</TableCell>\n                      <TableCell align=\"right\">{product.price}</TableCell>\n                      <TableCell align=\"right\">{product.amount}</TableCell>\n                    </TableRow>\n                ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <PageComponent serverData={serverData} movePage={moveToList} setProducts={setProducts}></PageComponent>\n\n        <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth PaperProps={{ style: { height: '80vh' } }}>\n          <DialogTitle>상품 </DialogTitle>\n          <DialogContent>\n            {selectedId && <ReadComponent id={selectedId} />}\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 100, left: '50%', transform: 'translateX(-50%)' }}>\n              {/* 수정 버튼 */}\n              <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ ml: 1 }}\n                  onClick={() => handleOpen(selectedId)}\n              >\n                상품 수정\n              </Button>\n              {/* 모달 컴포넌트 */}\n              <Modal open={openModal} onClose={handleModalClose}>\n                <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      height: '20vh', // 부모 요소 높이를 전체 화면 높이로 설정\n                      backgroundColor: '#f0f0f0', // 배경색을 추가하여 더 잘 보이게\n                      marginTop : 300,\n                    }}\n                >\n                  <ModifyPage id={selectedId} onClose={handleClose}/>\n                </div>\n              </Modal>\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => productDelete(selectedId)}>상품\n                삭제</Button>\n            </Box>\n          </DialogContent>\n        </Dialog>\n      </div>\n  );\n}\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\nimport {Button} from \"@mui/material\";\nimport AddPage from \"./AddPage\";\n\n\n  const ListPage = () => {\n      const [openModal, setOpenModal] = useState(false);\n\n      const handleOpen = () => {\n          setOpenModal(true);\n      };\n\n      const handleClose = () => {\n          setOpenModal(false);\n      };\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       상품\n     </div>\n     <ListComponent/>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n            새로운 상품 등록\n        </Button>\n        <AddPage open={openModal} onClose={handleClose} />\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import * as React from \"react\";\nimport Title from \"./Title\";\nimport Link from \"@mui/material/Link\";\nimport {\n    Text,\n    Typography,\n    Paper,\n    Box,\n    Modal,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Card, Stack, Divider, Chip\n} from '@mui/material';\n\nexport default function Explain() {\n    return (\n        <div>\n            <Typography>관리자 메뉴 내비게이션</Typography>\n            <hr style={{marginLeft: 0}}/>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            주문서 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        모든 주문서 조회 및 특정 상태의 주문서 조회 / 주문서 수정 / 주문서 삭제 / 주문서 주문\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            공급업체 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 등록 : 새로운 공급업체 정보 입력 및 등록\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 조회 : 모든 공급업체 정보 조회\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 수정 : 선택한 공급업체 정보 수정\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        공급업체 삭제 : 선택한 공급업체 정보 삭제\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            사용자 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        사용자 목록 : 현재 쇼핑몰의 관리자 정보 조회\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            재고 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        재고 확인 및 수정 : 현재 쇼핑몰의 상품 재고 리스트 조회 및 수정\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        반품 품목 확인 : 반품 처리된 상품들의 리스트 조회\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        납품 품목 확인 : 납품 처리된 상품들의 리스트 조회\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                    <Stack\n                        direction=\"row\"\n                        sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ ml : 10}}>\n                            상품 관리\n                        </Typography>\n                    </Stack>\n                    <Divider textAlign=\"left\"sx={{ width: 600 , ml : 10}} >기능</Divider>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 등록 : 새로운 상품 정보 입력 및 등록\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 조회 : 모든 상품 정보 조회\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 수정 : 선택한 상품 정보 수정\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ ml : 10}}>\n                        상품 삭제 : 선택한 상품 정보 삭제\n                    </Typography>\n                </Box>\n                <Divider />\n            </Card>\n            <Card variant=\"outlined\" sx={{ maxWidth: 1550 }}>\n                <Box sx={{ p: 2 }}>\n                        <Typography sx={{ ml : 10}}>주문서는 수요일 밤 12:00 에 갱신</Typography>\n                        <Typography sx={{ ml : 10}}>수요예측시 현재 상품의 재고를 입력값으로 사용</Typography>\n\n                    </Box>\n            </Card>\n        </div>\n    );\n}","\nimport React, { useState , useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { MainListItems } from './listItems';\nimport { Routes, Route } from 'react-router-dom';\nimport ListComponent from '../Manager/ListComponent';\n//import ListComponent from '../Order/ListComponent';\nimport ReadComponent from '../Manager/ReadComponent';\nimport useCustomMove from '../../hooks/useCustomMove';\nimport { Outlet } from 'react-router-dom';\n\n\nimport Deposits from './Deposits';\nimport Avatar from '@mui/material/Avatar';\nimport ManagerRead from '../Manager/ReadPage';\nimport ManagerList from '../Manager/ListPage';\nimport AddPage from '../Manager/AddPage'; // AddPage 컴포넌트를 import 합니다.\nimport SupplierListPage from '../Manager/ListPage';\nimport UserListPage from '../User/ListPage';\nimport OrderListPage from '../Order/ListPage';\nimport ProductListPage from '../Product/ListPage';\nimport Explain from './Explain';\nimport axios from \"axios\"; // ListPage 컴포넌트를 import 합니다.\n\n\nfunction Copyright(props) {\n  return (\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://mui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n  );\n}\n\n\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      '& .MuiDrawer-paper': {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        boxSizing: 'border-box',\n        ...(!open && {\n          overflowX: 'hidden',\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n          width: theme.spacing(7),\n          [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n          },\n        }),\n      },\n      '& .MuiDrawer-paper > .admin-profile': { // 추가된 스타일\n        display: open ? 'block' : 'none',\n      },\n      '& .MuiDrawer-paper > *': {\n        overflowX: 'visible',\n      },\n    }),\n);\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n    // 현재 페이지를 나타내주는 변수 0 : 기본 / 1 : 주문서 관리 / 2:\n    const [statePage, setStatePage] = useState(0);\n\n\n\n    const [user, setUser] = useState(null);\n  const [open, setOpen] = React.useState(true);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const { moveToRead } = useCustomMove(); // useCustomMove 훅에서 moveToRead 함수를 가져옵니다.\n  const handleRowClick = (userId) => {\n    moveToRead(userId); // moveToRead 함수를 호출합니다.\n    console.log(selectedUserId);\n  };\n  const { userId } = useParams();\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n    {/*현재 로그인한 관리자 정보*/}\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const response = await axios.get('http://localhost:8080/api/user/current-user', {\n                    withCredentials: true // 세션 쿠키 전달을 위한 설정\n                });\n                console.log(response.data); // 확인용 로그\n                setUser(response.data);\n            } catch (error) {\n                console.error(\"사용자 정보 가져오기 오류:\", error);\n            }\n        };\n\n        fetchUser();\n    }, []);\n\n  {/* 알림 설정 */}\n  const [alarmOpen, setAlarmOpen] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws');\n    const stompClient = Stomp.over(socket);\n\n    stompClient.connect({}, function (frame) {\n      console.log('Connected: ' + frame);\n\n      stompClient.subscribe('/topic/notifications', function (message) {\n        console.log('Received message:', message.body);\n        setNotificationCount(prevCount => prevCount + 1);\n        setMessages(prevMessages => [...prevMessages, message.body]); // 메시지 저장\n      });\n    });\n\n    return () => {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n\n  const handleAlarmOpen = () => {\n    setAlarmOpen(true);\n  };\n\n  const handleAlarmClose = () => {\n    setAlarmOpen(false);\n    setNotificationCount(0); // 알림 확인 시 카운트 초기화\n    setMessages([]); // 메시지 초기화 (원하는 경우)\n  };\n\n\n  {/**/}\n  return (\n      <>\n\n\n        <ThemeProvider theme={defaultTheme}>\n          <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" open={open}>\n              <Toolbar\n                  sx={{\n                    pr: '24px', // keep right padding when drawer closed\n                  }}\n              >\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={toggleDrawer}\n                    sx={{\n                      marginRight: '36px',\n                      ...(open && { display: 'none' }),\n                    }}\n                >\n                  <MenuIcon />\n                </IconButton>\n                  <Typography\n                      component=\"h1\"\n                      variant=\"h6\"\n                      color=\"inherit\"\n                      noWrap\n                      sx={{ flexGrow: 1, cursor: 'pointer' }} // 클릭 커서 스타일 추가\n                      onClick={() => setStatePage(0)} // 클릭 이벤트 핸들러 추가\n                  >\n                      Dashboard\n                  </Typography>\n                {/*주문서 생성 알림*/}\n                <IconButton color=\"inherit\" onClick={handleAlarmOpen}>\n                  <Badge badgeContent={notificationCount} color=\"secondary\">\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n                <Dialog\n                    open={alarmOpen}\n                    onClose={handleAlarmClose}\n                    PaperProps={{\n                      style: {\n                        position: 'absolute',\n                        top: '20px', // 버튼 바로 아래 위치 조정\n                        right: '1px', // 오른쪽 위치 조정\n                        transform: 'translateX(0)', // 기본 위치\n                      },\n                    }}\n                    BackdropProps={{ invisible: true }} // 배경 어두운 효과 끄기\n                >\n                  <DialogTitle>알림</DialogTitle>\n                  <DialogContent>\n                    {messages.length === 0 ? (\n                        <Typography>현재 알림이 없습니다.</Typography>\n                    ) : (\n                        messages.map((msg, index) => (\n                            <Typography key={index}>{msg}</Typography>\n                        ))\n                    )}\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleAlarmClose}>닫기</Button>\n                  </DialogActions>\n                </Dialog>\n                {/**/}\n              </Toolbar>\n            </AppBar>\n            <Drawer variant=\"permanent\" open={open}>\n              <Toolbar\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    px: [1],\n                  }}\n              >\n              </Toolbar>\n              <Divider />\n              <List component=\"nav\">\n                  {/*관리자 메뉴*/}\n                  <MainListItems user={user} statePage={statePage} setStatePage={setStatePage} />\n                <Divider sx={{ my: 1 }} />\n              </List>\n            </Drawer>\n            <Box\n                component=\"main\"\n                sx={{\n                  backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                          ? theme.palette.grey[100]\n                          : theme.palette.grey[900],\n                  flexGrow: 1,\n                  height: '100vh',\n                  overflow: 'auto',\n                }}\n            >\n              <Toolbar />\n              <Container maxWidth=\"lg\" sx={{ ml:4, mt: 4, mb: 4 }}>\n                      {/*서브메뉴 클릭시 변경되는 페이지*/}\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column',height : 'flex' , width: 1550 }}>\n                        {/*statePage가 변경될때마다 구성내용 변경*/}\n                        {statePage === 1 ? (\n                            <OrderListPage/> // statePage가 1일 때\n                        ) : statePage === 2 ? (\n                            <SupplierListPage/> // statePage가 2일 때\n                        )  : statePage === 3 ? (\n                            <UserListPage/> // statePage가 3일 때\n                        ) : statePage === 5 ? (\n                           <ProductListPage/> // statePage가 4일 때\n                        ) : ( // statePage가 0일 때\n                            <Explain/>\n                  )}\n\n              </Paper>\n                {/*\n                      <Routes>\n                        <Route path=\"/add\" element={<AddPage />} />\n                        <Route path=\"/list\" element={<OrderListPage />} />\n                        <Route path=\"*\" element={<Outlet />} />\n                      </Routes>\n                      */}\n                <Copyright sx={{ pt: 4 }} />\n              </Container>\n            </Box>\n          </Box>\n        </ThemeProvider>\n      </>\n  );\n}","import React from 'react';\nimport { Box, Button } from '@mui/material';\n\nconst PageComponent = ({serverData, movePage}) => {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\n      {serverData.prev ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\n          Prev\n        </Button> : null}\n      {serverData.pageNumList.map(pageNum =>\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\n          {pageNum}\n        </Button>\n      )}\n      {serverData.next ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\n          Next\n        </Button> : null}\n    </Box>\n  );\n}\n\nexport default PageComponent;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\n\nconst ResultModal = ({ title, content, callbackFn }) => {\n  return (\n    <Dialog\n      open={true}\n      onClose={callbackFn}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"h4\" component=\"div\">\n          {content}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\n          Close Modal\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ResultModal;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n       navigate({pathname: '/list', search: queryStr});\n      }\n\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n     const moveToDashboard = () => {\n         navigate('/dashboard');\n       };\n\n\n     return {moveToList, moveToModify, moveToDashboard, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","id","orderObj","order","orderedProducts","totalPrice","orderType","pageRequestDTO","total","productObj","product","initState","mname","mtel","memail","uadr","AddComponent","setManager","useState","result","setResult","moveToList","moveToDashboard","useCustomMove","handleChangeManager","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","onChange","inputProps","pattern","helperText","Button","onClick","handleClickAdd","then","catch","console","error","_ref","open","onClose","Dialog","Typography","component","gutterBottom","dtoList","pageNumList","prev","next","totoalCount","prevPage","nextPage","totalPage","current","ListComponent","selectedUserId","setSelectedUserId","setOpen","moveToRead","refresh","serverData","setServerData","managers","setManagers","openModal","setOpenModal","useNavigate","useEffect","handleClose","className","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","map","handleRowClick","scope","colSpan","PageComponent","movePage","maxWidth","fullWidth","PaperProps","style","height","DialogTitle","DialogContent","ReadComponent","mt","display","justifyContent","position","bottom","left","transform","color","ml","Modal","handleModalClose","alignItems","backgroundColor","marginTop","ModifyPage","log","alert","supplierDelete","ListPage","queryParams","useSearchParams","handleOpen","AddPage","complete","moveList","moveRead","disabled","select","SelectProps","native","handleClickDelete","handleClickModify","textAlign","padding","boxSizing","ModifyComponent","mName","mEmail","mProfileImage","uAdr","p","Grid","container","spacing","item","xs","fontWeight","Divider","width","my","fontSize","ReadPage","useParams","onRowClick","setOrderType","selectedId","setSelectedId","setOrder","cursor","index","totalAmount","handleCloseModal","top","overflow","bgcolor","gap","FormControl","InputLabel","Select","event","MenuProps","borderColor","MenuItem","mr","Link","to","supplier","setSupplier","moveToModify","response","supplierResponse","fetchOrderDetails","Array","isArray","Date","toLocaleString","border","marginLeft","imageBase64","itemImage","btoa","String","fromCharCode","Uint8Array","price","amount","marginBottom","src","alt","marginRight","margin","itemType","orderComplete","orderDelete","flexDirection","elevation","mb","orderAssign","DialogContentText","DialogActions","handleDelete","autoFocus","item_type","setProduct","handleChangeProduct","MainListItems","user","statePage","setStatePage","openOrder","setOpenOrder","React","openSupplier","setOpenSupplier","openUser","setOpenUser","openInventory","setOpenInventory","openProduct","setOpenProduct","ListItemButton","ListItemAvatar","Avatar","borderRadius","ListItemText","primary","cname","handleClickOrder","ListItemIcon","DashboardIcon","handleClickSupplier","ShoppingCartIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","pl","handleClickUser","PeopleIcon","handleClickInventory","Inventory","handleClickProduct","Store","selecteduserId","setSelecteduserId","setUser","cgender","cid","ctel","cemail","cadr","ProductmoveToRead","products","setProducts","productDelete","Explain","Card","Stack","direction","Copyright","props","href","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","_ref2","whiteSpace","overflowX","breakpoints","up","defaultTheme","createTheme","Dashboard","withCredentials","fetchUser","alarmOpen","setAlarmOpen","notificationCount","setNotificationCount","messages","setMessages","socket","SockJS","stompClient","Stomp","over","connect","frame","subscribe","message","body","prevCount","prevMessages","disconnect","handleAlarmClose","ThemeProvider","CssBaseline","Toolbar","pr","IconButton","edge","toggleDrawer","MenuIcon","noWrap","flexGrow","handleAlarmOpen","Badge","badgeContent","NotificationsIcon","right","BackdropProps","invisible","msg","px","palette","mode","grey","Container","OrderListPage","SupplierListPage","UserListPage","ProductListPage","pt","pageNum","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num"],"sourceRoot":""}