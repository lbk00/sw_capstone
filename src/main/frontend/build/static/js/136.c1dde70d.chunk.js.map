{"version":3,"file":"static/js/136.c1dde70d.chunk.js","mappings":"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","sources":["api/ManagerApi.js","api/OrderApi.js","components/Manager/AddComponent.js","components/Manager/AddPage.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ReadComponent.js","components/Manager/ReadPage.js","components/Order/ListComponent.js","components/Order/ListPage.js","components/Order/ReadComponent.js","components/Order/ReadPage.js","components/adminpage/listItems.js","components/adminpage/Title.js","components/adminpage/Deposits.js","components/adminpage/Dashboard.js","components/common/PageComponent.js","components/common/ResultModal.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\n\n export const API_SERVER_HOST = 'http://localhost:8080'\n const prefix = `${API_SERVER_HOST}/api/manager`\n export const getOne = async (userId) => {\n  const res = await axios.get(`${prefix}/${userId}` )\n  return res.data\n  }\nexport const getList = async ( pageParam ) => {\n const {page,size} = pageParam\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\n return res.data\n }\n\nexport const postAdd = async (managerObj) => {\n const res = await axios.post(`${prefix}/` , managerObj)\n return res.data\n }\n\nexport const deleteOne = async (userId) => {\n\n  const res = await axios.delete(`${prefix}/${userId}` )\n\n  return res.data\n\n}\n\nexport const putOne = async (manager) => {\n\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\n\n  return res.data\n}\n\n\n","import axios from \"axios\"\n\n\nexport const API_SERVER_HOST = 'http://localhost:8080'\nconst prefix = `${API_SERVER_HOST}/api/orders`\n\nexport const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const getList = async (pageParam) => {\n  const {page, size} = pageParam\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\n  return res.data\n}\n\nexport const postAdd = async (orderObj) => {\n  const res = await axios.post(`${prefix}/`, orderObj)\n  return res.data\n}\n\nexport const deleteOne = async (id) => {\n  const res = await axios.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const putOne = async (order) => {\n  const res = await axios.put(`${prefix}/${order.id}`, {\n    id: order.id,\n    orderedProducts: order.orderedProducts,\n    totalPrice: order.totalPrice,\n    orderType: order.orderType,\n    pageRequestDTO: order.pageRequestDTO,\n    total: order.total\n  })\n  return res.data\n}","import React, { useState } from \"react\";\nimport { postAdd } from \"../../api/ManagerApi\";\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport { TextField, Button, Box } from '@mui/material';\n\nconst initState = {\n  mname: '',\n  mgender: '',\n  mid: '',\n  mpw: '',\n  mtel: '',\n  memail: '',\n  mbirthDate: '',\n  uadr: '',\n\n\n}\n\nconst AddComponent = () => {\n\n  const [manager, setManager] = useState({...initState})\n  const [result, setResult] = useState(null)\n  const {moveToList} = useCustomMove()\n\n  const handleChangeManager = (e) => {\n    manager[e.target.name] = e.target.value\n    setManager({...manager})\n  }\n\n  const handleClickAdd = () => {\n    postAdd(manager)\n      .then(result => {\n        let date = new Date(result.mbirthDate);\n        console.log(date.toISOString());\n        setResult(result.userId)\n        setManager({...initState})\n      }).catch(e => { console.error(e) })\n  }\n\n  const closeModal = () => {\n    setResult(null)\n    moveToList()\n  }\n\n  return (\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\n      {result ? <ResultModal title={'Add Result'} content={`New ${result} Added`} callbackFn={closeModal}/>: <></>}\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        name=\"mname\"\n        value={manager.mname}\n        onChange={handleChangeManager}\n      />\n      <TextField\n        label=\"ID\"\n        variant=\"outlined\"\n        name=\"mid\"\n        value={manager.mid}\n        onChange={handleChangeManager}\n      />\n      <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              name=\"mpw\"\n              value={manager.mpw}\n              onChange={handleChangeManager}\n            />\n      <TextField\n              label=\"Gender\"\n              variant=\"outlined\"\n              name=\"mgender\"\n              value={manager.mgender}\n              onChange={handleChangeManager}\n            />\n      <TextField\n              label=\"Phone Number\"\n              variant=\"outlined\"\n              name=\"mtel\"\n              value={manager.mtel}\n              onChange={handleChangeManager}\n              inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\n              helperText=\"Format: 123-4567-8901\"\n            />\n      <TextField\n              label=\"Birth Date\"\n              variant=\"outlined\"\n              name=\"mbirthDate\"\n              value={manager.mbirthDate}\n              onChange={handleChangeManager}\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n      <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              name=\"memail\"\n              value={manager.memail}\n              onChange={handleChangeManager}\n              inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\n              helperText=\"Format: example@example.com\"\n            />\n      <TextField\n              label=\"Address\"\n              variant=\"outlined\"\n              name=\"uadr\"\n              value={manager.uadr}\n              onChange={handleChangeManager}\n              inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\n              helperText=\"Format: Street, City, State, Country\"\n            />\n      <Button variant=\"contained\" onClick={handleClickAdd}>\n        ADD\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddComponent;\n","import React from 'react';\nimport AddComponent from './AddComponent';\nimport { Container, Typography } from '@mui/material';\n\nconst AddPage = () => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        Manager Add Page\n      </Typography>\n      <AddComponent />\n    </Container>\n  );\n}\nexport default AddPage;","import { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\nimport { getList, getOne } from \"../../api/ManagerApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { useNavigate } from 'react-router-dom';\nimport PageComponent from \"../common/PageComponent\";\n\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = ({ onRowClick }) => {\n  console.log(onRowClick);\n  const [selectedUserId, setSelectedUserId] = useState(null); // setSelectedUserId 함수 정의\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove()\n  const [serverData, setServerData] = useState(initState)\n  const [managers, setManagers] = useState([]); // managers state\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getList({page,size}).then(data => {\n      console.log(data)\n      setServerData(data)\n      setManagers(data.dtoList) // setManagers function\n      console.log(data.dtoList)\n    })\n    .catch(error => {\n      console.error('Error fetching data: ', error);\n      setManagers([]); // API 호출 실패 시 managers를 빈 배열로 설정\n    });\n  }, [page,size, refresh]);\n  return (\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>userId</TableCell>\n                <TableCell align=\"right\">이름</TableCell>\n                <TableCell align=\"right\">성별</TableCell>\n                <TableCell align=\"right\">ID</TableCell>\n                <TableCell align=\"right\">PW</TableCell>\n                <TableCell align=\"right\">생년월일</TableCell>\n                <TableCell align=\"right\">전화번호</TableCell>\n                <TableCell align=\"right\">이메일</TableCell>\n                <TableCell align=\"right\">주소</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {managers.length > 0 ? managers.map(manager =>\n                <TableRow key={manager.userId} onClick={() => {\n                      console.log(`Row clicked with userId: ${manager.userId}`); // 로깅하여 확인\n                      onRowClick(manager.userId);\n                      }}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {manager.userId}\n                  </TableCell>\n                  <TableCell align=\"right\">{manager.mname}</TableCell>\n                  <TableCell align=\"right\">{manager.mgender}</TableCell>\n                  <TableCell align=\"right\">{manager.mid}</TableCell>\n                  <TableCell align=\"right\">{manager.mpw}</TableCell>\n                  <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\n                  <TableCell align=\"right\">{manager.mtel}</TableCell>\n                  <TableCell align=\"right\">{manager.memail}</TableCell>\n                  <TableCell align=\"right\">{manager.uadr}</TableCell>\n                </TableRow>\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\n    </div>\n  );\n}\n\nexport default ListComponent;","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\n\n\n\n  const ListPage = () => {\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       Manager List Page Component\n     </div>\n     <ListComponent/>\n\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState,} from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/ManagerApi\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\n\nconst initState = {\n    userId: 0,\n    mID: '',\n    mPW: '',\n    mName: '',\n    mGender: '',\n    mbirthDate: '',\n    mtel: '',\n    mEmail: '',\n    mProfileImage: '',\n    uAdr: '',\n}\n\nfunction ReadComponent({ userId }) {\n\n\n    const [manager, setManager] = useState(initState);\n\n    const {moveToList, moveToModify} = useCustomMove();\n\n    useEffect(() => {\n      getOne(userId)\n        .then(data => {\n          console.log(data); // API로부터 받아온 데이터를 콘솔에 출력\n          setManager(data);\n        })\n        .catch(error => {\n          console.error('Error fetching data: ', error); // API 호출에 실패했을 때 에러 메시지를 출력\n        });\n    }, [userId]);\n\n    return(\n        <>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>userId</TableCell>\n                            <TableCell align=\"right\">이름</TableCell>\n                            <TableCell align=\"right\">성별</TableCell>\n                            <TableCell align=\"right\">ID</TableCell>\n                            <TableCell align=\"right\">PW</TableCell>\n                            <TableCell align=\"right\">생년월일</TableCell>\n                            <TableCell align=\"right\">전화번호</TableCell>\n                            <TableCell align=\"right\">이메일</TableCell>\n                            <TableCell align=\"right\">주소</TableCell>\n\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {manager.userId}\n                            </TableCell>\n                            <TableCell align=\"right\">{manager.mname}</TableCell>\n                            <TableCell align=\"right\">{manager.mgender}</TableCell>\n                            <TableCell align=\"right\">{manager.mid}</TableCell>\n                            <TableCell align=\"right\">{manager.mpw}</TableCell>\n                            <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\n                            <TableCell align=\"right\">{manager.mtel}</TableCell>\n                            <TableCell align=\"right\">{manager.memail}</TableCell>\n                            <TableCell align=\"right\">{manager.uadr}</TableCell>\n\n\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n            <div className=\"flex justify-end p-4\">\n              <button type=\"button\"\n                           className=\"rounded p-4 text-xl w-32 text-white bg-blue-500\"\n                           onClick={() => moveToList()}>\n                    list\n                    </button>\n            </div>\n\n            <div className=\"flex justify-end p-4\">\n              <button type=\"button\"\n                    className=\"rounded p-4 text-xl w-32 text-white bg-red-500\"\n                    onClick={() => moveToModify(manager.userId)}>\n              Modify\n              </button>\n            </div>\n        </>\n    );\n}\n\nconst makeDiv = (title, value) =>\n  <div className=\"flex justify-center\">\n    <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\n      <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\n        <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\n          {value}\n        </div>\n      </div>\n    </div>\n\nexport default ReadComponent;","import { useCallback } from \"react\";\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\n\nconst ReadPage = () => {\n\n      const {userId} = useParams()\n\n      return (\n       <div className=\"font-extrabold w-full bg-white mt-6\">\n       <div className=\"text-2xl \"> Manager Read Page Component {userId} </div>\n        <ReadComponent userId={userId}></ReadComponent>\n       </div>\n      );\n}\nexport default ReadPage;","import { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\nimport { getList, getOne } from \"../../api/OrderApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { useNavigate } from 'react-router-dom';\nimport PageComponent from \"../common/PageComponent\";\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport ReadPage from './ReadPage';\n\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = ({ onRowClick }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove()\n  const [serverData, setServerData] = useState(initState)\n  const [order, setOrder] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const handleRowClick = (order) => {\n        setSelectedId(order.id);\n        setOpenModal(true);\n      };\n\n  const handleCloseModal = () => {\n          setOpenModal(false);\n      };\n\n  useEffect(() => {\n    getList({page,size}).then(data => {\n      console.log(data)\n      setServerData(data)\n      setOrder(data.dtoList) // setOrder function\n      console.log(data.dtoList)\n    })\n    .catch(error => {\n      console.error('Error fetching data: ', error);\n      setOrder([]); // API 호출 실패 시 order를 빈 배열로 설정\n    });\n  }, [page,size, refresh]);\n  return (\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>id</TableCell>\n                <TableCell align=\"right\">주문 ID</TableCell>\n                <TableCell align=\"right\">주문종류</TableCell>\n                <TableCell align=\"right\">주문한 상품</TableCell>\n                <TableCell align=\"right\">총수량</TableCell>\n                <TableCell align=\"right\">총가격</TableCell>\n\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {order.length > 0 ? order.map(order =>\n                <TableRow\n                  key={order.id}\n                  onClick={() => {\n                    handleRowClick(order);\n                    console.log(`Row clicked with id: ${order.id}`); // 로깅하여 확인\n                    onRowClick(order.id);\n                  }}\n                  style={{ cursor: 'pointer' }}\n                >\n\n                  <TableCell component=\"th\" scope=\"row\">\n                    {order.id}\n                  </TableCell>\n                  <TableCell align=\"right\">{order.id}</TableCell>\n                  <TableCell align=\"right\">{order.orderType}</TableCell>\n                  <TableCell align=\"right\">\n                    {order.orderedProducts.map((product, index) => (\n                      <p key={index}>{product.name}</p>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"right\">{order.totalAmount}</TableCell>\n                  <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                </TableRow>\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <PageComponent serverData={serverData} movePage={moveToList} setOrder={setOrder}></PageComponent>\n      <Modal\n        open={openModal}\n        onClose={handleCloseModal}\n      >\n        <Box sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '80vw',\n          height: '80vh',\n          overflow: 'auto',\n          bgcolor: 'background.paper',\n        }}>\n          {selectedId && <ReadPage id={selectedId} />}\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ListComponent;","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\n\n\n\n  const ListPage = () => {\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n    const handleRowClick = (id) => {\n        console.log(`Row with id ${id} was clicked`);\n        // 여기에 행 클릭 시 수행할 작업을 추가합니다.\n      };\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       Order List Page Component\n     </div>\n     <ListComponent onRowClick={handleRowClick} />\n\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/OrderApi\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\nimport * as OrderApi from '../../api/OrderApi.js';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport axios from 'axios';\n\nconst initState = {\n    id: 0,\n    orderedProducts: '',\n    totalPrice: '',\n    orderType: '',\n    supplier: '',\n}\n\nfunction ReadComponent({ id }) {\n\n    const [order, setOrder] = useState(initState);\n    const [openModal, setOpenModal] = useState(false);\n    const {moveToList, moveToModify} = useCustomMove();\n\n\n    const handleOpenModal = () => {\n        setOpenModal(true);\n      };\n\n      const handleCloseModal = () => {\n        setOpenModal(false);\n      };\n\n    useEffect(() => {\n        // API에서 주문서 정보를 가져오는 함수\n        const fetchOrderDetails = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\n            } catch (error) {\n                console.error('Error fetching the order details:', error);\n            }\n        };\n\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\n    }, [id]);\n\n\n    return(\n        <>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Order ID</TableCell>\n                            <TableCell align=\"right\">주문종류</TableCell>\n                            <TableCell align=\"right\">주문한 상품</TableCell>\n                            <TableCell align=\"right\">총수량</TableCell>\n                            <TableCell align=\"right\">총가격</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        <TableRow>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {order.id} {/* 주문 ID */}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {order.orderType} {/* 주문 종류 */}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {Array.isArray(order.orderedProducts) ? order.orderedProducts.map((product, index) => (\n                              <p key={index}>{product.name}</p>\n                            )) : 'No products'}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {order.totalAmount} {/* 총 수량 */}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {order.totalPrice} {/* 총 가격 */}\n                          </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n        </>\n\n    );\n}\n\nexport default ReadComponent;","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\nimport { Typography, Paper, Box, Modal, Button } from '@mui/material';\nimport axios from 'axios';\n\n\n\n\nconst ReadPage = ({ id }) => {\n  //const { id } = useParams(); // URL 파라미터에서 주문서의 ID를 가져옵니다.\n  const [open, setOpen] = useState(false); // 모달창의 상태를 관리하는 상태를 생성합니다.\n\n    const handleOpen = () => setOpen(true); // 모달창을 열기 위한 함수를 생성합니다.\n    const handleClose = () => setOpen(false); // 모달창을 닫기 위한 함수를 생성합니다.\n    const order = async (id) => {\n        try {\n          await axios.get(`http://localhost:8080/api/orders/order/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\n          alert('주문이 완료되었습니다.');\n        } catch (error) {\n          console.error('주문 중 오류가 발생했습니다:', error);\n        }\n      };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\n        Order Receipt\n      </Typography>\n      <Paper elevation={3} sx={{ p: 2, width: '80%', mt: 2 }}>\n        <ReadComponent id={id} /> {/* 주문서의 ID를 ReadComponent 컴포넌트에 prop으로 전달합니다. */}\n      </Paper>\n      <Box mt={2}> {/* 주문하기 버튼에 상단 마진을 추가합니다. */}\n              <Button variant=\"contained\" color=\"primary\" onClick={() => order(id)}>\n                    주문하기\n                  </Button>\n              </Box>\n    </Box>\n  );\n}\n\nexport default ReadPage;","import React, { useState } from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport PeopleIcon from '@mui/icons-material/People';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport LayersIcon from '@mui/icons-material/Layers';\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport Inventory from '@mui/icons-material/Inventory'; // Added this line\nimport Store from '@mui/icons-material/Store'; // Added this line\nimport { Link } from 'react-router-dom';\nimport Modal from '@mui/material/Modal';\nimport ListPage from '../Order/ListPage';\nimport Button from '@mui/material/Button';\n\n\nexport const MainListItems = ({ user }) => {\n  const [openOrder, setOpenOrder] = React.useState(false);\n  const [openSupplier, setOpenSupplier] = React.useState(false);\n  const [openUser, setOpenUser] = React.useState(false);\n  const [openInventory, setOpenInventory] = React.useState(false);\n  const [openProduct, setOpenProduct] = React.useState(false);\n\n\n  const handleClickOrder = () => {\n    setOpenOrder(!openOrder);\n  };\n\n  const handleClickSupplier = () => {\n    setOpenSupplier(!openSupplier);\n  };\n\n  const handleClickUser = () => {\n      setOpenUser(!openUser);\n  };\n\n  const handleClickInventory = () => {\n        setOpenInventory(!openInventory);\n  };\n\n  const handleClickProduct = () => {\n        setOpenProduct(!openProduct);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <React.Fragment>\n      <ListItemButton sx={{ justifyContent: 'flex-start', marginLeft: 5 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, marginBottom: 5 }}>\n          <ListItemAvatar>\n            <Avatar\n              alt=\"Admin Name\"\n              src=\"/sample/sample1.jpg\"\n              sx={{ borderRadius: '50%', width: 100, height: 100 }} // 크기를 조절\n            />\n          </ListItemAvatar>\n            <ListItemText primary={user?.cname || \"Unknown\"} />\n        </Box>\n      </ListItemButton>\n      <Divider />\n\n      <ListItemButton onClick={handleOpen}>\n      <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n        <ListItemText primary=\"주문서 관리\" />\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <Box sx={{\n                p: 4,\n                width: '80vw',\n                height: '80vh',\n                overflow: 'auto',\n                backgroundColor: 'white',\n                position: 'absolute', // Add position here\n                top: '50%', // Add top here\n                left: '50%', // Add left here\n                transform: 'translate(-50%, -50%)' // Add transform here\n            }}>\n              <ListPage />\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Button variant=\"contained\" component={Link} to=\"/order/add\">주문서 등록</Button>\n                <Button variant=\"contained\" component={Link} to=\"/order/modify\">주문서 수정</Button>\n                <Button variant=\"contained\">주문서 삭제</Button>\n              </Box>\n            </Box>\n          </Modal>\n      </ListItemButton>\n\n      <ListItemButton onClick={handleClickSupplier}>\n        <ListItemIcon>\n          <ShoppingCartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"공급업체 관리\" />\n        {openSupplier ? <ExpandLess /> : <ExpandMore />}\n      </ListItemButton>\n      <Collapse in={openSupplier} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 등록\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 조회\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 수정\" />\n          </ListItemButton>\n          <ListItemButton sx={{ pl: 4 }}>\n            <ListItemText primary=\"공급업체 삭제\" />\n          </ListItemButton>\n        </List>\n      </Collapse>\n\n      <ListItemButton onClick={handleClickUser}>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"사용자 관리\" />\n              {openUser ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openUser} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/manager/list\">\n                  <ListItemText primary=\"사용자 목록\" />\n                </ListItemButton>\n\n\n              </List>\n            </Collapse>\n\n      <ListItemButton onClick={handleClickInventory}>\n              <ListItemIcon>\n                <Inventory />\n              </ListItemIcon>\n              <ListItemText primary=\"재고 관리\" />\n              {openInventory ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={openInventory} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"재고 확인 및 수정\" />\n                </ListItemButton>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"반품 품목 확인\" />\n                </ListItemButton>\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary=\"납품 품목 확인\" />\n                </ListItemButton>\n\n              </List>\n            </Collapse>\n\n      <ListItemButton onClick={handleClickProduct}>\n                    <ListItemIcon>\n                      <Store />\n                    </ListItemIcon>\n                    <ListItemText primary=\"상품 관리\" />\n                    {openProduct ? <ExpandLess /> : <ExpandMore />}\n                  </ListItemButton>\n                  <Collapse in={openProduct} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 등록\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 조회\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 수정\" />\n                      </ListItemButton>\n                      <ListItemButton sx={{ pl: 4 }}>\n                        <ListItemText primary=\"상품 삭제\" />\n                      </ListItemButton>\n                    </List>\n                  </Collapse>\n    </React.Fragment>\n  );\n};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;","import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nexport default function Deposits() {\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","\nimport React, { useState , useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { MainListItems } from './listItems';\nimport { Routes, Route } from 'react-router-dom';\nimport ListComponent from '../Manager/ListComponent';\nimport ReadComponent from '../Manager/ReadComponent';\nimport useCustomMove from '../../hooks/useCustomMove';\nimport { Outlet } from 'react-router-dom';\n\n\nimport Deposits from './Deposits';\nimport Avatar from '@mui/material/Avatar';\nimport ManagerRead from '../Manager/ReadPage';\nimport ManagerList from '../Manager/ListPage';\nimport AddPage from '../Manager/AddPage'; // AddPage 컴포넌트를 import 합니다.\nimport ListPage from '../Manager/ListPage';\nimport axios from \"axios\"; // ListPage 컴포넌트를 import 합니다.\n\n\nfunction Copyright(props) {\n  return (\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://mui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n  );\n}\n\n\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      '& .MuiDrawer-paper': {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        boxSizing: 'border-box',\n        ...(!open && {\n          overflowX: 'hidden',\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n          width: theme.spacing(7),\n          [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n          },\n        }),\n      },\n      '& .MuiDrawer-paper > .admin-profile': { // 추가된 스타일\n        display: open ? 'block' : 'none',\n      },\n      '& .MuiDrawer-paper > *': {\n        overflowX: 'visible',\n      },\n    }),\n);\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nexport default function Dashboard() {\n    const [user, setUser] = useState(null);\n  const [open, setOpen] = React.useState(true);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const { moveToRead } = useCustomMove(); // useCustomMove 훅에서 moveToRead 함수를 가져옵니다.\n  const handleRowClick = (userId) => {\n    moveToRead(userId); // moveToRead 함수를 호출합니다.\n    console.log(selectedUserId);\n  };\n  const { userId } = useParams();\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n    {/*현재 로그인한 관리자 정보*/}\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const response = await axios.get('http://localhost:8080/api/user/current-user', {\n                    withCredentials: true // 세션 쿠키 전달을 위한 설정\n                });\n                console.log(response.data); // 확인용 로그\n                setUser(response.data);\n            } catch (error) {\n                console.error(\"사용자 정보 가져오기 오류:\", error);\n            }\n        };\n\n        fetchUser();\n    }, []);\n\n  {/* 알림 설정 */}\n  const [alarmOpen, setAlarmOpen] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws');\n    const stompClient = Stomp.over(socket);\n\n    stompClient.connect({}, function (frame) {\n      console.log('Connected: ' + frame);\n\n      stompClient.subscribe('/topic/notifications', function (message) {\n        console.log('Received message:', message.body);\n        setNotificationCount(prevCount => prevCount + 1);\n        setMessages(prevMessages => [...prevMessages, message.body]); // 메시지 저장\n      });\n    });\n\n    return () => {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n\n  const handleAlarmOpen = () => {\n    setAlarmOpen(true);\n  };\n\n  const handleAlarmClose = () => {\n    setAlarmOpen(false);\n    setNotificationCount(0); // 알림 확인 시 카운트 초기화\n    setMessages([]); // 메시지 초기화 (원하는 경우)\n  };\n\n\n  {/**/}\n  return (\n      <>\n\n\n        <ThemeProvider theme={defaultTheme}>\n          <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" open={open}>\n              <Toolbar\n                  sx={{\n                    pr: '24px', // keep right padding when drawer closed\n                  }}\n              >\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={toggleDrawer}\n                    sx={{\n                      marginRight: '36px',\n                      ...(open && { display: 'none' }),\n                    }}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    noWrap\n                    sx={{ flexGrow: 1 }}\n                >\n                  Dashboard\n                </Typography>\n                {/*주문서 생성 알림*/}\n                <IconButton color=\"inherit\" onClick={handleAlarmOpen}>\n                  <Badge badgeContent={notificationCount} color=\"secondary\">\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n                <Dialog\n                    open={alarmOpen}\n                    onClose={handleAlarmClose}\n                    PaperProps={{\n                      style: {\n                        position: 'absolute',\n                        top: '20px', // 버튼 바로 아래 위치 조정\n                        right: '1px', // 오른쪽 위치 조정\n                        transform: 'translateX(0)', // 기본 위치\n                      },\n                    }}\n                    BackdropProps={{ invisible: true }} // 배경 어두운 효과 끄기\n                >\n                  <DialogTitle>알림</DialogTitle>\n                  <DialogContent>\n                    {messages.length === 0 ? (\n                        <Typography>현재 알림이 없습니다.</Typography>\n                    ) : (\n                        messages.map((msg, index) => (\n                            <Typography key={index}>{msg}</Typography>\n                        ))\n                    )}\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleAlarmClose}>닫기</Button>\n                  </DialogActions>\n                </Dialog>\n                {/**/}\n              </Toolbar>\n            </AppBar>\n            <Drawer variant=\"permanent\" open={open}>\n              <Toolbar\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    px: [1],\n                  }}\n              >\n                {/* 관리자 프로필 사진 */}\n                <Avatar className=\"admin-profile\" src=\"/path/to/admin/profile.jpg\" />\n                <IconButton onClick={toggleDrawer}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </Toolbar>\n              <Divider />\n              <List component=\"nav\">\n                  <MainListItems user={user} />\n                <Divider sx={{ my: 1 }} />\n              </List>\n            </Drawer>\n            <Box\n                component=\"main\"\n                sx={{\n                  backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                          ? theme.palette.grey[100]\n                          : theme.palette.grey[900],\n                  flexGrow: 1,\n                  height: '100vh',\n                  overflow: 'auto',\n                }}\n            >\n              <Toolbar />\n              <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                <Grid container spacing={3}>\n                  {/* Chart */}\n                  <Grid item xs={12} md={8} lg={9}>\n                    <Paper\n                        sx={{\n                          p: 2,\n                          display: 'flex',\n                          flexDirection: 'column',\n                          height: 240,\n                        }}\n                    >\n\n                    </Paper>\n                  </Grid>\n                  {/* Recent Deposits */}\n                  <Grid item xs={12} md={4} lg={3}>\n                    <Paper\n                        sx={{\n                          p: 2,\n                          display: 'flex',\n                          flexDirection: 'column',\n                          height: 240,\n                        }}\n                    >\n                      <Deposits />\n                    </Paper>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                      <Routes>\n                        <Route path=\"/add\" element={<AddPage />} />\n                        <Route path=\"/list\" element={<ListPage />} />\n                        <Route path=\"*\" element={<Outlet />} />\n                      </Routes>\n                    </Paper>\n                  </Grid>\n                </Grid>\n                <Copyright sx={{ pt: 4 }} />\n              </Container>\n            </Box>\n          </Box>\n        </ThemeProvider>\n      </>\n  );\n}","import React from 'react';\nimport { Box, Button } from '@mui/material';\n\nconst PageComponent = ({serverData, movePage}) => {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\n      {serverData.prev ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\n          Prev\n        </Button> : null}\n      {serverData.pageNumList.map(pageNum =>\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\n          {pageNum}\n        </Button>\n      )}\n      {serverData.next ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\n          Next\n        </Button> : null}\n    </Box>\n  );\n}\n\nexport default PageComponent;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\n\nconst ResultModal = ({ title, content, callbackFn }) => {\n  return (\n    <Dialog\n      open={true}\n      onClose={callbackFn}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"h4\" component=\"div\">\n          {content}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\n          Close Modal\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ResultModal;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n       navigate({pathname: '/list', search: queryStr});\n      }\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n\n     return {moveToList, moveToModify, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","id","orderObj","order","orderedProducts","totalPrice","orderType","pageRequestDTO","total","initState","mname","mgender","mid","mpw","mtel","memail","mbirthDate","uadr","AddComponent","setManager","useState","result","setResult","moveToList","useCustomMove","handleChangeManager","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","onChange","inputProps","pattern","helperText","type","InputLabelProps","shrink","Button","onClick","handleClickAdd","then","date","Date","console","log","toISOString","catch","error","AddPage","Container","maxWidth","Typography","component","gutterBottom","dtoList","pageNumList","prev","next","totoalCount","prevPage","nextPage","totalPage","current","_ref","onRowClick","selectedUserId","setSelectedUserId","moveToRead","refresh","serverData","setServerData","managers","setManagers","useParams","useNavigate","useEffect","className","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","map","scope","colSpan","PageComponent","movePage","ListPage","queryParams","useSearchParams","ListComponent","mID","mPW","mName","mGender","mEmail","mProfileImage","uAdr","moveToModify","ReadPage","ReadComponent","openModal","setOpenModal","selectedId","setSelectedId","setOrder","handleRowClick","style","cursor","product","index","totalAmount","Modal","open","onClose","handleCloseModal","position","top","left","transform","width","height","overflow","bgcolor","supplier","response","fetchOrderDetails","Array","isArray","setOpen","display","flexDirection","alignItems","mt","elevation","p","color","alert","MainListItems","user","openOrder","setOpenOrder","React","openSupplier","setOpenSupplier","openUser","setOpenUser","openInventory","setOpenInventory","openProduct","setOpenProduct","ListItemButton","justifyContent","marginLeft","gap","marginBottom","ListItemAvatar","Avatar","alt","src","borderRadius","ListItemText","primary","cname","Divider","handleOpen","ListItemIcon","DashboardIcon","handleClose","backgroundColor","Link","to","handleClickSupplier","ShoppingCartIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","pl","handleClickUser","PeopleIcon","handleClickInventory","Inventory","handleClickProduct","Store","props","preventDefault","event","Deposits","Title","flex","href","Copyright","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","_ref2","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","defaultTheme","createTheme","Dashboard","setUser","toggleDrawer","withCredentials","fetchUser","alarmOpen","setAlarmOpen","notificationCount","setNotificationCount","messages","setMessages","socket","SockJS","stompClient","Stomp","over","connect","frame","subscribe","message","body","prevCount","prevMessages","disconnect","handleAlarmClose","ThemeProvider","CssBaseline","Toolbar","pr","IconButton","edge","marginRight","MenuIcon","noWrap","flexGrow","handleAlarmOpen","Badge","badgeContent","NotificationsIcon","Dialog","PaperProps","right","BackdropProps","invisible","DialogTitle","DialogContent","msg","DialogActions","px","ChevronLeftIcon","my","palette","mode","grey","mb","Grid","container","item","xs","md","lg","Routes","Route","path","element","Outlet","pt","pageNum","autoFocus","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num"],"sourceRoot":""}