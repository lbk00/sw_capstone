{"version":3,"file":"static/js/136.80af2e0e.chunk.js","mappings":"+KAEQ,MACDA,EAAM,GAAAC,OADmB,wBACE,gBACpBC,EAASC,gBACHC,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,KAAAC,OAAIK,KAC9BC,KAEAC,EAAUL,UACtB,MAAM,KAACM,EAAI,KAACC,GAAQC,EAEpB,aADkBP,EAAAA,EAAMC,IAAI,GAADJ,OAAID,EAAM,SAAS,CAACY,OAAQ,CAACH,KAAKA,EAAKC,KAAKA,MAC5DH,IAAI,EAGHM,EAAUV,gBACJC,EAAAA,EAAMU,KAAK,GAADb,OAAID,EAAM,KAAMe,IACjCR,KAGCS,EAAYb,gBAELC,EAAAA,EAAMa,OAAO,GAADhB,OAAID,EAAM,KAAAC,OAAIK,KAEjCC,KAIAW,EAASf,gBAEFC,EAAAA,EAAMe,IAAI,GAADlB,OAAID,EAAM,KAAAC,OAAImB,EAAQd,QAAUc,IAEhDb,I,kICzBb,MAAMc,EAAY,CAChBC,MAAO,GACPC,QAAS,GACTC,IAAK,GACLC,IAAK,GACLC,KAAM,GACNC,OAAQ,GACRC,WAAY,GACZC,KAAM,IA2GR,EAtGqBC,KAEnB,MAAOV,EAASW,IAAcC,EAAAA,EAAAA,UAAS,IAAIX,KACpCY,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC/B,WAACG,IAAcC,EAAAA,EAAAA,KAEfC,EAAuBC,IAC3BlB,EAAQkB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAClCV,EAAW,IAAIX,GAAS,EAkB1B,OACEsB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE,kBAAmB,CAAEC,EAAG,IAAMC,SAAA,CACtCb,GAASc,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,MAAO,aAAcC,QAAO,OAAAjD,OAASgC,EAAM,UAAUkB,WAP7DC,KACjBlB,EAAU,MACVC,GAAY,KAK6FY,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,KACvGN,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACRC,MAAM,OACNC,QAAQ,WACRhB,KAAK,QACLC,MAAOrB,EAAQE,MACfmC,SAAUpB,KAEZU,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACRC,MAAM,KACNC,QAAQ,WACRhB,KAAK,MACLC,MAAOrB,EAAQI,IACfiC,SAAUpB,KAEZU,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,WACNC,QAAQ,WACRhB,KAAK,MACLC,MAAOrB,EAAQK,IACfgC,SAAUpB,KAElBU,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,SACNC,QAAQ,WACRhB,KAAK,UACLC,MAAOrB,EAAQG,QACfkC,SAAUpB,KAElBU,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,eACNC,QAAQ,WACRhB,KAAK,OACLC,MAAOrB,EAAQM,KACf+B,SAAUpB,EACVqB,WAAY,CAAEC,QAAS,0BACvBC,WAAW,2BAEnBb,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,aACNC,QAAQ,WACRhB,KAAK,aACLC,MAAOrB,EAAQQ,WACf6B,SAAUpB,EACVwB,KAAK,OACLC,gBAAiB,CACfC,QAAQ,MAGlBhB,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,QACNC,QAAQ,WACRhB,KAAK,SACLC,MAAOrB,EAAQO,OACf8B,SAAUpB,EACVqB,WAAY,CAAEC,QAAS,2CACvBC,WAAW,iCAEnBb,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACFC,MAAM,UACNC,QAAQ,WACRhB,KAAK,OACLC,MAAOrB,EAAQS,KACf4B,SAAUpB,EACVqB,WAAY,CAAEC,QAAS,oBACvBC,WAAW,0CAEnBb,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACR,QAAQ,YAAYS,QApFTC,MACrBrD,EAAAA,EAAAA,IAAQO,GACL+C,MAAKlC,IACJ,IAAImC,EAAO,IAAIC,KAAKpC,EAAOL,YAC3B0C,QAAQC,IAAIH,EAAKI,eACjBtC,EAAUD,EAAO3B,QACjByB,EAAW,IAAIV,GAAW,IACzBoD,OAAMnC,IAAOgC,QAAQI,MAAMpC,EAAE,GAAG,EA6EiBQ,SAAC,UAGjD,E,wBCjHV,MAUA,EAVgB6B,KAEZjC,EAAAA,EAAAA,MAACkC,EAAAA,EAAS,CAACC,SAAS,KAAI/B,SAAA,EACtBC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAACtB,QAAQ,KAAKuB,UAAU,KAAKC,cAAY,EAAAlC,SAAC,sBAGrDC,EAAAA,EAAAA,KAACjB,EAAY,M,2LCPnB,MAoBA,EApBsBmD,IAA6B,IAA5B,WAACC,EAAU,SAAEC,GAASF,EAC3C,OACEvC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEwC,QAAS,OAAQC,eAAgB,SAAUxC,EAAG,EAAGyC,EAAG,GAAIxC,SAAA,CAChEoC,EAAWK,MACVxC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACR,QAAQ,YAAYgC,MAAM,UAAUvB,QAASA,IAAMkB,EAAS,CAAC1E,KAAKyE,EAAWO,WAAW3C,SAAC,SAErF,KACboC,EAAWQ,YAAYC,KAAIC,IAC1B7C,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAAeR,QAAQ,YAAYgC,MAAON,EAAWW,UAAYD,EAAS,YAAY,UAAW3B,QAASA,IAAMkB,EAAU,CAAC1E,KAAKmF,IAAU9C,SAC9I8C,GADUA,KAIdV,EAAWY,MACV/C,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACR,QAAQ,YAAYgC,MAAM,UAAUvB,QAASA,IAAMkB,EAAU,CAAC1E,KAAKyE,EAAWa,WAAWjD,SAAC,SAEtF,OACV,ECHJzB,EAAY,CAChB2E,QAAQ,GAAIN,YAAY,GAAIO,eAAgB,KAAMV,MAAM,EAAOO,MAAM,EACrEI,YAAa,EAAGT,SAAU,EAAGM,SAAU,EAAGI,UAAW,EAAGN,QAAS,GAsEnE,EAnEsBZ,IAAqB,IAApB,WAAEmB,GAAYnB,EACnCX,QAAQC,IAAI6B,GACZ,MAAOC,EAAgBC,IAAqBtE,EAAAA,EAAAA,UAAS,OAC/C,WAACuE,EAAU,KAAE9F,EAAI,KAAEC,EAAI,QAAE8F,EAAO,WAAErE,IAAcC,EAAAA,EAAAA,MAC/C8C,EAAYuB,IAAiBzE,EAAAA,EAAAA,UAASX,IACtCqF,EAAUC,IAAe3E,EAAAA,EAAAA,UAAS,KAC1B4E,EAAAA,EAAAA,MACEC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,MACRtG,EAAAA,EAAAA,IAAQ,CAACC,OAAKC,SAAOyD,MAAK5D,IACxB+D,QAAQC,IAAIhE,GACZkG,EAAclG,GACdoG,EAAYpG,EAAKyF,SACjB1B,QAAQC,IAAIhE,EAAKyF,QAAQ,IAE1BvB,OAAMC,IACLJ,QAAQI,MAAM,wBAAyBA,GACvCiC,EAAY,GAAG,GACf,GACD,CAAClG,EAAKC,EAAM8F,KAEb9D,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,2CAA0CjE,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKgE,UAAU,4CAA2CjE,UACxDC,EAAAA,EAAAA,KAACiE,EAAAA,EAAc,CAACjC,UAAWkC,EAAAA,EAAMnE,UAC/BJ,EAAAA,EAAAA,MAACwE,EAAAA,EAAK,CAACtE,GAAI,CAAEuE,SAAU,KAAO,aAAW,eAAcrE,SAAA,EACrDC,EAAAA,EAAAA,KAACqE,EAAAA,EAAS,CAAAtE,UACRJ,EAAAA,EAAAA,MAAC2E,EAAAA,EAAQ,CAAAvE,SAAA,EACPC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAAAxE,SAAC,YACXC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,kBACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,kBACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,QACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,QACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,8BACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,8BACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,wBACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,uBAG7BC,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CAAA1E,SACP4D,EAASe,OAAS,EAAIf,EAASf,KAAIvE,IAClCsB,EAAAA,EAAAA,MAAC2E,EAAAA,EAAQ,CAAsBpD,QAASA,KAClCK,QAAQC,IAAI,4BAADtE,OAA6BmB,EAAQd,SAChD8F,EAAWhF,EAAQd,OAAO,EACxBwC,SAAA,EACNC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACvC,UAAU,KAAK2C,MAAM,MAAK5E,SAClC1B,EAAQd,UAEXyC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQE,SAClCyB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQG,WAClCwB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQI,OAClCuB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQK,OAClCsB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQQ,cAClCmB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQM,QAClCqB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQO,UAClCoB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQS,SAdrBT,EAAQd,WAgBrByC,EAAAA,EAAAA,KAACsE,EAAAA,EAAQ,CAAAvE,UAACC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACK,QAAS,EAAE7E,SAAC,wBAK7CC,EAAAA,EAAAA,KAAC6E,EAAa,CAAC1C,WAAYA,EAAYC,SAAUhD,EAAYwE,YAAaA,MACtE,C,wFC9ER,MAkBF,EAlBmBkB,KAEf,MAAOC,IAAeC,EAAAA,EAAAA,mBAChBtH,EAAOqH,EAAYzH,IAAI,SAAU,EAC1ByH,EAAYzH,IAAI,QAE7B,OACAqC,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,4BAA2BjE,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKgE,UAAU,0BAAyBjE,SAAC,iCAGzCC,EAAAA,EAAAA,KAACiF,EAAAA,EAAa,KAEdjF,EAAAA,EAAAA,KAAA,OAAAD,SAAMrC,MAED,C,mJCTV,MAAMY,EAAY,CACdf,OAAQ,EACR2H,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,QAAS,GACTxG,WAAY,GACZF,KAAM,GACN2G,OAAQ,GACRC,cAAe,GACfC,KAAM,IAgFV,MAUA,EAvFA,SAAsBtD,GAAc,IAAb,OAAE3E,GAAQ2E,EAG7B,MAAO7D,EAASW,IAAcC,EAAAA,EAAAA,UAASX,IAEjC,WAACc,EAAU,aAAEqG,IAAgBpG,EAAAA,EAAAA,KAanC,OAXA0E,EAAAA,EAAAA,YAAU,MACR5G,EAAAA,EAAAA,IAAOI,GACJ6D,MAAK5D,IACJ+D,QAAQC,IAAIhE,GACZwB,EAAWxB,EAAK,IAEjBkE,OAAMC,IACLJ,QAAQI,MAAM,wBAAyBA,EAAM,GAC7C,GACH,CAACpE,KAGAoC,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAP,SAAA,EACIC,EAAAA,EAAAA,KAACiE,EAAAA,EAAc,CAACjC,UAAWkC,EAAAA,EAAMnE,UAC7BJ,EAAAA,EAAAA,MAACwE,EAAAA,EAAK,CAACtE,GAAI,CAAEuE,SAAU,KAAO,aAAW,eAAcrE,SAAA,EACnDC,EAAAA,EAAAA,KAACqE,EAAAA,EAAS,CAAAtE,UACNJ,EAAAA,EAAAA,MAAC2E,EAAAA,EAAQ,CAAAvE,SAAA,EACLC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAAAxE,SAAC,YACXC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,kBACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,kBACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,QACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,QACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,8BACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,8BACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,wBACzBC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAC,uBAKjCC,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CAAA1E,UACNJ,EAAAA,EAAAA,MAAC2E,EAAAA,EAAQ,CAAAvE,SAAA,EACLC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACvC,UAAU,KAAK2C,MAAM,MAAK5E,SAChC1B,EAAQd,UAEbyC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQE,SAClCyB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQG,WAClCwB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQI,OAClCuB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQK,OAClCsB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQQ,cAClCmB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQM,QAClCqB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQO,UAClCoB,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,MAAM,QAAOzE,SAAE1B,EAAQS,kBASlDkB,EAAAA,EAAAA,KAAA,OAAKgE,UAAU,uBAAsBjE,UACnCC,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SACAkD,UAAU,kDACV9C,QAASA,IAAM9B,IAAaW,SAAC,YAK5CC,EAAAA,EAAAA,KAAA,OAAKgE,UAAU,uBAAsBjE,UACnCC,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SACPkD,UAAU,iDACV9C,QAASA,IAAMuE,EAAapH,EAAQd,QAAQwC,SAAC,eAMjE,C,wFChGA,MAWA,EAXiB2F,KAEX,MAAM,OAACnI,IAAUsG,EAAAA,EAAAA,KAEjB,OACClE,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,sCAAqCjE,SAAA,EACpDJ,EAAAA,EAAAA,MAAA,OAAKqE,UAAU,YAAWjE,SAAA,CAAC,gCAA8BxC,EAAO,QAC/DyC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAa,CAACpI,OAAQA,MAClB,C,maCSN,MAAMqI,EAAgBA,KAC3B,MAAOC,EAAWC,GAAgBC,EAAAA,UAAe,IAC1CC,EAAcC,GAAmBF,EAAAA,UAAe,IAChDG,EAAUC,GAAeJ,EAAAA,UAAe,IACxCK,EAAeC,GAAoBN,EAAAA,UAAe,IAClDO,EAAaC,GAAkBR,EAAAA,UAAe,GAuBrD,OACEpG,EAAAA,EAAAA,MAACoG,EAAAA,SAAc,CAAAhG,SAAA,EACbC,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEyC,eAAgB,aAAcmE,WAAY,GAAI1G,UAClEJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEwC,QAAS,OAAQqE,cAAe,SAAUC,WAAY,SAAUC,IAAK,EAAGC,aAAc,GAAI9G,SAAA,EACnGC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAc,CAAA/G,UACbC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,CACLC,IAAI,aACJC,IAAI,sBACJpH,GAAI,CAAEqH,aAAc,MAAOC,MAAO,IAAKC,OAAQ,UAGnDpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,6BAG1BtH,EAAAA,EAAAA,KAACuH,EAAAA,EAAO,KACR5H,EAAAA,EAAAA,MAAC6G,EAAAA,EAAc,CAACtF,QAnCKsG,KACvB1B,GAAcD,EAAU,EAkCoB9F,SAAA,EACxCC,EAAAA,EAAAA,KAACyH,EAAAA,EAAY,CAAA1H,UACXC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAa,OAEhB1H,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,oCACrBzB,GAAY7F,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,KAAM3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAU,QAE3C5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAQ,CAACC,GAAIjC,EAAWkC,QAAQ,OAAOC,eAAa,EAAAjI,UACnDJ,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAACjG,UAAU,MAAMkG,gBAAc,EAAAnI,SAAA,EAClCC,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,4CAK5B3H,EAAAA,EAAAA,MAAC6G,EAAAA,EAAc,CAACtF,QAvDQkH,KAC1BnC,GAAiBD,EAAa,EAsDiBjG,SAAA,EAC3CC,EAAAA,EAAAA,KAACyH,EAAAA,EAAY,CAAA1H,UACXC,EAAAA,EAAAA,KAACqI,EAAAA,EAAgB,OAEnBrI,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,0CACrBtB,GAAehG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,KAAM3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAU,QAE9C5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAQ,CAACC,GAAI9B,EAAc+B,QAAQ,OAAOC,eAAa,EAAAjI,UACtDJ,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAACjG,UAAU,MAAMkG,gBAAc,EAAAnI,SAAA,EAClCC,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,6CAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,6CAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,6CAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,kDAK5B3H,EAAAA,EAAAA,MAAC6G,EAAAA,EAAc,CAACtF,QA3EIoH,KACpBnC,GAAaD,EAAS,EA0EmBnG,SAAA,EACjCC,EAAAA,EAAAA,KAACyH,EAAAA,EAAY,CAAA1H,UACXC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,OAEbvI,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,oCACrBpB,GAAWlG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,KAAM3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAU,QAE1C5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAQ,CAACC,GAAI5B,EAAU6B,QAAQ,OAAOC,eAAa,EAAAjI,UAClDJ,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAACjG,UAAU,MAAMkG,gBAAc,EAAAnI,SAAA,EAClCC,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAKnG,UAAWwG,EAAAA,KAAMC,GAAG,QAAO1I,UACxDC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAKnG,UAAWwG,EAAAA,KAAMC,GAAG,OAAM1I,UACvDC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAKnG,UAAWwG,EAAAA,KAAMC,GAAG,YAAW1I,UAC5DC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAKnG,UAAWwG,EAAAA,KAAMC,GAAG,YAAW1I,UAC5DC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,4CAMlC3H,EAAAA,EAAAA,MAAC6G,EAAAA,EAAc,CAACtF,QAhGSwH,KACvBrC,GAAkBD,EAAc,EA+FYrG,SAAA,EACtCC,EAAAA,EAAAA,KAACyH,EAAAA,EAAY,CAAA1H,UACXC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAS,OAEZ3I,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,8BACrBlB,GAAgBpG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,KAAM3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAU,QAE/C5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAQ,CAACC,GAAI1B,EAAe2B,QAAQ,OAAOC,eAAa,EAAAjI,UACvDJ,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAACjG,UAAU,MAAMkG,gBAAc,EAAAnI,SAAA,EAClCC,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,8CAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,qDAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,8CAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,mDAKlC3H,EAAAA,EAAAA,MAAC6G,EAAAA,EAAc,CAACtF,QApHO0H,KACrBrC,GAAgBD,EAAY,EAmHcvG,SAAA,EAC9BC,EAAAA,EAAAA,KAACyH,EAAAA,EAAY,CAAA1H,UACXC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAK,OAER7I,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,8BACrBhB,GAActG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,KAAM3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAU,QAE7C5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAQ,CAACC,GAAIxB,EAAayB,QAAQ,OAAOC,eAAa,EAAAjI,UACrDJ,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAACjG,UAAU,MAAMkG,gBAAc,EAAAnI,SAAA,EAClCC,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,iCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,iCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,iCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,iCAExBtH,EAAAA,EAAAA,KAACwG,EAAAA,EAAc,CAAC3G,GAAI,CAAEsI,GAAI,GAAIpI,UAC5BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,CAACC,QAAQ,uCAIzB,E,8BC3KrB,QAZA,SAAewB,GACb,OACE9I,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAACC,UAAU,KAAKvB,QAAQ,KAAKgC,MAAM,UAAUR,cAAY,EAAAlC,SACjE+I,EAAM/I,UAGb,ECLA,SAASgJ,EAAeC,GACtBA,EAAMD,gBACR,CAEe,SAASE,IACtB,OACEtJ,EAAAA,EAAAA,MAACoG,EAAAA,SAAc,CAAAhG,SAAA,EACbC,EAAAA,EAAAA,KAACkJ,EAAK,CAAAnJ,SAAC,qBACPC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAACC,UAAU,IAAIvB,QAAQ,KAAIV,SAAC,eAGvCC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAACU,MAAM,iBAAiB5C,GAAI,CAAEsJ,KAAM,GAAIpJ,SAAC,uBAGpDC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACwI,EAAAA,EAAI,CAAC/F,MAAM,UAAU2G,KAAK,IAAIlI,QAAS6H,EAAehJ,SAAC,qBAMhE,C,gCCWA,SAASsJ,EAAUP,GACjB,OACEnJ,EAAAA,EAAAA,MAACoC,EAAAA,EAAU,CAACtB,QAAQ,QAAQgC,MAAM,iBAAiB+B,MAAM,YAAasE,EAAK/I,SAAA,CACxE,mBACDC,EAAAA,EAAAA,KAACwI,EAAAA,EAAI,CAAC/F,MAAM,UAAU2G,KAAK,mBAAkBrJ,SAAC,iBAEtC,KACP,IAAIuB,MAAOgI,cACX,MAGP,CAIA,MAEMC,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,EAAW,CAC/BC,kBAAoBC,GAAkB,SAATA,GADhBH,EAEZtH,IAAA,IAAC,MAAE0H,EAAK,KAAEC,GAAM3H,EAAA,MAAM,CACvB4H,OAAQF,EAAME,OAAOC,OAAS,EAC9BC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,mBAEnCT,GAAQ,CACVpD,WAXgB,IAYhBU,MAAM,eAADjK,OAZW,IAYiB,OACjC8M,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASE,kBAG1C,IAEKC,GAAShB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAW,CAAEf,kBAAoBC,GAAkB,SAATA,GAAjDH,EACbkB,IAAA,IAAC,MAAEd,EAAK,KAAEC,GAAMa,EAAA,MAAM,CACpB,qBAAsB,CACpBC,SAAU,WACVC,WAAY,SACZzD,MAzBc,IA0Bd6C,WAAYJ,EAAMK,YAAYC,OAAO,QAAS,CAC5CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASE,iBAEvCM,UAAW,iBACNhB,GAAQ,CACXiB,UAAW,SACXd,WAAYJ,EAAMK,YAAYC,OAAO,QAAS,CAC5CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,gBAEvCnD,MAAOyC,EAAMmB,QAAQ,GACrB,CAACnB,EAAMoB,YAAYC,GAAG,OAAQ,CAC5B9D,MAAOyC,EAAMmB,QAAQ,MAI3B,sCAAuC,CACrC1I,QAASwH,EAAO,QAAU,QAE5B,yBAA0B,CACxBiB,UAAW,WAEd,IAIGI,GAAeC,EAAAA,EAAAA,KAEN,SAASC,IACtB,MAAOvB,EAAMwB,GAAWtF,EAAAA,UAAe,IAChCzC,EAAgBC,IAAqBtE,EAAAA,EAAAA,UAAS,OAC/C,WAAEuE,IAAenE,EAAAA,EAAAA,MAKf,OAAE9B,IAAWsG,EAAAA,EAAAA,KAEfyH,EAAeA,KACnBD,GAASxB,EAAK,EAGhB,OACA7J,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,UAGEC,EAAAA,EAAAA,KAACuL,EAAAA,EAAa,CAAC3B,MAAOsB,EAAanL,UACjCJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEwC,QAAS,QAAStC,SAAA,EAC3BC,EAAAA,EAAAA,KAACwL,EAAAA,GAAW,KACZxL,EAAAA,EAAAA,KAACuJ,EAAM,CAACoB,SAAS,WAAWd,KAAMA,EAAK9J,UACrCJ,EAAAA,EAAAA,MAAC8L,EAAAA,EAAO,CACN5L,GAAI,CACF6L,GAAI,QACJ3L,SAAA,EAEFC,EAAAA,EAAAA,KAAC2L,EAAAA,EAAU,CACTC,KAAK,QACLnJ,MAAM,UACN,aAAW,cACXvB,QAASoK,EACTzL,GAAI,CACFgM,YAAa,UACThC,GAAQ,CAAExH,QAAS,SACvBtC,UAEFC,EAAAA,EAAAA,KAAC8L,EAAAA,EAAQ,OAEX9L,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CACTC,UAAU,KACVvB,QAAQ,KACRgC,MAAM,UACNsJ,QAAM,EACNlM,GAAI,CAAEmM,SAAU,GAAIjM,SACrB,eAGDC,EAAAA,EAAAA,KAAC2L,EAAAA,EAAU,CAAClJ,MAAM,UAAS1C,UACzBC,EAAAA,EAAAA,KAACiM,EAAAA,EAAK,CAACC,aAAc,EAAGzJ,MAAM,YAAW1C,UACvCC,EAAAA,EAAAA,KAACmM,EAAAA,EAAiB,cAK1BxM,EAAAA,EAAAA,MAAC6K,EAAM,CAAC/J,QAAQ,YAAYoJ,KAAMA,EAAK9J,SAAA,EACrCJ,EAAAA,EAAAA,MAAC8L,EAAAA,EAAO,CACN5L,GAAI,CACFwC,QAAS,OACTsE,WAAY,SACZrE,eAAgB,WAChB8J,GAAI,CAAC,IACLrM,SAAA,EAGFC,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,CAAC/C,UAAU,gBAAgBiD,IAAI,gCACtCjH,EAAAA,EAAAA,KAAC2L,EAAAA,EAAU,CAACzK,QAASoK,EAAavL,UAChCC,EAAAA,EAAAA,KAACqM,EAAAA,EAAe,UAGpBrM,EAAAA,EAAAA,KAACuH,EAAAA,EAAO,KACR5H,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAACjG,UAAU,MAAKjC,SAAA,CAClB6F,KACD5F,EAAAA,EAAAA,KAACuH,EAAAA,EAAO,CAAC1H,GAAI,CAAEyM,GAAI,YAGvB3M,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFoC,UAAU,OACVnC,GAAI,CACF0M,gBAAkB3C,GACO,UAAvBA,EAAM4C,QAAQC,KACV7C,EAAM4C,QAAQE,KAAK,KACnB9C,EAAM4C,QAAQE,KAAK,KACzBV,SAAU,EACV5E,OAAQ,QACRuF,SAAU,QACV5M,SAAA,EAEFC,EAAAA,EAAAA,KAACyL,EAAAA,EAAO,KACR9L,EAAAA,EAAAA,MAACkC,EAAAA,EAAS,CAACC,SAAS,KAAKjC,GAAI,CAAE+M,GAAI,EAAGC,GAAI,GAAI9M,SAAA,EAC5CJ,EAAAA,EAAAA,MAACmN,EAAAA,GAAI,CAACC,WAAS,EAAChC,QAAS,EAAEhL,SAAA,EAEzBC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEpN,UAC9BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJrE,GAAI,CACF0C,EAAG,EACHF,QAAS,OACTqE,cAAe,SACfU,OAAQ,UAOdpH,EAAAA,EAAAA,KAAC8M,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEpN,UAC9BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJrE,GAAI,CACF0C,EAAG,EACHF,QAAS,OACTqE,cAAe,SACfU,OAAQ,KACRrH,UAEFC,EAAAA,EAAAA,KAACiJ,EAAQ,SAIbjJ,EAAAA,EAAAA,KAAC8M,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAGlN,UAChBC,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CAACrE,GAAI,CAAE0C,EAAG,EAAGF,QAAS,OAAQqE,cAAe,UAAW3G,UAC5DJ,EAAAA,EAAAA,MAACyN,EAAAA,GAAM,CAAArN,SAAA,EACLC,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAASvN,EAAAA,EAAAA,KAAC4B,EAAAA,QAAO,OACpC5B,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAACC,KAAK,QAAQC,SAASvN,EAAAA,EAAAA,KAAC8E,EAAAA,QAAQ,OACtC9E,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAASvN,EAAAA,EAAAA,KAACwN,EAAAA,GAAM,iBAKxCxN,EAAAA,EAAAA,KAACqJ,EAAS,CAACxJ,GAAI,CAAE4N,GAAI,iBAOjC,C,iHC/OA,MAuBA,EAvBoBvL,IAAqC,IAApC,MAAEhC,EAAK,QAAEC,EAAO,WAAEC,GAAY8B,EACjD,OACEvC,EAAAA,EAAAA,MAAC+N,EAAAA,EAAM,CACL7D,MAAM,EACN8D,QAASvN,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BL,SAAA,EAE3CC,EAAAA,EAAAA,KAAC4N,EAAAA,EAAW,CAACC,GAAG,qBAAoB9N,SAAEG,KACtCF,EAAAA,EAAAA,KAAC8N,EAAAA,EAAa,CAAA/N,UACZC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CAACtB,QAAQ,KAAKuB,UAAU,MAAKjC,SACrCI,OAGLH,EAAAA,EAAAA,KAAC+N,EAAAA,EAAa,CAAAhO,UACZC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACC,QAASd,EAAYqC,MAAM,UAAUuL,WAAS,EAAAjO,SAAC,oBAIlD,C,oECjBb,MAAMkO,EAASA,CAACC,EAAOC,IAEfD,EAIGE,SAASF,GAHTC,EAyDX,EAlDsB9O,KAGhB,MAAMgP,GAAWvK,EAAAA,EAAAA,OAEVL,EAAS6K,IAAcrP,EAAAA,EAAAA,WAAS,IAEhC8F,IAAeC,EAAAA,EAAAA,mBAEhBtH,EAAOuQ,EAAOlJ,EAAYzH,IAAI,QAAS,GACvCK,EAAOsQ,EAAOlJ,EAAYzH,IAAI,QAAS,IAEvCiR,GAAeC,EAAAA,EAAAA,oBAAmB,CAAC9Q,OAAMC,SAAO8Q,WAoCvD,MAAO,CAACrP,WAlCaxB,IACpB2D,QAAQC,IAAI,2BAA4B5D,GACtC,IAAI8Q,EAAW,GACd,GAAG9Q,EAAU,CAEZ,MAAMiF,EAAUoL,EAAOrQ,EAAUF,KAAM,GACjCiR,EAAUV,EAAOrQ,EAAUD,KAAM,IAEvC+Q,GAAWF,EAAAA,EAAAA,oBAAmB,CAAC9Q,KAAKmF,EAASlF,KAAMgR,IAAUF,UACjE,MACIC,EAAWH,EAGZD,GAAY7K,GAEdlC,QAAQC,IAAI,kBAAmB,CAACoN,SAAU,QAASC,OAAQH,IAC3DL,EAAS,CAACO,SAAU,QAASC,OAAQH,GAAU,EAkB7BjJ,cAfCqJ,EAAAA,EAAAA,cAAaC,IAClCxN,QAAQC,IAAI+M,GACZF,EAAS,CAAEO,SAAS,aAAD1R,OAAe6R,GAAOF,OAAQN,GAAe,GAC9D,CAAC7Q,EAAKC,IAY0B6F,WAVdjG,IAClBgE,QAAQC,IAAI,UAAWjE,GACvBgE,QAAQC,IAAI+M,GACZF,EAAS,CACPO,SAAS,WAAD1R,OAAaK,GACrBsR,OAAQN,GACR,EAI0C7Q,OAAMC,OAAM8F,UAAQ,C","sources":["api/ManagerApi.js","components/Manager/AddComponent.js","components/Manager/AddPage.js","components/common/PageComponent.js","components/Manager/ListComponent.js","components/Manager/ListPage.js","components/Manager/ReadComponent.js","components/Manager/ReadPage.js","components/adminpage/listItems.js","components/adminpage/Title.js","components/adminpage/Deposits.js","components/adminpage/Dashboard.js","components/common/ResultModal.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n export const API_SERVER_HOST = 'http://localhost:8080'\r\n const prefix = `${API_SERVER_HOST}/api/manager`\r\n export const getOne = async (userId) => {\r\n  const res = await axios.get(`${prefix}/${userId}` )\r\n  return res.data\r\n  }\r\nexport const getList = async ( pageParam ) => {\r\n const {page,size} = pageParam\r\n const res = await axios.get(`${prefix}/list`, {params: {page:page,size:size }})\r\n return res.data\r\n }\r\n\r\nexport const postAdd = async (managerObj) => {\r\n const res = await axios.post(`${prefix}/` , managerObj)\r\n return res.data\r\n }\r\n\r\nexport const deleteOne = async (userId) => {\r\n\r\n  const res = await axios.delete(`${prefix}/${userId}` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const putOne = async (manager) => {\r\n\r\n  const res = await axios.put(`${prefix}/${manager.userId}`, manager)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { postAdd } from \"../../api/ManagerApi\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport { TextField, Button, Box } from '@mui/material';\r\n\r\nconst initState = {\r\n  mname: '',\r\n  mgender: '',\r\n  mid: '',\r\n  mpw: '',\r\n  mtel: '',\r\n  memail: '',\r\n  mbirthDate: '',\r\n  uadr: '',\r\n\r\n\r\n}\r\n\r\nconst AddComponent = () => {\r\n\r\n  const [manager, setManager] = useState({...initState})\r\n  const [result, setResult] = useState(null)\r\n  const {moveToList} = useCustomMove()\r\n\r\n  const handleChangeManager = (e) => {\r\n    manager[e.target.name] = e.target.value\r\n    setManager({...manager})\r\n  }\r\n\r\n  const handleClickAdd = () => {\r\n    postAdd(manager)\r\n      .then(result => {\r\n        let date = new Date(result.mbirthDate);\r\n        console.log(date.toISOString());\r\n        setResult(result.userId)\r\n        setManager({...initState})\r\n      }).catch(e => { console.error(e) })\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setResult(null)\r\n    moveToList()\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ '& > :not(style)': { m: 1 } }}>\r\n      {result ? <ResultModal title={'Add Result'} content={`New ${result} Added`} callbackFn={closeModal}/>: <></>}\r\n      <TextField\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        name=\"mname\"\r\n        value={manager.mname}\r\n        onChange={handleChangeManager}\r\n      />\r\n      <TextField\r\n        label=\"ID\"\r\n        variant=\"outlined\"\r\n        name=\"mid\"\r\n        value={manager.mid}\r\n        onChange={handleChangeManager}\r\n      />\r\n      <TextField\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              name=\"mpw\"\r\n              value={manager.mpw}\r\n              onChange={handleChangeManager}\r\n            />\r\n      <TextField\r\n              label=\"Gender\"\r\n              variant=\"outlined\"\r\n              name=\"mgender\"\r\n              value={manager.mgender}\r\n              onChange={handleChangeManager}\r\n            />\r\n      <TextField\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              name=\"mtel\"\r\n              value={manager.mtel}\r\n              onChange={handleChangeManager}\r\n              inputProps={{ pattern: \"\\\\d{3}-\\\\d{3,4}-\\\\d{4}\" }}\r\n              helperText=\"Format: 123-4567-8901\"\r\n            />\r\n      <TextField\r\n              label=\"Birth Date\"\r\n              variant=\"outlined\"\r\n              name=\"mbirthDate\"\r\n              value={manager.mbirthDate}\r\n              onChange={handleChangeManager}\r\n              type=\"date\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n      <TextField\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              name=\"memail\"\r\n              value={manager.memail}\r\n              onChange={handleChangeManager}\r\n              inputProps={{ pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\" }}\r\n              helperText=\"Format: example@example.com\"\r\n            />\r\n      <TextField\r\n              label=\"Address\"\r\n              variant=\"outlined\"\r\n              name=\"uadr\"\r\n              value={manager.uadr}\r\n              onChange={handleChangeManager}\r\n              inputProps={{ pattern: \"[a-zA-Z0-9\\\\s,]+\" }}\r\n              helperText=\"Format: Street, City, State, Country\"\r\n            />\r\n      <Button variant=\"contained\" onClick={handleClickAdd}>\r\n        ADD\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddComponent;\r\n","import React from 'react';\r\nimport AddComponent from './AddComponent';\r\nimport { Container, Typography } from '@mui/material';\r\n\r\nconst AddPage = () => {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n        Manager Add Page\r\n      </Typography>\r\n      <AddComponent />\r\n    </Container>\r\n  );\r\n}\r\nexport default AddPage;","import React from 'react';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nconst PageComponent = ({serverData, movePage}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\r\n      {serverData.prev ?\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\r\n          Prev\r\n        </Button> : null}\r\n      {serverData.pageNumList.map(pageNum =>\r\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\r\n          {pageNum}\r\n        </Button>\r\n      )}\r\n      {serverData.next ?\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\r\n          Next\r\n        </Button> : null}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PageComponent;","import { useEffect, useState } from \"react\";\r\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\r\nimport { getList, getOne } from \"../../api/ManagerApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport ReadComponent from './ReadComponent';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PageComponent from \"../common/PageComponent\";\r\n\r\n\r\nconst initState = {\r\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\r\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\r\n}\r\n\r\nconst ListComponent = ({ onRowClick }) => {\r\n  console.log(onRowClick);\r\n  const [selectedUserId, setSelectedUserId] = useState(null); // setSelectedUserId 함수 정의\r\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove()\r\n  const [serverData, setServerData] = useState(initState)\r\n  const [managers, setManagers] = useState([]); // managers state\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getList({page,size}).then(data => {\r\n      console.log(data)\r\n      setServerData(data)\r\n      setManagers(data.dtoList) // setManagers function\r\n      console.log(data.dtoList)\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching data: ', error);\r\n      setManagers([]); // API 호출 실패 시 managers를 빈 배열로 설정\r\n    });\r\n  }, [page,size, refresh]);\r\n  return (\r\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>userId</TableCell>\r\n                <TableCell align=\"right\">이름</TableCell>\r\n                <TableCell align=\"right\">성별</TableCell>\r\n                <TableCell align=\"right\">ID</TableCell>\r\n                <TableCell align=\"right\">PW</TableCell>\r\n                <TableCell align=\"right\">생년월일</TableCell>\r\n                <TableCell align=\"right\">전화번호</TableCell>\r\n                <TableCell align=\"right\">이메일</TableCell>\r\n                <TableCell align=\"right\">주소</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {managers.length > 0 ? managers.map(manager =>\r\n                <TableRow key={manager.userId} onClick={() => {\r\n                      console.log(`Row clicked with userId: ${manager.userId}`); // 로깅하여 확인\r\n                      onRowClick(manager.userId);\r\n                      }}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {manager.userId}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{manager.mname}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mgender}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mid}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mpw}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\r\n                  <TableCell align=\"right\">{manager.mtel}</TableCell>\r\n                  <TableCell align=\"right\">{manager.memail}</TableCell>\r\n                  <TableCell align=\"right\">{manager.uadr}</TableCell>\r\n                </TableRow>\r\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n      <PageComponent serverData={serverData} movePage={moveToList} setManagers={setManagers}></PageComponent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListComponent;","import React from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport ListComponent from \"./ListComponent\";\r\n\r\n\r\n\r\n  const ListPage = () => {\r\n\r\n    const [queryParams] = useSearchParams()\r\n    const page = queryParams.get(\"page\") ||1\r\n    const size = queryParams.get(\"size\") ||10\r\n\r\n    return (\r\n    <div className=\"p-4 w-full bg-orange-200 \">\r\n     <div className=\"text-3xl font-extrabold\">\r\n       Manager List Page Component\r\n     </div>\r\n     <ListComponent/>\r\n\r\n     <div>{page}</div>\r\n\r\n    </div>\r\n    );\r\n  }\r\nexport default ListPage;\r\n\r\n","import { useEffect, useState,} from \"react\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { getOne } from \"../../api/ManagerApi\"\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\r\n\r\nconst initState = {\r\n    userId: 0,\r\n    mID: '',\r\n    mPW: '',\r\n    mName: '',\r\n    mGender: '',\r\n    mbirthDate: '',\r\n    mtel: '',\r\n    mEmail: '',\r\n    mProfileImage: '',\r\n    uAdr: '',\r\n}\r\n\r\nfunction ReadComponent({ userId }) {\r\n\r\n\r\n    const [manager, setManager] = useState(initState);\r\n\r\n    const {moveToList, moveToModify} = useCustomMove();\r\n\r\n    useEffect(() => {\r\n      getOne(userId)\r\n        .then(data => {\r\n          console.log(data); // API로부터 받아온 데이터를 콘솔에 출력\r\n          setManager(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data: ', error); // API 호출에 실패했을 때 에러 메시지를 출력\r\n        });\r\n    }, [userId]);\r\n\r\n    return(\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>userId</TableCell>\r\n                            <TableCell align=\"right\">이름</TableCell>\r\n                            <TableCell align=\"right\">성별</TableCell>\r\n                            <TableCell align=\"right\">ID</TableCell>\r\n                            <TableCell align=\"right\">PW</TableCell>\r\n                            <TableCell align=\"right\">생년월일</TableCell>\r\n                            <TableCell align=\"right\">전화번호</TableCell>\r\n                            <TableCell align=\"right\">이메일</TableCell>\r\n                            <TableCell align=\"right\">주소</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {manager.userId}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{manager.mname}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mgender}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mid}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mpw}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mbirthDate}</TableCell>\r\n                            <TableCell align=\"right\">{manager.mtel}</TableCell>\r\n                            <TableCell align=\"right\">{manager.memail}</TableCell>\r\n                            <TableCell align=\"right\">{manager.uadr}</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n\r\n            <div className=\"flex justify-end p-4\">\r\n              <button type=\"button\"\r\n                           className=\"rounded p-4 text-xl w-32 text-white bg-blue-500\"\r\n                           onClick={() => moveToList()}>\r\n                    list\r\n                    </button>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end p-4\">\r\n              <button type=\"button\"\r\n                    className=\"rounded p-4 text-xl w-32 text-white bg-red-500\"\r\n                    onClick={() => moveToModify(manager.userId)}>\r\n              Modify\r\n              </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst makeDiv = (title, value) =>\r\n  <div className=\"flex justify-center\">\r\n    <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n      <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n        <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\nexport default ReadComponent;","import { useCallback } from \"react\";\r\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport ReadComponent from \"./ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n\r\n      const {userId} = useParams()\r\n\r\n      return (\r\n       <div className=\"font-extrabold w-full bg-white mt-6\">\r\n       <div className=\"text-2xl \"> Manager Read Page Component {userId} </div>\r\n        <ReadComponent userId={userId}></ReadComponent>\r\n       </div>\r\n      );\r\n}\r\nexport default ReadPage;","import * as React from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport LayersIcon from '@mui/icons-material/Layers';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport List from '@mui/material/List';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\nimport Inventory from '@mui/icons-material/Inventory'; // Added this line\r\nimport Store from '@mui/icons-material/Store'; // Added this line\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const MainListItems = () => {\r\n  const [openOrder, setOpenOrder] = React.useState(false);\r\n  const [openSupplier, setOpenSupplier] = React.useState(false);\r\n  const [openUser, setOpenUser] = React.useState(false);\r\n  const [openInventory, setOpenInventory] = React.useState(false);\r\n  const [openProduct, setOpenProduct] = React.useState(false);\r\n\r\n\r\n  const handleClickOrder = () => {\r\n    setOpenOrder(!openOrder);\r\n  };\r\n\r\n  const handleClickSupplier = () => {\r\n    setOpenSupplier(!openSupplier);\r\n  };\r\n\r\n  const handleClickUser = () => {\r\n      setOpenUser(!openUser);\r\n  };\r\n\r\n  const handleClickInventory = () => {\r\n        setOpenInventory(!openInventory);\r\n  };\r\n\r\n  const handleClickProduct = () => {\r\n        setOpenProduct(!openProduct);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItemButton sx={{ justifyContent: 'flex-start', marginLeft: 5 }}>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, marginBottom: 5 }}>\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              alt=\"Admin Name\"\r\n              src=\"/sample/sample1.jpg\"\r\n              sx={{ borderRadius: '50%', width: 100, height: 100 }} // 크기를 조절\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"강민석\" />\r\n        </Box>\r\n      </ListItemButton>\r\n      <Divider />\r\n      <ListItemButton onClick={handleClickOrder}>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"주문서 관리\" />\r\n        {openOrder ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItemButton>\r\n      <Collapse in={openOrder} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"주문서 조회\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"주문서 작성\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"주문서 수정\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"주문서 삭제\" />\r\n          </ListItemButton>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickSupplier}>\r\n        <ListItemIcon>\r\n          <ShoppingCartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"공급업체 관리\" />\r\n        {openSupplier ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItemButton>\r\n      <Collapse in={openSupplier} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 생성\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 조회\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 삭제\" />\r\n          </ListItemButton>\r\n          <ListItemButton sx={{ pl: 4 }}>\r\n            <ListItemText primary=\"공급업체 수정\" />\r\n          </ListItemButton>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickUser}>\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"사용자 관리\" />\r\n              {openUser ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openUser} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/list\">\r\n                  <ListItemText primary=\"사용자 목록\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/add\">\r\n                  <ListItemText primary=\"사용자 등록\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/modify/1\">\r\n                  <ListItemText primary=\"사용자 수정\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }} component={Link} to=\"/modify/1\">\r\n                  <ListItemText primary=\"사용자 삭제\" />\r\n                </ListItemButton>\r\n\r\n              </List>\r\n            </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickInventory}>\r\n              <ListItemIcon>\r\n                <Inventory />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"재고 관리\" />\r\n              {openInventory ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openInventory} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"매진 상품 예측\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"재고 확인 및 수정\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"반품 품목 확인\" />\r\n                </ListItemButton>\r\n                <ListItemButton sx={{ pl: 4 }}>\r\n                  <ListItemText primary=\"납품 품목 확인\" />\r\n                </ListItemButton>\r\n              </List>\r\n            </Collapse>\r\n\r\n      <ListItemButton onClick={handleClickProduct}>\r\n                    <ListItemIcon>\r\n                      <Store />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"상품 관리\" />\r\n                    {openProduct ? <ExpandLess /> : <ExpandMore />}\r\n                  </ListItemButton>\r\n                  <Collapse in={openProduct} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 목록\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 검색\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 등록\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 수정\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton sx={{ pl: 4 }}>\r\n                        <ListItemText primary=\"상품 삭제\" />\r\n                      </ListItemButton>\r\n                    </List>\r\n                  </Collapse>\r\n    </React.Fragment>\r\n  );\r\n};","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Title;","import * as React from 'react';\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport Title from './Title';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nexport default function Deposits() {\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Deposits</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n        $3,024.00\r\n      </Typography>\r\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\r\n        on 15 March, 2019\r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          View balance\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { MainListItems } from './listItems';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport ListComponent from '../Manager/ListComponent';\r\nimport ReadComponent from '../Manager/ReadComponent';\r\nimport useCustomMove from '../../hooks/useCustomMove';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n\r\nimport Deposits from './Deposits';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ManagerRead from '../Manager/ReadPage';\r\nimport ManagerList from '../Manager/ListPage';\r\nimport AddPage from '../Manager/AddPage'; // AddPage 컴포넌트를 import 합니다.\r\nimport ListPage from '../Manager/ListPage'; // ListPage 컴포넌트를 import 합니다.\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    '& .MuiDrawer-paper': {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: 'border-box',\r\n      ...(!open && {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9),\r\n        },\r\n      }),\r\n    },\r\n    '& .MuiDrawer-paper > .admin-profile': { // 추가된 스타일\r\n      display: open ? 'block' : 'none',\r\n    },\r\n    '& .MuiDrawer-paper > *': {\r\n      overflowX: 'visible',\r\n    },\r\n  }),\r\n);\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Dashboard() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const { moveToRead } = useCustomMove(); // useCustomMove 훅에서 moveToRead 함수를 가져옵니다.\r\n  const handleRowClick = (userId) => {\r\n      moveToRead(userId); // moveToRead 함수를 호출합니다.\r\n      console.log(selectedUserId);\r\n    };\r\n    const { userId } = useParams();\r\n\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n  <>\r\n\r\n\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              pr: '24px', // keep right padding when drawer closed\r\n            }}\r\n          >\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={toggleDrawer}\r\n              sx={{\r\n                marginRight: '36px',\r\n                ...(open && { display: 'none' }),\r\n              }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              Dashboard\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              px: [1],\r\n            }}\r\n          >\r\n            {/* 관리자 프로필 사진 */}\r\n            <Avatar className=\"admin-profile\" src=\"/path/to/admin/profile.jpg\" />\r\n            <IconButton onClick={toggleDrawer}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n          <Divider />\r\n          <List component=\"nav\">\r\n            {MainListItems()}\r\n            <Divider sx={{ my: 1 }} />\r\n          </List>\r\n        </Drawer>\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3}>\r\n              {/* Chart */}\r\n              <Grid item xs={12} md={8} lg={9}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n\r\n                </Paper>\r\n              </Grid>\r\n              {/* Recent Deposits */}\r\n              <Grid item xs={12} md={4} lg={3}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <Deposits />\r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                  <Routes>\r\n                    <Route path=\"/add\" element={<AddPage />} />\r\n                    <Route path=\"/list\" element={<ListPage />} />\r\n                    <Route path=\"*\" element={<Outlet />} />\r\n                  </Routes>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <Copyright sx={{ pt: 4 }} />\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\r\n\r\nconst ResultModal = ({ title, content, callbackFn }) => {\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={callbackFn}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          {content}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\r\n          Close Modal\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ResultModal;","import { useCallback, useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst getNum = (param, defaultValue) => {\r\n\r\n    if(!param){\r\n    return defaultValue\r\n    }\r\n\r\n    return parseInt(param)\r\n}\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n\r\n      const navigate = useNavigate()\r\n\r\n      const [refresh, setRefresh] = useState(false)\r\n\r\n      const [queryParams] = useSearchParams()\r\n\r\n      const page = getNum(queryParams.get('page'), 1)\r\n      const size = getNum(queryParams.get('size'), 10)\r\n\r\n      const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n      const moveToList = (pageParam) => {\r\n      console.log('moveToList called with: ', pageParam);\r\n        let queryStr = \"\"\r\n         if(pageParam){\r\n\r\n          const pageNum = getNum(pageParam.page, 1)\r\n          const sizeNum = getNum(pageParam.size, 10)\r\n\r\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n      }  else {\r\n          queryStr = queryDefault\r\n         }\r\n\r\n         setRefresh(!refresh)\r\n\r\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\r\n       navigate({pathname: '/list', search: queryStr});\r\n      }\r\n\r\n     const moveToModify = useCallback((num) => {\r\n     console.log(queryDefault)\r\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\r\n     },[page,size])\r\n\r\n     const moveToRead = (userId) => {\r\n       console.log('userId:', userId); // userId 파라미터 로깅\r\n       console.log(queryDefault)\r\n       navigate({\r\n         pathname: `../read/${userId}`,\r\n         search: queryDefault\r\n       })\r\n     }\r\n\r\n\r\n     return {moveToList, moveToModify, moveToRead, page, size, refresh}\r\n   }\r\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","userId","data","getList","page","size","pageParam","params","postAdd","post","managerObj","deleteOne","delete","putOne","put","manager","initState","mname","mgender","mid","mpw","mtel","memail","mbirthDate","uadr","AddComponent","setManager","useState","result","setResult","moveToList","useCustomMove","handleChangeManager","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","onChange","inputProps","pattern","helperText","type","InputLabelProps","shrink","Button","onClick","handleClickAdd","then","date","Date","console","log","toISOString","catch","error","AddPage","Container","maxWidth","Typography","component","gutterBottom","_ref","serverData","movePage","display","justifyContent","p","prev","color","prevPage","pageNumList","map","pageNum","current","next","nextPage","dtoList","pageRequestDTO","totoalCount","totalPage","onRowClick","selectedUserId","setSelectedUserId","moveToRead","refresh","setServerData","managers","setManagers","useParams","useNavigate","useEffect","className","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","scope","colSpan","PageComponent","ListPage","queryParams","useSearchParams","ListComponent","mID","mPW","mName","mGender","mEmail","mProfileImage","uAdr","moveToModify","ReadPage","ReadComponent","MainListItems","openOrder","setOpenOrder","React","openSupplier","setOpenSupplier","openUser","setOpenUser","openInventory","setOpenInventory","openProduct","setOpenProduct","ListItemButton","marginLeft","flexDirection","alignItems","gap","marginBottom","ListItemAvatar","Avatar","alt","src","borderRadius","width","height","ListItemText","primary","Divider","handleClickOrder","ListItemIcon","DashboardIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","pl","handleClickSupplier","ShoppingCartIcon","handleClickUser","PeopleIcon","Link","to","handleClickInventory","Inventory","handleClickProduct","Store","props","preventDefault","event","Deposits","Title","flex","href","Copyright","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","_ref2","position","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","defaultTheme","createTheme","Dashboard","setOpen","toggleDrawer","ThemeProvider","CssBaseline","Toolbar","pr","IconButton","edge","marginRight","MenuIcon","noWrap","flexGrow","Badge","badgeContent","NotificationsIcon","px","ChevronLeftIcon","my","backgroundColor","palette","mode","grey","overflow","mt","mb","Grid","container","item","xs","md","lg","Routes","Route","path","element","Outlet","pt","Dialog","onClose","DialogTitle","id","DialogContent","DialogActions","autoFocus","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num"],"sourceRoot":""}