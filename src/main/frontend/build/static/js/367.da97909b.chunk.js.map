{"version":3,"file":"static/js/367.da97909b.chunk.js","mappings":"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","sources":["api/OrderApi.js","components/Order/ModifyComponent.js","components/Order/ModifyPage.js","components/common/ResultModal.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\n\n\nexport const API_SERVER_HOST = 'http://localhost:8080'\nconst prefix = `${API_SERVER_HOST}/api/orders`\n\nexport const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const getList = async (pageParam) => {\n  const {page, size} = pageParam\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\n  return res.data\n}\n\nexport const postAdd = async (orderObj) => {\n  const res = await axios.post(`${prefix}/`, orderObj)\n  return res.data\n}\n\nexport const deleteOne = async (id) => {\n  const res = await axios.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const putOne = async (order) => {\n  const res = await axios.put(`${prefix}/${order.id}`, {\n    id: order.id,\n    orderedProducts: order.orderedProducts,\n    totalPrice: order.totalPrice,\n    orderType: order.orderType,\n    pageRequestDTO: order.pageRequestDTO,\n    total: order.total\n  })\n  return res.data\n}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { deleteOne, getOne, putOne } from \"../../api/OrderApi\";\nimport { TextField, Button, Box } from '@mui/material';\n\nimport ResultModal from \"../common/ResultModal\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\n\nconst initState = {\n    id: 0,\n    orderType: '',\n    orderedProducts: '',\n    totalAmount: '',\n    totalPrice: '',\n    complete: false\n}\n\nconst ModifyComponent = ({ id, moveList }) => {\n\n    const [order, setOrder] = useState({ ...initState })\n\n    // 모달 창을 위한 상태\n    const [result, setResult] = useState(null)\n\n    // 이동을 위한 기능들\n    const { moveToList, OrdermoveToRead } = useCustomMove()\n\n    const handleClickModify = () => { // 버튼 클릭 시\n        putOne(order).then(data => {\n            console.log(\"modify result: \" + data)\n            setResult('Modified')\n        })\n    }\n\n    const handleClickDelete = () => { // 버튼 클릭 시\n        deleteOne(id).then(data => {\n            console.log(\"delete result: \" + data)\n            setResult('Deleted')\n        })\n    }\n\n    // 모달 창이 close될 때\n    const closeModal = () => {\n        if (result === 'Deleted') {\n            moveToList()\n        } else {\n            OrdermoveToRead(id)\n        }\n    }\n\n    useEffect(() => {\n        getOne(id).then(data => setOrder(data))\n    }, [id])\n\n    const handleChangeOrder = (e) => {\n        order[e.target.name] = e.target.value\n        setOrder({ ...order })\n    }\n\n    const handleChangeOrderComplete = (e) => {\n        const value = e.target.value\n        order.complete = (value === 'Y')\n        setOrder({ ...order })\n    }\n\n    return (\n        <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal> : <></>}\n\n            <TextField\n                label=\"Type\"\n                variant=\"outlined\"\n                name=\"orderType\"\n                value={order.orderType}\n                onChange={handleChangeOrder}\n            />\n            <TextField\n                label=\"Product\"\n                variant=\"outlined\"\n                name=\"orderedProducts\"\n                value={order.orderedProducts}\n                onChange={handleChangeOrder}\n            />\n            <TextField\n                label=\"Amount\"\n                variant=\"outlined\"\n                name=\"totalAmount\"\n                value={order.totalAmount}\n                onChange={handleChangeOrder}\n            />\n            <TextField\n                label=\"Price\"\n                variant=\"outlined\"\n                name=\"totalPrice\"\n                value={order.totalPrice}\n                onChange={handleChangeOrder}\n            />\n            <TextField\n                label=\"COMPLETE\"\n                variant=\"outlined\"\n                name=\"complete\"\n                value={order.complete ? 'Y' : 'N'}\n                onChange={handleChangeOrderComplete}\n                select\n                SelectProps={{\n                    native: true,\n                }}\n            >\n                <option value='Y'>Completed</option>\n                <option value='N'>Not Yet</option>\n            </TextField>\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\n                Delete\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickModify}>\n                Modify\n            </Button>\n        </Box>\n    );\n}\n\nexport default ModifyComponent;","import { useParams } from \"react-router-dom\";\nimport ModifyComponent from \"./ModifyComponent\";\n\nconst ModifyPage = () => {\n\n    const {id} = useParams()\n\n    return (\n        <div className=\"p-4 w-full bg-white\">\n            <div className=\"text-3xl font-extrabold\">\n                Order Modify Page\n            </div>\n\n            <ModifyComponent id={id}/>\n\n        </div>\n    );\n}\n\nexport default ModifyPage;\n","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\n\nconst ResultModal = ({ title, content, callbackFn }) => {\n  return (\n    <Dialog\n      open={true}\n      onClose={callbackFn}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"h4\" component=\"div\">\n          {content}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\n          Close Modal\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ResultModal;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n       navigate({pathname: '/list', search: queryStr});\n      }\n\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n     const moveToDashboard = () => {\n         navigate('/dashboard');\n       };\n\n\n     return {moveToList, moveToModify, moveToDashboard, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","id","data","getList","page","size","pageParam","params","postAdd","post","orderObj","deleteOne","delete","putOne","put","order","orderedProducts","totalPrice","orderType","pageRequestDTO","total","initState","totalAmount","complete","_ref","moveList","setOrder","useState","result","setResult","moveToList","OrdermoveToRead","useCustomMove","useEffect","then","handleChangeOrder","e","target","name","value","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","onChange","select","SelectProps","native","Button","color","onClick","handleClickDelete","console","log","handleClickModify","ModifyPage","useParams","className","ModifyComponent","Dialog","open","onClose","DialogTitle","DialogContent","Typography","component","DialogActions","autoFocus","getNum","param","defaultValue","parseInt","navigate","useNavigate","refresh","setRefresh","queryParams","useSearchParams","queryDefault","createSearchParams","toString","queryStr","pageNum","sizeNum","pathname","search","moveToModify","useCallback","num","moveToDashboard","moveToRead","userId"],"sourceRoot":""}