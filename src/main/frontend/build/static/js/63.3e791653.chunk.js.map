{"version":3,"file":"static/js/63.3e791653.chunk.js","mappings":"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","sources":["components/HomeUser.js","../node_modules/@mui/material/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/@mui/material/node_modules/react-is/index.js"],"sourcesContent":["\r\nimport React, { useEffect,useState} from 'react';\r\nimport axios from \"axios\";\r\nimport { Navigation , Autoplay }from 'swiper/modules';\r\nimport { Pagination as SwiperPagination } from 'swiper/modules';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\nimport './swiper.css';\r\nimport { useNavigate } from \"react-router-dom\"; // 페이지 이동을 위한 useNavigate 훅\r\nimport defaultImage from \"./sample/sample1.png\"; // 기본 이미지\r\nimport sample1 from \"./sample/3S 웜업 팬츠.png\";\r\nimport sample2 from \"./sample/PL 티.jpg\";\r\nimport sample3 from \"./sample/SI 워드 크루 스웨트.jpg\";\r\nimport sample4 from \"./sample/다운 리젠 푸퍼.jpg\";\r\nimport sample5 from \"./sample/락업 카키 트레포일 트랙탑 자켓.png\";\r\nimport sample6 from \"./sample/리버서블 쉐르파 재킷.jpg\";\r\nimport sample7 from \"./sample/보아 자켓.jpg\";\r\nimport sample8 from \"./sample/쉐르파 롱코트.jpg\";\r\nimport sample9 from \"./sample/아디컬러 에센셜 플리스 조거.png\";\r\nimport sample10 from \"./sample/아디컬러 풀 집업 후디.png\";\r\nimport sample11 from \"./sample/아르헨티나 아이콘 셔츠.png\";\r\nimport sample12 from \"./sample/에센셜 패디드 퍼퍼 재킷.png\";\r\nimport sample13 from \"./sample/우븐 SST 아노락.png\";\r\nimport sample14 from \"./sample/우븐 78 팬츠.jpg\";\r\nimport sample15 from \"./sample/클럽 쇼츠.png\";\r\nimport sample16 from \"./sample/테렉스 쇼츠.jpg\";\r\nimport sample17 from \"./sample/테렉스 아그라빅 쇼츠.png\";\r\nimport sample18 from \"./sample/플리스 크루 스웨트.png\";\r\n\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n\r\n\r\nimport {\r\n    Avatar,\r\n    BottomNavigationAction,\r\n    Box,\r\n    Breadcrumbs,\r\n    ButtonGroup,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Divider,\r\n    Drawer,\r\n    FormControl,\r\n    Grid,\r\n    Icon,\r\n    InputAdornment,\r\n    Link,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Pagination,\r\n    ToggleButton,\r\n    ToggleButtonGroup\r\n} from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function HomeUser() {\r\n    {/*메뉴 이벤트 관리*/}\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n    const [anchorElProduct, setAnchorElProduct] = useState(null);\r\n    const [anchorElOrdersheet, setAnchorElOrdersheet] = useState(null);\r\n    const [anchorElInventory, setAnchorElInventory] = useState(null);\r\n    const [anchorElSupplier, setAnchorElSupplier] = useState(null);\r\n\r\n    const handleUserClick = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleProductClick = (event) => {\r\n        setAnchorElProduct(event.currentTarget);\r\n    };\r\n\r\n    const handleOrdersheetClick = (event) => {\r\n        setAnchorElOrdersheet(event.currentTarget);\r\n    };\r\n\r\n    const handleInventoryClick = (event) => {\r\n        setAnchorElInventory(event.currentTarget);\r\n    };\r\n\r\n    const handleSupplierClick = (event) => {\r\n        setAnchorElSupplier(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const handleCloseProduct = () => {\r\n        setAnchorElProduct(null);\r\n    };\r\n\r\n    const handleCloseOrdersheet = () => {\r\n        setAnchorElOrdersheet(null);\r\n    };\r\n\r\n    const handleCloseInventory = () => {\r\n        setAnchorElInventory(null);\r\n    };\r\n\r\n    const handleCloseSupplier = () => {\r\n        setAnchorElSupplier(null);\r\n    };\r\n\r\n    const openUser = Boolean(anchorElUser);\r\n    const openProduct = Boolean(anchorElProduct);\r\n    const openOrdersheet = Boolean(anchorElOrdersheet);\r\n    const openInventory = Boolean(anchorElInventory);\r\n    const openSupplier = Boolean(anchorElSupplier);\r\n\r\n\r\n    /* 백엔드에서 가져올 상품정보 */\r\n    // 상품 데이터를 저장할 state\r\n    const [products, setProducts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 번호\r\n    const [sortOrder, setSortOrder] = useState('default'); // 기본 정렬 상태\r\n    const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 추가\r\n    const [filteredProducts, setFilteredProducts] = useState([]); // 필터링된 상품 상태\r\n    const productsPerPage = 6; // 페이지당 상품 수\r\n    const navigate = useNavigate(); // 페이지 이동을 위한 useNavigate 선언\r\n    const [user, setUser] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 관리\r\n\r\n\r\n    // 데이터베이스에서 상품 데이터를 가져오는 함수\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8080/products/list\");\r\n                setProducts(response.data.products);\r\n                setFilteredProducts(response.data.products); // 초기값으로 모든 상품 설정\r\n            } catch (error) {\r\n                console.error(\"Error fetching product data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const handleAvatarClick = () => {\r\n        // 네비게이션으로 /mypage 경로로 이동\r\n        navigate('/mypage', { state: { user } });\r\n    };\r\n\r\n\r\n    // Axios 요청에 withCredentials 옵션 추가\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/user/current-user', {\r\n                    withCredentials: true // 세션 쿠키 전달을 위한 설정\r\n                });\r\n                console.log(response.data); // 확인용 로그\r\n                setUser(response.data);\r\n                setIsLoggedIn(true); // 로그인 처리\r\n            } catch (error) {\r\n                console.error(\"사용자 정보 가져오기 오류:\", error);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n    // 로그아웃 함수\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.post('http://localhost:8080/api/user/logout', {}, { withCredentials: true });\r\n            window.location.href = \"/homeuser\"; // 페이지 새로고침\r\n            setIsLoggedIn(false); // 로그아웃 처리\r\n            sessionStorage.clear(); // sessionStorage 비우기\r\n        } catch (error) {\r\n            console.error(\"로그아웃 실패:\", error);\r\n        }\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        navigate('/signin');  // 로그인 페이지 이동\r\n    };\r\n\r\n    const handleSignup = () => {\r\n        navigate('/signup');  // 회원가입 페이지 이동\r\n    };\r\n\r\n    const handleCart = () => {\r\n        navigate('/cart');  // 로그인 페이지 이동\r\n    };\r\n\r\n    // 가격 정렬 함수\r\n    const handleSort = (order) => {\r\n        let sortedProducts;\r\n        if (order === 'asc') {\r\n            sortedProducts = [...filteredProducts].sort((a, b) => a.price - b.price);\r\n        } else if (order === 'desc') {\r\n            sortedProducts = [...filteredProducts].sort((a, b) => b.price - a.price);\r\n        } else {\r\n            sortedProducts = products; // 초기 상태로 되돌리기\r\n        }\r\n        setFilteredProducts(sortedProducts);\r\n        setSortOrder(order);\r\n        setCurrentPage(1); // 정렬 후 페이지를 1로 초기화\r\n    };\r\n\r\n\r\n\r\n    // 현재 페이지에 표시할 상품 계산\r\n    const indexOfLastProduct = currentPage * productsPerPage; // 현재 페이지의 마지막 상품 인덱스\r\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage; // 현재 페이지의 첫 번째 상품 인덱스\r\n    const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct); // 필터링된 현재 페이지에서 보여줄 상품들\r\n    const bannerProducts = [...products].sort((a, b) => b.amount - a.amount);\r\n\r\n    // 총 페이지 수 계산\r\n    const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n\r\n    // 페이지 변경 함수\r\n    const handlePageChange = (event, value) => {\r\n        setCurrentPage(value); // 페이지 번호 업데이트\r\n    };\r\n\r\n    // 상품 클릭 시 상세 화면으로 이동\r\n    const handleCardClick = (productId) => {\r\n        navigate(`/itempurchase/${productId}`, { state: { isLoggedIn } }); // 상품 ID와 함께 구매 페이지로 이동 , 로그인 상태 전달\r\n    };\r\n\r\n\r\n\r\n    // 검색 수행 함수\r\n    const handleSearch = () => {\r\n        const results = products.filter(product =>\r\n            product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setFilteredProducts(results);\r\n        setCurrentPage(1); // 검색 후 페이지를 1로 초기화\r\n    };\r\n\r\n\r\n\r\n    {/*상품 메뉴 옆 Drawer*/}\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggleDrawer = (newOpen) => () => {\r\n        setOpen(newOpen);\r\n    };\r\n    const DrawerList = (\r\n        <Box sx={{ width: 250 }} role=\"presentation\" onClick={toggleDrawer(false)}>\r\n            <List>\r\n                {['전체보기'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                <MenuIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['상의','아우터','바지'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <MenuIcon /> : <MenuIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    {/*상품 정렬 타입*/}\r\n    const [sortType, setSortType] = useState('popularity');\r\n\r\n    const handleSortTypeChange = (event, newSortType) => {\r\n        if (newSortType !== null) {\r\n            setSortType(newSortType);\r\n        }\r\n    };\r\n\r\n    const openManagerList = () => {\r\n        window.open('http://localhost:3000/dashboard', '_blank', 'noopener,noreferrer'); // 새로운 팝업 열기\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/*최상단의 페이지 로고 및 프로필, 로그인 ,회원가입*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'white', color: 'black' }}>\r\n                {/*상단페이지*/}\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\r\n                        <Icon sx={{ mr: 1 }} />\r\n                    </IconButton>\r\n                    <Typography align=\"left\" variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                        메인페이지\r\n                    </Typography>\r\n                    {user && user.role === 2 && (\r\n                        <Button color=\"inherit\" sx={{ mr: 2 }} onClick={openManagerList}>\r\n                            관리자 페이지\r\n                        </Button>\r\n                    )}\r\n\r\n\r\n                    {isLoggedIn ? (\r\n                        <Avatar onClick={handleAvatarClick} style={{ cursor: 'pointer' }}>\r\n                            {user.cname.charAt(0)}\r\n                        </Avatar>// 사용자의 이름의 첫 글자를 Avatar에 표시\r\n                    ) : (\r\n                        <h1></h1>\r\n                    )}\r\n                    {isLoggedIn ? ( // 로그인 여부에따라 버튼 다르게 뜨도록\r\n                        <>\r\n                            <Button color=\"inherit\" onClick={handleCart}>장바구니</Button>\r\n                            <Button color=\"inherit\" onClick={handleLogout}>로그아웃</Button>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Button color=\"inherit\" onClick={handleLogin}>로그인</Button>\r\n                            <Button color=\"inherit\" onClick={handleSignup}>회원가입</Button>\r\n                        </>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Divider />\r\n            {/*상품 목록 메뉴*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'white', color: 'black'}}>\r\n                <Toolbar>\r\n                    <div>\r\n                        <Button sx={{ color: 'black' }} onClick={toggleDrawer(true)}>\r\n                            <MenuIcon/>\r\n                        </Button>\r\n                        <Drawer open={open} onClose={toggleDrawer(false)}>\r\n                            {DrawerList}\r\n                        </Drawer>\r\n                    </div>\r\n\r\n                    <Button sx={{ width : 90, color: 'black' }}>상의</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>아우터</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Button sx={{ width : 90, color: 'black' }}>바지</Button>\r\n                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <FormControl sx={{ width: '25ch', bgcolor: 'white' }} size=\"small\">\r\n                            <OutlinedInput\r\n                                placeholder=\"검색어를 입력하세요\"\r\n                                value={searchTerm} // 입력한 검색어 상태를 value로 설정\r\n                                onChange={(e) => setSearchTerm(e.target.value)} // 검색어 업데이트\r\n                                sx={{\r\n                                    '& .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                    '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                                        borderColor: 'red',\r\n                                        borderWidth: '2px',\r\n                                    },\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton edge=\"end\" onClick={handleSearch}> {/* 클릭 시 handleSearch 호출 */}\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/*상품 배너*/}\r\n            <Box sx={{ bgcolor: 'lightgray', p: 2 }}>\r\n                <Swiper autoplay={true} pagination={true} navigation={true} modules={[Navigation , SwiperPagination , Autoplay]} className=\"mySwiper\">\r\n                    {bannerProducts.length === 0 ? (\r\n                        <Typography variant=\"h6\" color=\"text.secondary\" sx={{ marginLeft: 4 }}>\r\n                            일치하는 상품이 없습니다.\r\n                        </Typography>\r\n                    ) : (\r\n                        bannerProducts.map((product) => (\r\n                            <SwiperSlide>\r\n                                <Card\r\n                                    onClick={() => handleCardClick(product.id)} // 클릭 시 페이지 이동\r\n                                    sx={{ cursor: 'pointer' }} // 커서를 포인터로 변경\r\n                                >\r\n                                    <CardContent>\r\n                                        <CardMedia\r\n                                            sx={{ height: 200 }}\r\n                                            image={\r\n                                                product.itemImage\r\n                                                    ? `data:image/jpeg;base64,${product.itemImage}`\r\n                                                    : defaultImage // 기본 이미지 사용\r\n                                            }\r\n                                            title={product.name}\r\n                                        />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </SwiperSlide>\r\n                        ))\r\n                    )}\r\n                </Swiper>\r\n            </Box>\r\n            {/*상품 정렬 타입 선택*/}\r\n            <Box sx={{ display: 'flex', justifyContent: 'right', my: 2 }}>\r\n                <ToggleButtonGroup\r\n                    value={sortType}\r\n                    exclusive\r\n                    onChange={handleSortTypeChange}\r\n                    aria-label=\"sort type\"\r\n                >\r\n                    <ToggleButton value=\"recent\" aria-label=\"recent\" onClick={() => handleSort(null)}>\r\n                        최신순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"lowPrice\" aria-label=\"low price\" onClick={() => handleSort('asc')}>\r\n                        가격이 낮은 순\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"highPrice\" aria-label=\"high price\" onClick={() => handleSort('desc')}>\r\n                        가격이 높은 순\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Box>\r\n            {/*하단의 상품 정렬 페이지*/}\r\n            <Grid container spacing={2}>\r\n                {currentProducts.length === 0 ? (\r\n                    <Typography variant=\"h6\" color=\"text.secondary\" sx={{ marginLeft: 4 }}>\r\n                        일치하는 상품이 없습니다.\r\n                    </Typography>\r\n                ) : (\r\n                    currentProducts.map((product) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                            <Card\r\n                                onClick={() => handleCardClick(product.id)} // 클릭 시 페이지 이동\r\n                                sx={{ cursor: 'pointer' }} // 커서를 포인터로 변경\r\n                            >\r\n                                <CardContent>\r\n                                    <CardMedia\r\n                                        sx={{ height: 400 }}\r\n                                        image={\r\n                                            product.itemImage\r\n                                                ? `data:image/jpeg;base64,${product.itemImage}`\r\n                                                : defaultImage // 기본 이미지 사용\r\n                                        }\r\n                                        title={product.name}\r\n                                    />\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                        {product.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        가격: {product.price}원\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n\r\n            {/*상품 이동 페이지네이션*/}\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 , pt: 4 , pb : 6}}>\r\n                <Pagination\r\n                    count={totalPages} // 총 페이지 수\r\n                    page={currentPage} // 현재 페이지\r\n                    onChange={handlePageChange} // 페이지 변경 함수\r\n                    variant=\"outlined\" // 스타일 설정\r\n                    shape=\"rounded\" // 모양 설정\r\n                />\r\n            </Box>\r\n            {/*홈페이지의 최하단 네비게이션*/}\r\n            <AppBar position=\"static\" sx={{ bgcolor: 'gray', color: 'black' ,height: 50}}>\r\n                <Toolbar></Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n"],"names":["HomeUser","anchorElUser","setAnchorElUser","useState","anchorElProduct","setAnchorElProduct","anchorElOrdersheet","setAnchorElOrdersheet","anchorElInventory","setAnchorElInventory","anchorElSupplier","setAnchorElSupplier","products","setProducts","Boolean","currentPage","setCurrentPage","sortOrder","setSortOrder","searchTerm","setSearchTerm","filteredProducts","setFilteredProducts","navigate","useNavigate","user","setUser","isLoggedIn","setIsLoggedIn","useEffect","async","response","axios","get","data","error","console","fetchProducts","withCredentials","log","fetchUser","handleSort","order","sortedProducts","sort","a","b","price","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","bannerProducts","amount","totalPages","Math","ceil","length","handleCardClick","productId","concat","state","open","setOpen","React","toggleDrawer","newOpen","DrawerList","_jsxs","Box","sx","width","role","onClick","children","_jsx","List","map","text","index","ListItem","disablePadding","ListItemButton","ListItemIcon","MenuIcon","ListItemText","primary","Divider","sortType","setSortType","className","AppBar","position","bgcolor","color","Toolbar","IconButton","edge","mr","Icon","Typography","align","variant","flexGrow","Button","openManagerList","window","Avatar","handleAvatarClick","style","cursor","cname","charAt","_Fragment","handleCart","post","location","href","sessionStorage","clear","handleLogin","handleSignup","Drawer","onClose","orientation","flexItem","noValidate","autoComplete","FormControl","size","OutlinedInput","placeholder","value","onChange","e","target","borderColor","borderWidth","endAdornment","InputAdornment","handleSearch","results","filter","product","name","toLowerCase","includes","SearchIcon","p","Swiper","autoplay","pagination","navigation","modules","Navigation","SwiperPagination","Autoplay","marginLeft","SwiperSlide","Card","id","CardContent","CardMedia","height","image","itemImage","defaultImage","title","display","justifyContent","my","ToggleButtonGroup","exclusive","handleSortTypeChange","event","newSortType","ToggleButton","Grid","container","spacing","item","xs","sm","md","gutterBottom","component","mt","pt","pb","Pagination","count","page","handlePageChange","shape","u","Symbol","for","c","d","f","g","h","k","l","m","n","q","t","v","r","$$typeof","type","module"],"sourceRoot":""}