{"version":3,"file":"static/js/529.fc2d436d.chunk.js","mappings":"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","sources":["api/OrderApi.js","components/Order/ListComponent.js","components/Order/ListPage.js","components/Order/ReadComponent.js","components/Order/ReadPage.js","components/common/PageComponent.js","hooks/useCustomMove.js"],"sourcesContent":["import axios from \"axios\"\n\n\nexport const API_SERVER_HOST = 'http://localhost:8080'\nconst prefix = `${API_SERVER_HOST}/api/orders`\n\nexport const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const getList = async (pageParam) => {\n  const {page, size} = pageParam\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\n  return res.data\n}\n\nexport const postAdd = async (orderObj) => {\n  const res = await axios.post(`${prefix}/`, orderObj)\n  return res.data\n}\n\nexport const deleteOne = async (id) => {\n  const res = await axios.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const putOne = async (order) => {\n  const res = await axios.put(`${prefix}/${order.id}`, {\n    id: order.id,\n    orderedProducts: order.orderedProducts,\n    totalPrice: order.totalPrice,\n    orderType: order.orderType,\n    pageRequestDTO: order.pageRequestDTO,\n    total: order.total\n  })\n  return res.data\n}","import { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, useParams } from 'react-router-dom';\nimport { getList, getOne } from \"../../api/OrderApi\";\nimport useCustomMove from \"../../hooks/useCustomMove\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport ReadComponent from './ReadComponent';\nimport { useNavigate } from 'react-router-dom';\nimport PageComponent from \"../common/PageComponent\";\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport ReadPage from './ReadPage';\n\n\nconst initState = {\n  dtoList:[], pageNumList:[], pageRequestDTO: null, prev: false, next: false,\n  totoalCount: 0, prevPage: 0, nextPage: 0, totalPage: 0, current: 0\n}\n\nconst ListComponent = ({ onRowClick }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const {moveToRead, page, size, refresh, moveToList} = useCustomMove()\n  const [serverData, setServerData] = useState(initState)\n  const [order, setOrder] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const handleRowClick = (order) => {\n        setSelectedId(order.id);\n        setOpenModal(true);\n      };\n\n  const handleCloseModal = () => {\n          setOpenModal(false);\n      };\n\n  useEffect(() => {\n    getList({page,size}).then(data => {\n      console.log(data)\n      setServerData(data)\n      setOrder(data.dtoList) // setOrder function\n      console.log(data.dtoList)\n    })\n    .catch(error => {\n      console.error('Error fetching data: ', error);\n      setOrder([]); // API 호출 실패 시 order를 빈 배열로 설정\n    });\n  }, [page,size, refresh]);\n  return (\n    <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\n      <div className=\"flex flex-wrap mx-auto justify-center p-6\">\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>id</TableCell>\n                <TableCell align=\"right\">주문 ID</TableCell>\n                <TableCell align=\"right\">주문종류</TableCell>\n                <TableCell align=\"right\">주문한 상품</TableCell>\n                <TableCell align=\"right\">총수량</TableCell>\n                <TableCell align=\"right\">총가격</TableCell>\n\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {order.length > 0 ? order.map(order =>\n                <TableRow\n                  key={order.id}\n                  onClick={() => {\n                    handleRowClick(order);\n                    console.log(`Row clicked with id: ${order.id}`); // 로깅하여 확인\n                    onRowClick(order.id);\n                  }}\n                  style={{ cursor: 'pointer' }}\n                >\n\n                  <TableCell component=\"th\" scope=\"row\">\n                    {order.id}\n                  </TableCell>\n                  <TableCell align=\"right\">{order.id}</TableCell>\n                  <TableCell align=\"right\">{order.orderType}</TableCell>\n                  <TableCell align=\"right\">\n                    {order.orderedProducts.map((product, index) => (\n                      <p key={index}>{product.name}</p>\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"right\">{order.totalAmount}</TableCell>\n                  <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                </TableRow>\n              ) : <TableRow><TableCell colSpan={9}>No data</TableCell></TableRow>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <PageComponent serverData={serverData} movePage={moveToList} setOrder={setOrder}></PageComponent>\n      <Modal\n        open={openModal}\n        onClose={handleCloseModal}\n      >\n        <Box sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '80vw',\n          height: '80vh',\n          overflow: 'auto',\n          bgcolor: 'background.paper',\n        }}>\n          {selectedId && <ReadPage id={selectedId} />}\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ListComponent;","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ListComponent from \"./ListComponent\";\n\n\n\n  const ListPage = () => {\n\n    const [queryParams] = useSearchParams()\n    const page = queryParams.get(\"page\") ||1\n    const size = queryParams.get(\"size\") ||10\n    const handleRowClick = (id) => {\n        console.log(`Row with id ${id} was clicked`);\n        // 여기에 행 클릭 시 수행할 작업을 추가합니다.\n      };\n\n    return (\n    <div className=\"p-4 w-full bg-orange-200 \">\n     <div className=\"text-3xl font-extrabold\">\n       Order List Page Component\n     </div>\n     <ListComponent onRowClick={handleRowClick} />\n\n     <div>{page}</div>\n\n    </div>\n    );\n  }\nexport default ListPage;\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getOne } from \"../../api/OrderApi\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport  useCustomMove  from \"../../hooks/useCustomMove\";\nimport * as OrderApi from '../../api/OrderApi.js';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport axios from 'axios';\n\nconst initState = {\n    id: 0,\n    orderedProducts: '',\n    totalPrice: '',\n    orderType: '',\n    supplier: '',\n}\n\nfunction ReadComponent({ id }) {\n\n    const [order, setOrder] = useState(initState);\n    const [openModal, setOpenModal] = useState(false);\n    const {moveToList, moveToModify} = useCustomMove();\n\n\n    const handleOpenModal = () => {\n        setOpenModal(true);\n      };\n\n      const handleCloseModal = () => {\n        setOpenModal(false);\n      };\n\n    useEffect(() => {\n        // API에서 주문서 정보를 가져오는 함수\n        const fetchOrderDetails = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/orders/${id}`);\n                setOrder(response.data); // 주문서 데이터를 상태로 저장\n            } catch (error) {\n                console.error('Error fetching the order details:', error);\n            }\n        };\n\n        fetchOrderDetails(); // useEffect 호출 시 데이터를 가져옴\n    }, [id]);\n\n\n    return(\n        <>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Order ID</TableCell>\n                            <TableCell align=\"right\">주문종류</TableCell>\n                            <TableCell align=\"right\">주문한 상품</TableCell>\n                            <TableCell align=\"right\">총수량</TableCell>\n                            <TableCell align=\"right\">총가격</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        <TableRow>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {order.id} {/* 주문 ID */}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {order.orderType} {/* 주문 종류 */}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {Array.isArray(order.orderedProducts) ? order.orderedProducts.map((product, index) => (\n                              <p key={index}>{product.name}</p>\n                            )) : 'No products'}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {order.totalAmount} {/* 총 수량 */}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {order.totalPrice} {/* 총 가격 */}\n                          </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n        </>\n\n    );\n}\n\nexport default ReadComponent;","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReadComponent from \"./ReadComponent\";\nimport { Typography, Paper, Box, Modal, Button } from '@mui/material';\nimport axios from 'axios';\n\n\n\n\nconst ReadPage = ({ id }) => {\n  //const { id } = useParams(); // URL 파라미터에서 주문서의 ID를 가져옵니다.\n  const [open, setOpen] = useState(false); // 모달창의 상태를 관리하는 상태를 생성합니다.\n\n    const handleOpen = () => setOpen(true); // 모달창을 열기 위한 함수를 생성합니다.\n    const handleClose = () => setOpen(false); // 모달창을 닫기 위한 함수를 생성합니다.\n    const order = async (id) => {\n        try {\n          await axios.get(`http://localhost:8080/api/orders/order/${id}`); // 백엔드 서버의 주소와 경로를 적절히 수정해야 합니다.\n          alert('주문이 완료되었습니다.');\n        } catch (error) {\n          console.error('주문 중 오류가 발생했습니다:', error);\n        }\n      };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 6 }}>\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\n        Order Receipt\n      </Typography>\n      <Paper elevation={3} sx={{ p: 2, width: '80%', mt: 2 }}>\n        <ReadComponent id={id} /> {/* 주문서의 ID를 ReadComponent 컴포넌트에 prop으로 전달합니다. */}\n      </Paper>\n      <Box mt={2}> {/* 주문하기 버튼에 상단 마진을 추가합니다. */}\n              <Button variant=\"contained\" color=\"primary\" onClick={() => order(id)}>\n                    주문하기\n                  </Button>\n              </Box>\n    </Box>\n  );\n}\n\nexport default ReadPage;","import React from 'react';\nimport { Box, Button } from '@mui/material';\n\nconst PageComponent = ({serverData, movePage}) => {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', m: 1, p: 1 }}>\n      {serverData.prev ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage({page:serverData.prevPage})}>\n          Prev\n        </Button> : null}\n      {serverData.pageNumList.map(pageNum =>\n        <Button key={pageNum} variant=\"contained\" color={serverData.current === pageNum? 'secondary':'primary'} onClick={() => movePage( {page:pageNum})}>\n          {pageNum}\n        </Button>\n      )}\n      {serverData.next ?\n        <Button variant=\"contained\" color=\"primary\" onClick={() => movePage( {page:serverData.nextPage})}>\n          Next\n        </Button> : null}\n    </Box>\n  );\n}\n\nexport default PageComponent;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n       navigate({pathname: '/list', search: queryStr});\n      }\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n\n     return {moveToList, moveToModify, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;"],"names":["prefix","concat","getOne","async","axios","get","id","data","getList","page","size","pageParam","params","postAdd","post","orderObj","deleteOne","delete","putOne","put","order","orderedProducts","totalPrice","orderType","pageRequestDTO","total","initState","dtoList","pageNumList","prev","next","totoalCount","prevPage","nextPage","totalPage","current","_ref","onRowClick","openModal","setOpenModal","useState","selectedId","setSelectedId","moveToRead","refresh","moveToList","useCustomMove","serverData","setServerData","setOrder","useParams","useNavigate","useEffect","then","console","log","catch","error","_jsxs","className","children","_jsx","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","length","map","onClick","handleRowClick","style","cursor","scope","product","index","name","totalAmount","colSpan","PageComponent","movePage","Modal","open","onClose","handleCloseModal","Box","position","top","left","transform","width","height","overflow","bgcolor","ReadPage","ListPage","queryParams","useSearchParams","ListComponent","supplier","moveToModify","response","fetchOrderDetails","_Fragment","Array","isArray","setOpen","display","flexDirection","alignItems","mt","Typography","variant","gutterBottom","elevation","p","ReadComponent","Button","color","alert","justifyContent","m","pageNum","getNum","param","defaultValue","parseInt","navigate","setRefresh","queryDefault","createSearchParams","toString","queryStr","sizeNum","pathname","search","useCallback","num","userId"],"sourceRoot":""}