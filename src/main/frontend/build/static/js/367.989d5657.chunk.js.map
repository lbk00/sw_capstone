{"version":3,"file":"static/js/367.989d5657.chunk.js","mappings":"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","sources":["api/OrderApi.js","components/Order/ModifyComponent.js","components/Order/ModifyPage.js","components/common/ResultModal.js","hooks/useCustomMove.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js"],"sourcesContent":["import axios from \"axios\"\n\n\nexport const API_SERVER_HOST = 'http://localhost:8080'\nconst prefix = `${API_SERVER_HOST}/api/orders`\n\nexport const getOne = async (id) => {\n  const res = await axios.get(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const getList = async (pageParam) => {\n  const {page, size} = pageParam\n  const res = await axios.get(`${prefix}/list`, {params: {page: page, size: size}})\n  return res.data\n}\n\nexport const postAdd = async (orderObj) => {\n  const res = await axios.post(`${prefix}/`, orderObj)\n  return res.data\n}\n\nexport const deleteOne = async (id) => {\n  const res = await axios.delete(`${prefix}/${id}`)\n  return res.data\n}\n\nexport const putOne = async (order) => {\n  const res = await axios.put(`${prefix}/${order.id}`, {\n    id: order.id,\n    orderedProducts: order.orderedProducts,\n    totalPrice: order.totalPrice,\n    orderType: order.orderType,\n    pageRequestDTO: order.pageRequestDTO,\n    total: order.total\n  })\n  return res.data\n}","import React, { useState } from \"react\";\r\nimport { postAdd } from \"../../api/OrderApi\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport { TextField, Button, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst initState = {\r\n\r\n    orderType : '',\r\n    orderedProducts : '',\r\n    totalAmount : '',\r\n    totalPrice : '',\r\n\r\n\r\n\r\n}\r\n\r\nconst ModifyComponent = ({id}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [order, setOrder] = useState({\r\n        orderedProducts: '',  // 제품 ID들을 입력받을 필드\r\n        totalAmount: ''       // 수량을 입력받을 필드\r\n    });\r\n\r\n    const handleChangeOrder = (e) => {\r\n        const { name, value } = e.target;\r\n        setOrder((prevOrder) => ({\r\n            ...prevOrder,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleClickUpdate = async () => {\r\n        // 제품 ID와 수량을 배열로 변환\r\n        const productIds = order.orderedProducts.split(',').map(id => Number(id.trim()));\r\n        const amounts = order.totalAmount.split(',').map(amount => Number(amount.trim()));\r\n\r\n        const payload = {\r\n            id: productIds,      // 제품 ID 배열\r\n            amount: amounts      // 수량 배열\r\n        };\r\n\r\n        try {\r\n            // PUT 요청을 통해 서버로 수정된 주문 데이터 전송\r\n            const response = await axios.put(`http://localhost:8080/api/orders/${id}`, payload);\r\n            alert('주문서가 성공적으로 수정되었습니다.');\r\n            window.location.href = 'http://localhost:3000/dashboard';\r\n            console.log('Order successfully updated:', response.data);\r\n        } catch (error) {\r\n            console.error('There was an error updating the order!', error);\r\n        }\r\n    };\r\n    const [result, setResult] = useState(null)\r\n    const {moveToList} = useCustomMove()\r\n\r\n\r\n    const closeModal = () => {\r\n        setResult(null)\r\n        moveToList()\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ '& > :not(style)': { m: 1 } }}>\r\n            {result ? <ResultModal title={'Add Result'} content={`New ${result} Added`} callbackFn={closeModal}/>: <></>}\r\n            <TextField\r\n                label=\"Amount\"\r\n                variant=\"outlined\"\r\n                name=\"totalAmount\"\r\n                value={order.totalAmount}\r\n                onChange={handleChangeOrder}\r\n                placeholder=\"Enter amounts (e.g., 1, 5)\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n            />\r\n            <Button variant=\"contained\" onClick={handleClickUpdate}>\r\n                수정\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ModifyComponent;","import { useParams } from \"react-router-dom\";\r\nimport ModifyComponent from \"./ModifyComponent\";\r\n\r\nconst ModifyPage = ({id}) => {\r\n\r\n    //const {id} = useParams()\r\n\r\n    return (\r\n        <div className=\"p-4 w-full bg-white\">\r\n            <ModifyComponent id={id}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModifyPage;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\n\nconst ResultModal = ({ title, content, callbackFn }) => {\n  return (\n    <Dialog\n      open={true}\n      onClose={callbackFn}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"h4\" component=\"div\">\n          {content}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={callbackFn} color=\"primary\" autoFocus>\n          Close Modal\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ResultModal;","import { useCallback, useState } from \"react\"\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\n\n\n\nconst getNum = (param, defaultValue) => {\n\n    if(!param){\n    return defaultValue\n    }\n\n    return parseInt(param)\n}\n\n\nconst useCustomMove = () => {\n\n\n      const navigate = useNavigate()\n\n      const [refresh, setRefresh] = useState(false)\n\n      const [queryParams] = useSearchParams()\n\n      const page = getNum(queryParams.get('page'), 1)\n      const size = getNum(queryParams.get('size'), 10)\n\n      const queryDefault = createSearchParams({page, size}).toString()\n\n      const moveToList = (pageParam) => {\n      console.log('moveToList called with: ', pageParam);\n        let queryStr = \"\"\n         if(pageParam){\n\n          const pageNum = getNum(pageParam.page, 1)\n          const sizeNum = getNum(pageParam.size, 10)\n\n          queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\n      }  else {\n          queryStr = queryDefault\n         }\n\n         setRefresh(!refresh)\n\n       console.log('Navigating to: ', {pathname: '/list', search: queryStr}); // Check the navigate function\n\n      }\n\n\n     const moveToModify = useCallback((num) => {\n     console.log(queryDefault)\n     navigate({ pathname: `../modify/${num}`, search: queryDefault })\n     },[page,size])\n\n     const moveToRead = (userId) => {\n       console.log('userId:', userId); // userId 파라미터 로깅\n       console.log(queryDefault)\n       navigate({\n         pathname: `../read/${userId}`,\n         search: queryDefault\n       })\n     }\n\n     const moveToDashboard = () => {\n         navigate('/dashboard');\n       };\n\n\n     return {moveToList, moveToModify, moveToDashboard, moveToRead, page, size, refresh}\n   }\nexport default useCustomMove;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n      className,\n      disableSpacing = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;"],"names":["prefix","concat","getList","async","page","size","pageParam","axios","get","params","data","_ref","id","useNavigate","order","setOrder","useState","orderedProducts","totalAmount","result","setResult","moveToList","useCustomMove","_jsxs","Box","sx","m","children","_jsx","ResultModal","title","content","callbackFn","closeModal","_Fragment","TextField","label","variant","name","value","onChange","e","target","prevOrder","placeholder","fullWidth","margin","Button","onClick","productIds","split","map","Number","trim","payload","amount","response","put","alert","window","location","href","console","log","error","className","ModifyComponent","Dialog","open","onClose","DialogTitle","DialogContent","Typography","component","DialogActions","color","autoFocus","getNum","param","defaultValue","parseInt","navigate","refresh","setRefresh","queryParams","useSearchParams","queryDefault","createSearchParams","toString","queryStr","pageNum","sizeNum","pathname","search","moveToModify","useCallback","num","moveToDashboard","moveToRead","userId","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","justifyContent","flex","marginLeft","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx"],"sourceRoot":""}